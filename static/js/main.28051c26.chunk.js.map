{"version":3,"sources":["assets/search_engine.png","images/Register.svg","assets/calendar.png","assets/attach.png","assets/laugh.png","assets/whiteBlob.png","images/FriendPage.svg","assets/friend2.png","assets/following_the_idea.png","assets/Gradient_BG.png","components/Notifications.jsx","components/Friends.jsx","components/Menu.jsx","components/ScheduleView.jsx","components/SavedSchedule.jsx","components/SchedViewHome.jsx","components/ComboBox.jsx","pages/Index.jsx","pages/Login.jsx","pages/Register.jsx","pages/ResetPassword.jsx","pages/ResetPasswordDone.jsx","pages/ResetPasswordConfirm.jsx","pages/ResetPasswordComplete.jsx","pages/Profile.jsx","pages/Flowchart.jsx","components/ultils.jsx","components/CourseDnD.jsx","components/ClassesTable.jsx","components/BoxInfo.jsx","components/GenSchedInfo.jsx","components/FriendTable.jsx","pages/GenerateSchedule.jsx","pages/GenerateScheduleFriends.jsx","pages/Preferences.jsx","pages/SearchCourses.jsx","pages/SearchCoursesSimple.jsx","pages/SearchCoursesGuest.jsx","pages/FriendPage.jsx","pages/Survey.jsx","pages/Admin.jsx","pages/CompareSchedule.jsx","pages/EmailVerificationComplete.jsx","pages/SurveyThanks.jsx","App.js","serviceWorker.js","index.js","images/Login.svg"],"names":["module","exports","Notifications","React","Component","constructor","props","super","handleNotifsClick","e","action","this","setState","polling","newNotifs","state","database","map","notif","axios","patch","id","seen","Date","pollingInterval","notifRefresh","skeletons","Array","keys","dataReceived","unread","componentWillReceiveProps","createData","category","message","date","icon","bgColor","specifyIcon","class","width","height","viewBox","fill","xmlns","d","fill-rule","clip-rule","getInfo","get","localStorage","getItem","then","res","data","difference","Math","floor","now","parse","timePassed","push","content","poll","componentDidMount","clearTimeout","setTimeout","render","options","list","i","length","fWeight","UncontrolledDropdown","nav","inNavbar","DropdownToggle","tag","data-toggle","onClick","Badge","badgeContent","color","overlap","DropdownMenu","right","DropdownItem","header","className","to","option","pathname","selectedFriendId","disabled","style","backgroundColor","fontWeight","divider","Skeleton","Friends","notifRefreshFriends","refreshFriends","handleFriendsClick","newRequests","requests","request","seenStatus","handleAcceptClick","index","from_user","friends","accepted","acceptStatus","handleDeleteClick","delete","index2","handleSendClick","post","to_user","catch","err","console","log","response","sentStatus","handleSearchChange","filterSearchFriendsThrottled","target","value","filterSearchFriends","val","searchQuery","panel","changePanel","_","debounce","createRequests","firstName","lastName","createDatabase","createFriends","handleClick","preventDefault","from_user_fname","from_user_lname","sentRequests","sent","nonfriend","first_name","last_name","includes","friend","friendRequests","friendList","searchFriends","currentPanel","f","toLowerCase","Row","Col","sm","name","textSizeRatio","round","size","marginRight","Button","variant","skeleton","xs","md","position","bottom","padding","marginLeft","marginTop","TextField","label","onChange","search","href","Menu","handleRefreshFriends","currentPage","Navbar","sticky","collapseOnSelect","expand","Brand","alt","src","Toggle","aria-controls","Collapse","Nav","logged_in","Fragment","Link","active","Divider","orientation","light","flexItem","caret","handle_logout","loggedIn","formatDayScaleDate","createMuiTheme","palette","type","primary","green","momentDate","moment","weekday","format","DayScaleCell","withStyles","dayScaleCell","overflow","formatDate","classes","restProps","AppointmentContent","textCenter","textAlign","wordWrap","backgroundSize","commandButton","children","appointmentData","Content","Grid","container","alignItems","item","location","section","professor","whiteSpace","title","fontSize","startTime","endTime","Typography","gutterBottom","ScheduleView","CustomAppointment","coloredClasses","changeColor","Appointment","matched","border","processColoredClasses","palIndex","some","p","bind","earliest","undefined","latest","matchPalette","matchPalCount","Paper","currentDate","startDayHour","endDayHour","excludedDays","dayScaleCellComponent","appointmentContentComponent","appointmentComponent","SavedSchedule","SchedViewHome","_handleFocus","text","boolEdit","_handleFocusOut","schedTitle","updateSchedTitle","handleKeyPress","event","key","editButtonPress","editableLabel","current","isEditing","scheduleContent","tableContent","titleName","allowEdit","createRef","StyledTableCell","theme","head","common","white","top","body","TableCell","StyledTableRow","root","background","default","TableRow","classNmbr","course","faculty","day","room","capacity","enrolled","horizontal","flexShrink","block","ref","labelClassName","inputClassName","inputWidth","inputHeight","inputMaxLength","labelFontWeight","inputFontWeight","onFocus","onFocusOut","checkIcon","pencilIcon","TableContainer","component","maxHeight","overflowY","overflowX","Table","aria-label","fixedHeader","tableLayout","TableHead","TableBody","row","compareMatch","align","ComboBox","handleSearchInput","trim","loading","courseList","courses","course_code","handleOfferingSearchInput","offeringList","applyPreference","user_id","bundle","arranged","groupArray","days","classnumber","course_id","timeslot_begin","timeslot_end","max_enrolled","current_enrolled","offering","day_code","college","programList","degrees","handleSearchInputThrottled","handleOfferingThrottled","changeProgramList","updatedProgramList","degree","String","program","degree_name","concat","page","Autocomplete","getOptionLabel","renderInput","params","inputValue","searchText","multiple","defaultValue","filterSelectedOptions","noOptionsText","InputProps","endAdornment","CircularProgress","onKeyPress","onInputChange","helperText","Alert","elevation","checked","Checkbox","styles","popover","zIndex","cover","left","buttonStyle","textTransform","borderRadius","paddingLeft","paddingRight","boxShadow","borderStyle","borderColor","justifyContent","prefbuttonStyle","testbuttonStyle","deleteButtonStyle","modal","display","transform","paper","shadows","spacing","gridRoot","flexGrow","wrapper","buttonProgress","paddingTop","paddingBottom","sectionStyle","minHeight","backgroundPosition","backgroundRepeat","backgroundImage","Index","handlePageChange","currentContent","generatedContents","currentClasses","offerings","alreadyAdded","j","window","scrollTo","behavior","createTimeslot","hour","minute","randomPalette","componentToHex","c","hex","toString","chosenPalette","result","r","g","b","retrieveSchedInfo","schedules","newSchedule","count","courseOfferings","substring","newTableContent","split","newContent","startDate","endDate","classCode","Number","unshift","prefContent","conflictsContent","information","setSchedInfo","success","scheduleChanged","error","JSON","pagesCount","newArray","reload","deleteSchedule","splice","openAlert","snackBarVariables","snackbarMsg","snackBarSuccess","handleClickOpenAlert","handleCloseAlert","handleCloseSnackBar","reason","snackBarIndex","snackBarFailed","exportSched","html2canvas","document","querySelector","canvas","filename","saveAs","toDataURL","uri","link","createElement","download","appendChild","click","removeChild","open","handleCloseModalCustomize","openModalCustomize","handleOpenModalCustomize","toggleModal","openModalVar","toggleModalEdit","openModalEdit","processPaletteChoices","paletteArray","colorDiv","palColor","newstyle","paletteDiv","paletteChoices","handlePaletteChange","handleClassBoxChange","newDetailsList","classboxDetailsList","newClassboxDetailsList","handleCustomizeSave","setItem","stringify","handleEditChange","newCurrentClasses","handleEditAdd","handleEditCheck","editLoad","classnumbers","newclassnumbers","sched_id","newclasses","allNumbers","rejected","editDialog","handleEditSave","handleDelete","goToCreateSchedule","goToCreate","goToSearchCourse","goToSearch","renderRedirect","tutorialDone","handleClose","handleColorPicker","displayPicker","displayColorPicker","picker","handleClosePicker","handleChangePicker","pagination","Pagination","PaginationItem","PaginationLink","previous","next","classList","newChosenPalette","menu","enabled","steps","intro","element","initialStep","onExit","onComplete","justify","alignContent","direction","endIcon","Modal","isOpen","toggle","returnFocusAfterClose","backdrop","data-keyboard","ModalHeader","ModalBody","Chip","onDelete","marginBottom","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","List","ListItem","ListItemText","DialogActions","autoFocus","ModalFooter","centered","select","maxRows","autoWidth","MenuItem","clickable","Snackbar","autoHideDuration","severity","textDecoration","startIcon","whiteBlob","calendarIcon","attachIcon","laughIcon","Login","handleValidation","fields","errors","formIsValid","helperEmail","lastAtPos","lastIndexOf","lastDotPos","indexOf","helperPassword","redirect","setRedirect","setRedirectRegister","redirectRegister","renderRedirectRegister","url","googleId","email","fname","lname","handleSubmit","password","handle_login","status","snackBarText","snackBar","handleChange","field","backBtn","lg","Jumbotron","onSubmit","placeholder","buttonLogin","margin","Register","degreeRef","handleAutoCompleteChange","errorFirstName","helperFirstName","errorLastName","helperLastName","errorEmail","errorID","helperID","errorPassword","errorConPassword","helperConPassword","errorCollege","helperCollege","errorDegree","helperDegree","id_num","password1","password2","handle_register","colleges","snackBarSucess","componentWillMount","filled","URLSearchParams","college_name","degreeStyle","buttonRegister","buttonSuccess","placeItems","ResetPassword","handle_resetPassword","buttonSend","ResetPasswordDone","SidebarIMG","ResetPasswordConfirm","new_password1","new_password2","uid","match","uidb64","token","handle_resetPasswordConfirm","alert","withRouter","ResetPasswordComplete","GreenCheckbox","Profile","iconBool","fieldsBool","editRef","emailBool","firstNameBool","lastNameBool","collegeBool","degreeBool","idNoBool","editFirstName","editLastName","editEmail","editIdNo","editCollege","editDegree","handleFocus","handleFocusOut","FormGroup","FormControlLabel","control","defaultChecked","Flowchart","exportFlowchart","snackbar","exportFlowchartTable","setFlowchartTables","terms","term","year","course_name","units","prerequisites","prereq","borderWidth","softPrerequisites","corequisites","handleScrollToGen","handleCloseBar","flowpoints","degreekey","batchkey","pagesEnabled","coursesList","flowpointsList","newTerm","batch","tracks","currentTerm","tempCoursesList","tempCourse","sort","a","keyA","keyB","k","outputsList","prerequisite_to","prereq_to","output","input","inputColor","outputColor","soft_prerequisite_to","dash","co_requisite","coreq","x","y","tempTerm","findIndex","componentDidUpdate","prevProp","prevState","onChangePagesEnabled","Tabs","defaultActiveKey","Tab","eventKey","connectionSize","Object","point","startPosition","dragX","dragY","outputs","flowchartText","textOverflow","buttonStyleOption","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","itemToAdd","CourseDnD","refreshList","newItems","siteData","removeCourse","handleCourseDelete","newCourses","updateFunction","triggerModal","courseName","triggerUpdate","idTag","put","priority","user","addCard","oldItems","onClearArray","groupName","getChildPayload","onDrop","Tooltip","placement","cursor","iconStyle","close","getCardPayload","columnId","scene","filter","onColumnDrop","dropResult","assign","onCardDrop","column","columnIndex","newColumn","float","BoxInfo","borderBottom","hover","GenSchedInfo","prefTitle","conflictTitle","owner","rowsPref","rowsFriendPref","prefFriendContent","rowsConflict","defPalette","verticle","table","stickyHeader","rowSpan","scope","FriendTable","friendInfo","possible","unavailable","colSpan","loadedData","WhiteCheckbox","GenerateSchedule","saveCourses","addCourse","newCourseList","currentCourse","AutoCompleteValue","handleAutoCompletePress","handleAddCoursePriority","removeItem","courseAdded","max","headers","getSingleCourseOfferings","savedScheds","saveButtonLabel","saveButtonStyle","hideGenContent","createSchedInfo","toggleModalWait","highCourses","lowCourses","filterFull","schedCount","priorityId","preferences","cancelled","openModalWait","generatedRef","offsetTop","handleSaveChange","handleFilterFull","handleCheckbox","undesirableClass","handleAllCheckbox","allCheckBox","handleCourseOfferingChange","openModalCourseOfferings","modalCourseName","handleCloseModalCourseOfferings","handleOpenModalCourseOfferings","handleSaveCourseOfferings","entries","onCancel","updateHighPriority","updateLowPriority","highPriorityId","lowPriorityId","searchedCourse","siteDataArray","tempUndesirableClass","getLowCourseOfferings","_callback","getCourseOfferings","newCourse","setSched","total","done","coursepriority","undesirable_classes","courseUpdate","search_field","hints","hint","hintPosition","data-hint","vertical","dialogClassName","maxWidth","handleOpenModalCourseInfo","schedButton","buttonProgressSave","shareCode","onCopy","copyLabel","currentFriend","handleTab","friendKeys","friendPreferences","linkShare","ToggleButtonGroup","exclusive","ToggleButton","Preferences","handleCloseModalHelp","openModalHelp","handleOpenModalHelp","handleProfPrefChange","profList","selectedProfs","prof","handleProfPrefPress","newProfList","handleSectionPrefChange","selectedSections","handleSectionPrefPress","handleDateChange","selectedDate","handleDayChange","newDayList","daysList","handleBreakChange","break_length","handleBuildingChange","newBuildingList","buildingList","handleEarliestChange","earliest_class_time","handleLatestChange","latest_class_time","handleMinCourseChange","min_courses","handleMaxCourseChange","max_courses","handleSave","dataSaved","preferred_days","bldg","preferred_buildings","preferred_faculty","preferred_sections","section_code","savedPrefBar","handleCloseSaveBar","sectionList","bldg_code","building","breakOptions","full_name","preference","newDaysList","prof2","profName","section2","facultyOptions","firstLetter","toUpperCase","test","IconButton","noValidate","InputLabelProps","shrink","inputProps","step","min","localeCompare","groupBy","homeButton","GreenRadio","Radio","GreenSwitch","switchBase","track","Switch","SearchCourses","setFilter","radioVal","filteredList","groupedSiteData","allSiteData","reduce","coursesSoFar","testGroupedData","handleFilter","searchCourses","selectedCourses","showPlaceholder","courseInfo","newSiteData","handleSearch","handleSearchPress","handleCloseModalCourseInfo","openModalCourseInfo","courseCode","courseUnits","handleApplyPreference","rowStyle","noResults","radioRef","FormControl","RadioGroup","searchIMG","courseDesc","coursePre","courseCo","courseEq","textDecorationLine","checkedIcon","FriendPage","hasSelectedFriend","tempTest","selectedFriend","contentSelected","generateList","idnumber","slice","idnum","toggleDrop","dropdownOpen","handleSearchCompare","deleteFriend","toggleModalCompare","openModalCompare","handleCompareChange","friendListCompare","toggleModalSuggest","openModalSuggest","handleSuggestChange","friendListSuggest","handleCopy","o","copyBar","handleCloseCopyBar","compareOnChange","compareList","generateOnChange","handleConfigChanges","savedConfig","prefConfig","filterConfig","handleCoordinate","coordinating","doGenerate","fromModalIndex","highList","lowList","history","replace","CustomToggle","forwardRef","justifyItems","ListGroup","flush","ListGroupItem","Dropdown","as","Item","responsive","disableCloseOnSelect","renderOption","selected","calendarIMG","friendDef","unfriendBtnStyle","PrettoSlider","thumb","valueLabel","rail","Slider","Survey","checkEmptyFields","smeqResult","groupno","method","susResult","ueqResult","nasaResult","panasResult","stressResult","cognitiveResult","decisionResult","groupResult","selectedValue","susScale","statement","handleRadioChange","labelPlacement","stressScale","ueqScale","basicScale","panasScale","nasaScale","score","handleName","handleField","handleFieldChange","explanation","comments","results","currentWords","words","wordList","wordResult","stressComments","cognitiveComments","decisionComments","groupComments","word","formControl","InputLabel","Select","labelId","valueLabelDisplay","marks","fullWidth","minWidth","selectEmpty","Admin","handleSimul","handleEmptyAll","handleFull","handleEmpty","handleAllow","allowed","addIdnum","handleAddEnlist","handleDeleteEnlist","rows","enlists","createEnlistData","cart","enlist","CompareSchedule","generatedContentsUser","currentContentFriend","userContent","friendContent","l","currentContentUser","currentPageUser","currentPageFriend","generatedContentsFriend","paletteOne","paletteTwo","schedulesUser","schedulesFriend","pagesCountUser","pagesCountFriend","friendName","checkCompare","newMatched","EmailVerificationComplete","personIMG","App","responseGoogle","wipe_logout","clear","loginPage","registerPage","resetPasswordPage","resetPasswordDonePage","resetPasswordConfirmPage","resetPasswordCompletePage","mainPage","qs","redirected","useCookies","setCookie","queryString","path","profilePage","generateSchedulePage","preferencesPage","searchCoursesPage","searchCoursesGuestPage","SearchCoursesGuest","searchCoursesSimplePage","SearchCoursesSimple","viewFriendsPage","flowchartPage","compareSchedulePage","generateScheduleFriendsPage","GenerateScheduleFriends","surveyPage","surveyThanksPage","SurveyThanks","adminPage","emailVerificationCompletePage","exact","Boolean","hostname","ReactDOM","CookiesProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28051c26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search_engine.a15d5d12.png\";","module.exports = __webpack_public_path__ + \"static/media/Register.f632f058.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.414bc2ea.png\";","module.exports = __webpack_public_path__ + \"static/media/attach.639ab5fb.png\";","module.exports = __webpack_public_path__ + \"static/media/laugh.0ab756c6.png\";","module.exports = __webpack_public_path__ + \"static/media/whiteBlob.b675a6eb.png\";","module.exports = __webpack_public_path__ + \"static/media/FriendPage.e8876896.svg\";","module.exports = __webpack_public_path__ + \"static/media/friend2.1af4a1e8.png\";","module.exports = __webpack_public_path__ + \"static/media/following_the_idea.a914508f.png\";","module.exports = __webpack_public_path__ + \"static/media/Gradient_BG.6a9dbe05.png\";","import React from 'react';\n\nimport '../css/Notifications.css';\n\nimport {\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n  } from 'reactstrap';\n\n/*import {\n    Link\n} from \"react-router-dom\";*/\n\nimport {Link as Linker} from \"react-router-dom\";\n\nimport { HashLink as Link } from 'react-router-hash-link';\n\nimport Badge from '@material-ui/core/Badge';\nimport axios from 'axios'\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nclass Notifications extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        var today = new Date();\n\n        this.state = {\n            database: [\n                // this.createData('Schedule', 'INOVATE S17 is full.',             false,  today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate(), \"\", \"\"),\n                // this.createData('Friend',   'Juan Tamad saved a new schedule.', true,   today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate(), \"\", \"\"),\n                // this.createData('Schedule', 'FTDANCE S15 was dissolved.',       true,   today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate(), \"\", \"\")\n            ],\n            polling: true,\n            pollingInterval: 5000,\n            newNotifs: 0,\n            notifRefresh: props.notifRefresh,\n            skeletons: [...Array(2).keys()],\n            dataReceived: false,\n            unread: false,\n        }\n    }\n\n    componentWillReceiveProps(props){\n        this.setState({notifRefresh: props.notifRefresh})\n    }\n\n    createData(category, message, seen, date, icon, bgColor, id) {\n        return {category, message, seen, date, icon, bgColor, id};\n    }\n\n    specifyIcon(props) {\n        const category = props.category;\n\n        if(category == \"Schedule\"){\n            return (\n                <svg class='bi bi-calendar-fill' width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M0 2a2 2 0 012-2h12a2 2 0 012 2H0z'></path> <path fill-rule='evenodd' d='M0 3h16v11a2 2 0 01-2 2H2a2 2 0 01-2-2V3zm6.5 4a1 1 0 100-2 1 1 0 000 2zm4-1a1 1 0 11-2 0 1 1 0 012 0zm2 1a1 1 0 100-2 1 1 0 000 2zm-8 2a1 1 0 11-2 0 1 1 0 012 0zm2 1a1 1 0 100-2 1 1 0 000 2zm4-1a1 1 0 11-2 0 1 1 0 012 0zm2 1a1 1 0 100-2 1 1 0 000 2zm-8 2a1 1 0 11-2 0 1 1 0 012 0zm2 1a1 1 0 100-2 1 1 0 000 2zm4-1a1 1 0 11-2 0 1 1 0 012 0z' clip-rule='evenodd'/>\n                </svg>\n            );\n        }\n        else {\n            return (\n                <svg class='bi bi-people-fill' width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n                    <path fill-rule='evenodd' d='M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 100-6 3 3 0 000 6zm-5.784 6A2.238 2.238 0 015 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 005 9c-4 0-5 3-5 4s1 1 1 1h4.216zM4.5 8a2.5 2.5 0 100-5 2.5 2.5 0 000 5z' clip-rule='evenodd'/>\n                </svg>\n            );\n        }\n    }\n\n    getInfo(){\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/notificationlist/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            this.setState({database: []})\n            this.setState({newNotifs: 0})\n            var newNotifs = this.state.newNotifs;\n            res.data.map(notif=> {\n                const database = this.state.database;\n                let difference = Math.floor((Date.now() - Date.parse(notif.date)) /1000 )\n                let timePassed = ''\n                if(difference <= 60){\n                    timePassed = difference + 's'\n                }else{\n                    difference = Math.floor(difference/60)\n                    if(difference <= 60){\n                        timePassed = difference + 'm'\n                    }else{\n                        difference = Math.floor(difference/60)\n                        if(difference <= 24){\n                            timePassed = difference + 'h'\n                        }else{\n                            difference = Math.floor(difference/24)\n                            if(difference <= 7){\n                                timePassed = difference + 'd'\n                            }else{\n                                difference = Math.floor(difference/7)\n                                timePassed = difference + 'w'\n                            }\n                        }\n                    }\n                }\n                database.push(this.createData(notif.category, notif.content, notif.seen, timePassed, \"\", \"\", notif.id))\n                if(!notif.seen){\n                    newNotifs += 1;\n                }\n                if(notif.category != 'Schedule'){\n                    this.setState({notifRefresh: true})\n                }\n                this.setState({database})\n            })\n            this.setState({newNotifs})\n            this.setState({dataReceived: true})\n            this.poll()\n        })\n    }\n\n    componentDidMount(){\n        this.getInfo()\n    }\n\n    poll () {\n        this.state.polling && clearTimeout(this.state.polling)\n    \n        const polling = setTimeout(() => {\n            this.getInfo()\n        }\n        , this.state.pollingInterval)\n    \n        this.setState({\n            polling\n        })\n    }\n\n    handleNotifsClick = (e, action) => {\n        this.setState({polling: false})\n        this.setState({newNotifs: 0})\n        // const database = []\n        this.state.database.map(notif => {\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/notifications/'+notif.id+'/',{\n                seen: true\n            })\n            // notif.seen = true;\n            // database.push(notif)\n        })\n        // this.setState({database})\n        this.setState({polling: true})\n    }\n\n    render (){\n        const options = [];\n        var list = this.state.database;\n        \n        for (let i=0; i < list.length; i++){\n\n            // SPECIFY BACKGROUND COLOR\n            if(!list[i].seen){\n                list[i].bgColor = \"white\";\n                list[i].fWeight = \"bold\";\n                // #D3D3D3\n            }\n            else {\n                list[i].bgColor = \"white\";\n                list[i].fWeight = \"normal\";\n            }\n\n            options.push(list[i]);\n        }\n\n        return(\n            <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle tag=\"span\" data-toggle=\"dropdown\" onClick={this.handleNotifsClick}>\n                <Badge badgeContent={this.state.newNotifs} color=\"error\" overlap=\"circle\">\n                    <svg class=\"bi bi-bell-fill\" width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M10 18a2 2 0 002-2H8a2 2 0 002 2zm.995-14.901a1 1 0 10-1.99 0A5.002 5.002 0 005 8c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"></path>\n                    </svg>\n                </Badge>\n                </DropdownToggle>\n                \n                {this.state.dataReceived ?\n                <DropdownMenu right id=\"dropdownMenu\">\n                    <DropdownItem header id=\"notifSettings\" className=\"headerSticky\">\n                        \n                        <Link to=\"profile#notifs-container\" id=\"headerLink\">Settings</Link>\n                    </DropdownItem>\n\n                    {options.map(option => (\n                        <Link className=\"friendItem\" to={{pathname: \"/view_friends\", state:{selectedFriendId: -1}}} >\n                        <DropdownItem disabled className=\"notifItem\" style={{backgroundColor: option.bgColor, fontWeight: option.fWeight}}>\n                            <DropdownItem divider />\n                            <this.specifyIcon category={option.category} />\n                            <span id=\"notifDate\"> {option.date} </span>\n                            <span>{option.message}</span>\n                        </DropdownItem>\n                        </Link>\n                    ))}\n\n                    {options.length == 0 &&\n                        <DropdownItem disabled className=\"notifItem\">\n                            <DropdownItem divider />\n                            <center>No Notifications</center>\n                        </DropdownItem>\n                    }\n                </DropdownMenu>\n                :\n                <DropdownMenu right id=\"dropdownMenu\">\n                    <DropdownItem header id=\"notifSettings\" className=\"headerSticky\">\n                        \n                        <Link to=\"profile#notifs-container\" id=\"headerLink\">Settings</Link>\n                    </DropdownItem>\n\n                    {this.state.skeletons.map(option => (\n                        <DropdownItem disabled className=\"notifItem\">\n                            <DropdownItem divider />\n                            <span> <Skeleton width={'100%'} height={'100%'}></Skeleton> </span>\n                            <span> <Skeleton width={'100%'} height={'100%'}></Skeleton> </span>\n                        </DropdownItem>\n                    ))}\n\n                </DropdownMenu>\n                }\n            </UncontrolledDropdown>\n        );\n    }\n}\n\nexport default Notifications ","import React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nimport '../css/Friends.css';\n\nimport {\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nimport Badge from '@material-ui/core/Badge';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Avatar from 'react-avatar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport _ from 'underscore';\n\nclass Friends extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            requests: [\n                // this.createRequests(\"Katniss\", \"Everdeen\", \"new\"),\n                // this.createRequests(\"Peeta\", \"Mellark\", \"new\"),\n                // this.createRequests(\"Beatrice\", \"Prior\", \"accept\"),\n                // this.createRequests(\"Tobias\", \"Eaton\", \"delete\"),\n                // this.createRequests(\"Yeji\", \"Hwang\", \"accept\"),\n                // this.createRequests(\"Jisoo\", \"Choi\", \"accept\")\n            ],\n            database: [\n                // this.createDatabase(\"Amelia\", \"Earhart\", false),\n                // this.createDatabase(\"Beatrice\", \"Prior\", true),\n                // this.createDatabase(\"Maria\", \"Clara\", false),\n                // this.createDatabase(\"Mara\", \"Makiling\", false)\n            ],\n            friends: [],\n            panel: \"requests\",\n            changePanel: null,\n            polling: true,\n            pollingInterval: 5000,\n            newRequests: 0,\n            message: \"hello from friends modal\",\n            skeletons: [...Array(2).keys()],\n            notifRefresh: props.notifRefresh,\n            dataReceived: false,\n            searchQuery: ''\n        }\n        this.filterSearchFriendsThrottled = _.debounce(this.filterSearchFriends, 500)\n    }\n\n    componentWillReceiveProps(props){\n        this.setState({notifRefresh: props.notifRefresh})\n    }\n\n    createRequests(firstName, lastName, seenStatus, acceptStatus, id, from_user) {\n        return { firstName, lastName, seenStatus, acceptStatus, id, from_user};\n    }\n\n    createDatabase(firstName, lastName, sentStatus, id) {\n        return { firstName, lastName, sentStatus, id};\n    }\n\n    createFriends(firstName, lastName, id) {\n        return { firstName, lastName, id};\n    }\n\n    handleClick(e, action) {\n        e.preventDefault();\n        this.setState({panel: action});\n        console.log(action);\n    }\n\n    getInfo(){\n        this.refreshFriends();\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/friendrequestlist/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            this.setState({requests: []})\n            this.setState({newRequests: 0})\n            var newRequests = this.state.newRequests;\n            res.data.map(request => {\n                const requests = this.state.requests\n                requests.push(this.createRequests(request.from_user_fname, request.from_user_lname, request.seen, request.accepted, request.id, request.from_user))\n                if(!request.seen){\n                    newRequests += 1;\n                }\n                this.setState({requests})\n            })\n            this.setState({newRequests})\n            this.setState({dataReceived: true})\n            // axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/')\n            // .then(res => {\n            //     const friends = res.data.friends;\n\n            // })\n            this.poll()\n        })\n    }\n\n    refreshFriends(){\n        console.log('friends refreshing')\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/sentrequestlist/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            const sentRequests = [];\n            res.data.map(sent => {\n                sentRequests.push(sent.to_user)\n            })\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/nonfriendlist/'+localStorage.getItem('user_id')+'/')\n            .then(res => {\n                const database = [];\n                res.data.map(nonfriend => {\n                    database.push(this.createDatabase(nonfriend.first_name, nonfriend.last_name, sentRequests.includes(nonfriend.id), nonfriend.id));\n                })\n                this.setState({database})\n                axios.get('https://animosched-backend-backup.herokuapp.com/api/friendlist/'+localStorage.getItem('user_id')+'/')\n                .then(res => {\n                    const friends = [];\n                    res.data.map(friend => {\n                        friends.push(this.createFriends(friend.first_name, friend.last_name, friend.id))\n                    })\n                    this.setState({friends})\n                })\n            })\n        }).catch(err => {\n            console.log(err.response)\n        })\n    }\n\n    notifRefreshFriends = () => {\n        if(this.state.notifRefresh){\n            this.setState({notifRefresh: false}, ()=>{\n                this.refreshFriends()\n            })\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/sentrequestlist/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            const sentRequests = [];\n            res.data.map(sent => {\n                sentRequests.push(sent.to_user)\n            })\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/nonfriendlist/'+localStorage.getItem('user_id')+'/')\n            .then(res => {\n                const database = this.state.database;\n                res.data.map(nonfriend => {\n                    database.push(this.createDatabase(nonfriend.first_name, nonfriend.last_name, sentRequests.includes(nonfriend.id), nonfriend.id));\n                })\n                this.setState({database})\n                axios.get('https://animosched-backend-backup.herokuapp.com/api/friendlist/'+localStorage.getItem('user_id')+'/')\n                .then(res => {\n                    const friends = this.state.friends;\n                    res.data.map(friend => {\n                        friends.push(this.createFriends(friend.first_name, friend.last_name, friend.id))\n                    })\n                    this.setState({friends})\n                    this.getInfo();\n                })\n            })\n        })\n    }\n\n    poll () {\n        this.state.polling && clearTimeout(this.state.polling)\n    \n        const polling = setTimeout(() => {\n            this.getInfo();\n        }\n        , this.state.pollingInterval)\n    \n        this.setState({\n            polling\n        })\n    }\n\n    handleFriendsClick = (e, action) => {\n        this.setState({polling: false})\n        this.setState({newRequests: 0})\n        const requests = []\n        this.state.requests.map(request => {\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/friendrequests/'+request.id+'/',{\n                seen: true\n            })\n            request.seenStatus = true;\n            requests.push(request)\n        })\n        this.setState({requests})\n        this.setState({polling: true})\n    }\n\n    handleAcceptClick = (e, index, id, from_user) => {\n        this.setState({polling: false})\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            const friends = res.data.friends;\n            friends.push(from_user)\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                friends: friends\n            })\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/friendrequests/'+id+'/',{\n                seen: true,\n                accepted: true\n            })\n            // axios.post('https://animosched-backend-backup.herokuapp.com/api/notifications/',{\n            //     content: localStorage.getItem('first_name') + ' accepted your friend request!',\n            //     seen: false,\n            //     to_user: from_user\n            // })\n        })\n        const requests = this.state.requests;\n        requests[index].acceptStatus = true;\n        this.setState({requests})\n        this.refreshFriends()\n        this.setState({polling: true})\n    }\n\n    handleDeleteClick = (e, index, id) => {\n        this.setState({polling: false})\n        axios.delete('https://animosched-backend-backup.herokuapp.com/api/friendrequests/'+id+'/')\n        const requests = [];\n        this.state.requests.map((request, index2) => {\n            if(index != index2){\n                requests.push(request)\n            }\n        })\n        this.setState({requests})\n        this.setState({polling: true})\n    }\n\n    handleSendClick = (e, index, id) => {\n        this.setState({polling: false})\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/friendrequests/',{\n            from_user: localStorage.getItem('user_id'),\n            seen: false,\n            accepted: false,\n            to_user: id\n        }).catch(err => {\n            console.log(err.response)\n        })\n        const database = this.state.database\n        database[index].sentStatus = true\n        this.setState({database})\n        this.setState({polling: true})\n    }\n\n    handleSearchChange = (e) => {\n        this.filterSearchFriendsThrottled(e.target.value)\n    }\n\n    filterSearchFriends = (val) => {\n        this.setState({searchQuery: val})\n    }\n\n    render (){\n        const friendRequests = [];\n        const friendList = [];\n        const searchFriends = [];\n        const currentPanel = this.state.panel;\n\n        for(var i=0; i < this.state.requests.length; i++){\n            friendRequests.push(this.state.requests[i]);\n        }\n\n        for(var i=0; i < this.state.friends.length; i++){\n            friendList.push(this.state.friends[i]);\n        }\n\n        for(var i=0; i < this.state.database.length; i++){\n            const f = this.state.database[i]\n            if(f.firstName.toLowerCase().includes(this.state.searchQuery.toLowerCase()) || f.lastName.toLowerCase().includes(this.state.searchQuery.toLowerCase())){\n                searchFriends.push(this.state.database[i]);\n            }\n        }\n\n        if(currentPanel == \"requests\"){\n            this.state.changePanel = \n                <div>\n                    {this.state.dataReceived ? \n                    <div className=\"cardPanel\">\n                        {friendRequests.map((request, index) => (\n                            <DropdownItem header className=\"panelItem\">\n                                <Row>\n                                    <Col sm={7}>\n                                        {/* <svg class=\"bi bi-circle-fill\" id='profileLink' width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n                                        </svg> */}\n\n                                        <Link  className=\"friendItem\"  to={request.acceptStatus ? {pathname: \"/view_friends\" , state:{selectedFriendId: request.id}}: {}}>\n                                        <Avatar name={request.firstName +\" \"+ request.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"12px\",}} />\n                                        <span> {request.firstName} {request.lastName} </span>\n                                        </Link>\n                                    </Col>\n\n                                    {!request.acceptStatus &&\n                                        <Col sm={5}>\n                                            <Button onClick={(e) => this.handleAcceptClick(e, index, request.id, request.from_user)} variant=\"success\" size=\"sm\" className=\"marginRightSeparator\">Accept</Button>\n                                            <Button onClick={(e) => this.handleDeleteClick(e, index, request.id)} variant=\"secondary\" size=\"sm\">Delete</Button>\n                                        </Col>\n                                    }\n\n                                    {request.acceptStatus &&\n                                        <Col sm={5}>\n                                            <span className=\"marginRightSeparator\"> Accepted </span>\n                                            <svg class=\"bi bi-check-circle\" width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"#006A4E\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path fill-rule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"></path>\n                                                <path fill-rule=\"evenodd\" d=\"M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z\" clip-rule=\"evenodd\"></path>\n                                            </svg>\n                                        </Col>\n                                    }\n\n                                    {/* {request.status == \"delete\" &&\n                                        <Col xs={6} md={4}>\n                                        <span className=\"marginRightSeparator\"> Removed </span>\n                                        <svg class=\"bi bi-x-circle\" width=\"21\" height=\"21\" viewBox=\"0 0 16 16\" fill=\"#8E1600\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\" clip-rule=\"evenodd\"></path>\n                                            <path fill-rule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"></path>\n                                            <path fill-rule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                                        </svg>\n                                    </Col>\n                                    }  */}\n                                </Row>\n                            </DropdownItem>\n                        ))}\n                        \n                        {friendRequests.length == 0 &&\n                            <DropdownItem disabled className=\"panelItem\">\n                                <DropdownItem divider />\n                                <center>No Friend Requests</center>\n                            </DropdownItem>\n                        }\n                    </div>\n                    :\n                    <div className=\"cardPanel\">\n                        {this.state.skeletons.map(skeleton => (\n                            <DropdownItem header className=\"panelItem\">\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                        {/* <svg class=\"bi bi-circle-fill\" id='profileLink' width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n                                        </svg> */}\n                                        <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                        {/* <Avatar name={request.firstName +\" \"+ request.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"12px\",}} /> */}\n                                        {/* <span> {request.firstName} {request.lastName} </span> */}\n                                        <span>\n                                            <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                        </span>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                        {/* <span className=\"marginRightSeparator\"> Accepted </span> */}\n                                        <span>\n                                            <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                        </span>\n                                        <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                        {/* <svg class=\"bi bi-check-circle\" width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"#006A4E\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"></path>\n                                            <path fill-rule=\"evenodd\" d=\"M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z\" clip-rule=\"evenodd\"></path>\n                                        </svg> */}\n                                    </Col>\n                                </Row>\n                            </DropdownItem>\n                        ))} \n                    </div>\n                    }\n                </div>\n        }else if(currentPanel == \"list\"){\n            this.state.changePanel = \n                <div>\n                    {this.state.dataReceived ?\n                    <div className=\"cardPanel\">\n\n                        {friendList.map((friend, index) => (\n                            <Link className=\"friendItem\" /*to={\"/view_friends\"}*/ to={{pathname: \"/view_friends\", state:{selectedFriendId: friend.id}}}>\n                                <DropdownItem className=\"panelItem\">\n                                        <Avatar name={friend.firstName +\" \"+ friend.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"12px\",}} />\n                                        <span> {friend.firstName} {friend.lastName} </span>\n                                </DropdownItem>\n                            </Link>\n                        ))}\n\n                        {friendList.length != 0 &&\n                            <DropdownItem header style={{ position: \"sticky\", bottom: \"0\", backgroundColor: \"white\", padding: \"5px\", marginLeft: \"10px\", marginTop: \"10px\"}}> \n                                <div><Link to={{pathname: \"/view_friends\", state:{selectedFriendId: -1}}} id=\"dropdownFooter\">Friends Page</Link></div>\n                            </DropdownItem>\n                        }\n\n                        {friendList.length == 0 &&\n                            <DropdownItem disabled className=\"panelItem\">\n                                <DropdownItem divider />\n                                <center>No Friends</center>\n                            </DropdownItem>\n                        }\n                    </div>\n                    :\n                    <div className=\"cardPanel\">\n                    {this.state.skeletons.map(skeleton => (\n                        <DropdownItem header className=\"panelItem\">\n                            <Row>\n                                <Col xs={12} md={8}>\n                                    {/* <svg class=\"bi bi-circle-fill\" id='profileLink' width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n                                    </svg> */}\n                                    <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    {/* <Avatar name={request.firstName +\" \"+ request.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"12px\",}} /> */}\n                                    {/* <span> {request.firstName} {request.lastName} </span> */}\n                                    <span>\n                                        <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    </span>\n                                </Col>\n                                <Col xs={6} md={4}>\n                                    {/* <span className=\"marginRightSeparator\"> Accepted </span> */}\n                                    <span>\n                                        <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    </span>\n                                    <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    {/* <svg class=\"bi bi-check-circle\" width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"#006A4E\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z\" clip-rule=\"evenodd\"></path>\n                                    </svg> */}\n                                </Col>\n                            </Row>\n                        </DropdownItem>\n                    ))} \n                    </div>\n                    }\n                </div>;\n        }else{\n            this.state.changePanel = \n                <div>\n                    {this.state.dataReceived ?\n                    <div className=\"cardPanel\">\n\n                        <DropdownItem header className=\"dropdownHeader\"> \n                            <TextField id=\"outlined-basic\" label=\"Search Friends\" variant=\"outlined\" onChange={this.handleSearchChange} />\n                        </DropdownItem>\n\n                        {searchFriends.map((search, index) => (\n                            <DropdownItem header className=\"panelItem\">\n                                <Row>\n                                    <Col xs={12} md={8}>\n                                        {/* <svg class=\"bi bi-circle-fill\" id='profileLink' width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n                                        </svg> */}\n                                        <Avatar name={search.firstName +\" \"+ search.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"12px\",}} />\n                                        <span> {search.firstName} {search.lastName} </span>\n                                    </Col>\n                                    <Col xs={6} md={4}>\n                                        {search.sentStatus ?\n                                        <Button disabled variant=\"success\" size=\"sm\">Sent</Button>\n                                        :\n                                        <Button onClick={(e) => this.handleSendClick(e, index, search.id)}variant=\"success\" size=\"sm\">Add</Button>\n                                        }\n                                    </Col>\n                                </Row>\n                            </DropdownItem>\n                        ))}\n                    </div>\n                    :\n                    <div className=\"cardPanel\">\n                    {this.state.skeletons.map(skeleton => (\n                        <DropdownItem header className=\"panelItem\">\n                            <Row>\n                                <Col xs={12} md={8}>\n                                    {/* <svg class=\"bi bi-circle-fill\" id='profileLink' width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n                                    </svg> */}\n                                    <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    {/* <Avatar name={request.firstName +\" \"+ request.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"12px\",}} /> */}\n                                    {/* <span> {request.firstName} {request.lastName} </span> */}\n                                    <span>\n                                        <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    </span>\n                                </Col>\n                                <Col xs={6} md={4}>\n                                    {/* <span className=\"marginRightSeparator\"> Accepted </span> */}\n                                    <span>\n                                        <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    </span>\n                                    <Skeleton width={'100%'} height={'100%'}></Skeleton>\n                                    {/* <svg class=\"bi bi-check-circle\" width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"#006A4E\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z\" clip-rule=\"evenodd\"></path>\n                                    </svg> */}\n                                </Col>\n                            </Row>\n                        </DropdownItem>\n                    ))} \n                    </div>\n                    }\n                </div>\n        }\n        return(\n            <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle tag=\"span\" data-toggle=\"dropdown\" onClick={this.handleFriendsClick}>\n                <Badge badgeContent={this.state.newRequests} color=\"error\" overlap=\"circle\">\n                    <svg class=\"bi bi-people-fill\" width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M9 16s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H9zm4-6a3 3 0 100-6 3 3 0 000 6zm-5.784 6A2.238 2.238 0 017 15c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 007 11c-4 0-5 3-5 4s1 1 1 1h4.216zM6.5 10a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                </Badge>\n                </DropdownToggle>\n                \n                <DropdownMenu right id=\"dropdownMenu\">\n\n                        {this.state.panel == \"list\" &&\n                            <DropdownItem header className=\"dropdownHeader\" id=\"headerSticky\">\n                                <a href='javascript:void(0)' className=\"dropdownOption\" onClick={(e) => this.handleClick(e,\"requests\")}>Friend Requests</a>\n                                |\n                                <a href='javascript:void(0)' className=\"dropdownOption\" id=\"activeOption\" onClick={(e) => this.handleClick(e,\"list\")}>Friend List</a>\n                                |\n                                <a href='javascript:void(0)' className=\"dropdownOption\" onClick={(e) => this.handleClick(e,\"find\")}>Find Friends</a>\n                            </DropdownItem>\n                        }\n\n                        {this.state.panel == \"find\" &&\n                            <DropdownItem header className=\"dropdownHeader\" id=\"headerSticky\">\n                                <a href='javascript:void(0)' className=\"dropdownOption\" onClick={(e) => this.handleClick(e,\"requests\")}>Friend Requests</a>\n                                |\n                                <a href='javascript:void(0)' className=\"dropdownOption\" onClick={(e) => this.handleClick(e,\"list\")}>Friend List</a>\n                                |\n                                <a href='javascript:void(0)' className=\"dropdownOption\" id=\"activeOption\" onClick={(e) => this.handleClick(e,\"find\")}>Find Friends</a>\n                            </DropdownItem>\n                        }\n\n                        {this.state.panel == \"requests\" &&\n                            <DropdownItem header className=\"dropdownHeader\" id=\"headerSticky\">\n                                <a href='javascript:void(0)' className=\"dropdownOption\" id=\"activeOption\" onClick={(e) => this.handleClick(e,\"requests\")}>Friend Requests</a>\n                                |\n                                <a href='javascript:void(0)' className=\"dropdownOption\" onClick={(e) => this.handleClick(e,\"list\")}>Friend List</a>\n                                |\n                                <a href='javascript:void(0)' className=\"dropdownOption\" onClick={(e) => this.handleClick(e,\"find\")}>Find Friends</a>\n                            </DropdownItem>\n                        }\n                    {this.state.changePanel}\n                </DropdownMenu>\n                {this.notifRefreshFriends()}\n            </UncontrolledDropdown>\n        );\n    }\n}\n\nexport default Friends ","import React from 'react';\nimport { Nav, NavItem, Navbar, Badge, NavDropdown } from 'react-bootstrap';\nimport '../css/Menu.css';\nimport NotifCenter from './Notifications.jsx'\nimport Friends from './Friends.jsx'\n\nimport Avatar from 'react-avatar';\nimport { Divider } from '@material-ui/core';\n\nimport {\n    Collapse,\n    NavbarToggler,\n    NavbarBrand,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavbarText\n  } from 'reactstrap';\n\nclass Menu extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            currentPage: props.currentPage,\n            notifRefresh: false\n        }\n    }\n\n    // handleChange=(page)=>{\n    //     var activePage = [...this.state.activePage];\n    //     activePage.map(page=>{\n    //         page = false;\n    //     })\n\n    //     activePage[page] = true;\n    //     this.setState({activePage});\n    //     console.log(activePage);\n    // }\n\n    handleRefreshFriends = () => {\n\n    }\n\n    render (){\n        const loggedIn = () => {\n            return(\n                <React.Fragment>\n                    <Nav /*activeKey={\"/preferences\"}*/>\n                    {/* <Nav.Link active={this.state.currentPage == 'flowchart'} href=\"/flowchart\">View Flowchart</Nav.Link> */}\n                    <Nav.Link active={this.state.currentPage == 'search_courses'} href=\"/search_courses\" >Search Courses</Nav.Link>\n                    <Nav.Link active={this.state.currentPage == 'preferences'} href=\"/preferences\">Preferences</Nav.Link>\n                    <Nav.Link active={this.state.currentPage == 'generateSchedule'} href=\"/generateSchedule\">Generate Schedule</Nav.Link>\n                    <Nav.Link active={this.state.currentPage == 'savedSchedules'} href=\"/\">Saved Schedules</Nav.Link>\n                    <Nav.Link href=\"https://forms.gle/7iavSgzsa2EnJEd78\">Leave Feedback</Nav.Link>\n                    <Divider orientation=\"vertical\" light={true} flexItem />\n                    <Nav.Link active={this.state.currentPage == 'profile'} href=\"/profile\">\n                        {/* <svg class=\"bi bi-circle-fill\" id='profileLink' width=\"32\" height=\"32\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <circle cx=\"10\" cy=\"10\" r=\"8\"></circle>\n                        </svg> */}\n                        <Avatar name={this.props.first_name +\" \"+ this.props.last_name} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"14px\",}} />\n                       {this.props.first_name} \n                    </Nav.Link>\n                    <Divider orientation=\"vertical\" light={true} flexItem />\n                    <Nav.Link>\n                        <Friends notifRefresh={this.state.notifRefresh} />\n                    </Nav.Link>\n                    <Nav.Link>\n                        <NotifCenter notifRefresh={this.state.notifRefresh} />\n                    </Nav.Link>\n                    <UncontrolledDropdown nav inNavbar>\n                        <DropdownToggle nav caret>\n                        </DropdownToggle>\n                            <DropdownMenu right style={{marginTop: \"6px\"}}>\n                                <DropdownItem onClick={this.props.handle_logout} >\n                                Logout\n                                </DropdownItem>\n                            </DropdownMenu>\n                    </UncontrolledDropdown>\n                    {/* <Nav.Link eventKey={2} href=\"#memes\"> Dank memes </Nav.Link> */}\n                    </Nav>\n                </React.Fragment>\n            );\n        }\n    \n        const loggedOut = () => {\n            return(\n                <React.Fragment>\n                    <Nav.Link href=\"/login\">Sign In</Nav.Link>\n                </React.Fragment>\n            );\n        }\n\n        return(\n            <Navbar id=\"navbarStep\" sticky=\"top\" collapseOnSelect expand=\"lg\" className=\"color-nav\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">\n            <img\n                alt=\"\"\n                src=\"/logo.svg\"\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n            />{' '}\n            AnimoSched\n            </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">                    \n                    <Nav className=\"ml-auto\">\n                        {this.props.logged_in ? loggedIn() : loggedOut()}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Menu ","import React, {Component} from 'react';\nimport { render } from \"react-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  Resources\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n// import { appointments } from \"./data\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Grid from '@material-ui/core/Grid';\nimport Room from '@material-ui/icons/Room';\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ClassIcon from '@material-ui/icons/Class';\nimport { blue, purple } from \"@material-ui/core/colors\";\nimport { green, deepOrange, lightBlue } from '@material-ui/core/colors';\n\nimport '../css/ScheduleView.css';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst theme = createMuiTheme({ palette: { type: \"light\", primary: green } });\n\nconst styles = {\n    dayScaleCell: {\n      overflow: \"visible\",\n      // textOverflow: \"ellipsis\"\n      // whiteSpace: \"normal\",\n    }\n    \n\n  };\n\n\n  const style = ({ palette }) => ({\n    icon: {\n      color: palette.action.active,\n    },\n    textCenter: {\n      textAlign: 'left',\n      wordWrap: \"break-word\",\n    },\n    header: {\n      height: '260px',\n      backgroundSize: 'cover',\n    },\n    commandButton: {\n      backgroundColor: 'rgba(255,255,255,0.65)',\n    },\n  });\n\nconst formatDayScaleDate = (date, options) => {\n    const momentDate = moment(date);\n    const { weekday } = options;\n    return momentDate.format(weekday ? 'dddd' : ' ');\n};\n\n  const DayScaleCell = withStyles(styles, \"DayScaleCell\")(\n    ({ formatDate, classes, ...restProps }) => (\n      <WeekView.DayScaleCell\n        {...restProps}\n        formatDate={formatDayScaleDate}\n        className={classes.dayScaleCell}\n      />\n    )\n  );\n\n  // const Header = withStyles(style, { name: 'Header' })(({\n  //   children, appointmentData, classes, ...restProps\n  // }) => (\n  //   <AppointmentTooltip.Header\n  //     {...restProps}\n  //     className={classes.header}\n  //     appointmentData={appointmentData}\n  //   >\n  //   </AppointmentTooltip.Header>\n  // ));\n  \n  const Content = withStyles(style, { name: 'Content' })(({\n    children, appointmentData, classes, ...restProps\n  }) => (\n    <AppointmentTooltip.Content {...restProps} appointmentData={appointmentData}>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={2} className={classes.textCenter}>\n          <Room className={classes.icon} />\n        </Grid>\n        <Grid item xs={10}>\n          <span>{appointmentData.location}</span>\n        </Grid>\n        <Grid item xs={2} className={classes.textCenter}>\n          <ClassIcon className={classes.icon} />\n        </Grid>\n        <Grid item xs={10}>\n          <span>{appointmentData.section}</span>\n        </Grid>\n        <Grid item xs={2} className={classes.textCenter}>\n          <AccountCircleIcon className={classes.icon} />\n        </Grid>\n        <Grid item xs={10}>\n          <span>{appointmentData.professor}</span>\n        </Grid>\n      </Grid>\n    </AppointmentTooltip.Content>\n  ));\n\n  const AppointmentContent = ({ style, ...restProps }) => {\n    return (\n      <Appointments.AppointmentContent {...restProps}>\n        <div className={restProps.container} style={{whiteSpace: \"normal\"}}>\n          <div>{restProps.data.title}</div>\n          {/* <div style={{fontSize: \"8px\"}}>{restProps.data.professor}</div> */}\n          <div style={{fontSize: \"11px\"}}>{restProps.data.location}</div>\n          <div style={{fontSize: \"11px\"}} >{restProps.data.startTime} - {restProps.data.endTime}</div>\n          <div>\n            <Typography gutterBottom variant=\"body2\" style={{fontSize: \"8px\", wordWrap: \"break-word\"}}>\n                  {restProps.data.professor}\n            </Typography>\n          </div>\n        </div>\n        \n      </Appointments.AppointmentContent>\n    );\n  };\n\n  // const CustomAppointment = ({ style, ...restProps }, coursesArray, index) => {\n  //   // console.log(coursesArray);\n  //   // console.log(index);\n  //   var coloredClasses = [...coursesArray];\n  //   var palIndex = 1;\n  //   var palette = ['#324856', '#4A746A', '#D18237', 'D66C44', '#FFA289', '#6A92CC', '#706FAB', '#50293C'];\n  //   if (coloredClasses.includes(restProps.data.title)){\n  //     return (\n  //       <Appointments.Appointment\n  //         {...restProps}\n  //         style={{ ...style, backgroundColor: \"blue\"}}\n  //         // className=\"CLASS_ROOM1\"\n  //         data={restProps.data.title}\n  //       />\n  //     );\n  //   }else{\n  //     // coloredClasses.concat({title: restProps.data.title, color: palette[palIndex]});\n  //     // this.setState({coloredClasses});\n  //     // palIndex = palIndex + 1;\n  //     // this.setState({palIndex})\n  //     return(<Appointments.Appointment\n  //         {...restProps}\n  //         style={{ ...style, backgroundColor: palette[palIndex]}}\n  //         // className=\"CLASS_ROOM1\"\n  //         data={restProps.data.title}\n  //       />\n  //     );\n  //   }\n  // };\n\nclass ScheduleView extends Component {\n    constructor(props){\n      super(props);\n      this.CustomAppointment = this.CustomAppointment.bind(this);\n      var earliest = 9;\n      if(props.earliest != undefined){\n        earliest = props.earliest;\n      }\n      var latest = 17;\n      if(props.latest != undefined){\n        latest = props.latest;\n      }\n\n      var matched = []\n      if(props.matched != undefined){\n        matched = props.matched\n      }\n\n      var counter = 0;\n      this.state = {  \n        classes: props.content,\n        latest: latest,\n        earliest: earliest,\n        palette: props.palette,\n        coloredClasses: [],\n        palIndex: 0,\n        dataReceived: false,\n        matched: matched,\n        matchPalette: ['#ee4035', '#f37736', '#7bc043', '#0392cf', '#d11141', '#00b159', '#00aedb', '#f37735', '#ffc425'],\n        matchPalCount: 0,\n      }\n      console.log(\"reach schedview\")\n      console.log(props.matched)\n    }\n\n    componentWillReceiveProps(props){\n      var earliest = 7;\n      if(props.earliest != undefined){\n        earliest = props.earliest;\n      }\n      var latest = 19;\n      if(props.latest != undefined){\n        latest = props.latest;\n      }\n\n      var matched = []\n      if(props.matched != undefined){\n        matched = props.matched\n      }\n\n      this.setState({\n        classes: props.content,\n        latest: latest,\n        earliest: earliest,\n        palette: props.palette,\n        matched: matched\n      }, () => {\n        this.processColoredClasses();\n      });\n\n      console.log('REACHED SCHEDULEVIEW')\n    }\n    \n    CustomAppointment = ({ style, ...restProps }) => {\n      // console.log(restProps);\n      var counter = 0;\n      var coloredClasses = [...this.state.coloredClasses];\n      var changeColor = <Appointments.Appointment {...restProps} style={{ ...style, backgroundColor: this.state.palette[1]}}data={restProps.data.title}/>;\n      // console.log(coloredClasses)\n      coloredClasses.map(data=>{\n        \n        if(data.title == restProps.data.title){\n          // if(this.state.matched.includes(data.title)){\n          //   counter = counter + 1;\n          // }\n          \n          // console.log(data.color);\n          // console.log(this.state.matched.findIndex(course => course === data.title));\n          changeColor = <Appointments.Appointment\n              {...restProps}\n              // style={this.state.matched.includes(data.title) ? { ...style, backgroundColor: this.state.matchPalette[this.state.matched.findIndex(course => course === data.title)], whiteSpace: 'normal', border: 'dashed #65656f'} : { ...style, backgroundColor: data.color, whiteSpace: 'normal'}}\n              style={this.state.matched.includes(data.title) ? { ...style, backgroundColor: data.color, whiteSpace: 'normal', border: 'dashed #65656f'} : { ...style, backgroundColor: data.color, whiteSpace: 'normal'}}\n              // className=\"CLASS_ROOM1\"\n              data={restProps.data.title}\n            />\n            \n          return (\n            <Appointments.Appointment\n              {...restProps}\n              // style={data.title in this.state.matched ? { ...style, backgroundColor:this.state.matchPalette[this.state.matched.findIndex(course => course === data.title)], whiteSpace: 'normal', border: 'dashed #65656f'} : { ...style, backgroundColor: data.color, whiteSpace: 'normal'}}\n              style={data.title in this.state.matched ? { ...style, backgroundColor:data.color, whiteSpace: 'normal', border: 'dashed #65656f'} : { ...style, backgroundColor: data.color, whiteSpace: 'normal'}}\n              // className=\"CLASS_ROOM1\"\n              data={restProps.data.title}\n            />\n          )\n          \n        }\n      })\n\n      return changeColor;\n    };\n\n\n    componentDidMount(){\n      this.processColoredClasses();\n      this.setState({dataReceived: true})\n      \n    }\n    processColoredClasses=()=>{\n      console.log(\"hello from proccessColoredClasses\");\n      var coloredClasses = [];\n      var palIndex = 0;\n      var classData = [...this.state.classes];\n      classData.map(data => {\n        if(!coloredClasses.some(p => p.title == data.title)){\n\n          coloredClasses.push({title: data.title, color: this.state.palette[palIndex]});\n          palIndex = palIndex + 1;\n          if(palIndex == coloredClasses.length + 1 || palIndex == this.state.palette.length){\n            palIndex = 0;\n          }\n        }\n      })\n      console.log(coloredClasses)\n      this.setState({coloredClasses});\n    }\n\n    render() { \n\n        return (\n          \n            // <MuiThemeProvider theme={theme}>\n            \n            <Paper>\n              \n              {this.state.dataReceived ? \n                <Scheduler id='scheduleView' data={this.state.classes}>\n                <ViewState currentDate=\"2018-06-28\" />\n                <WeekView startDayHour={this.state.earliest} endDayHour={this.state.latest} excludedDays={[0,6]} dayScaleCellComponent={DayScaleCell}/>\n                <Appointments \n                appointmentContentComponent={AppointmentContent}\n                appointmentComponent={this.CustomAppointment}\n                />\n                {/* <AppointmentTooltip\n                  // headerComponent={Header}\n                  contentComponent={Content}\n                  // commandButtonComponent={CommandButton}\n                  showCloseButton\n                /> */}\n                </Scheduler>\n              : null}\n            </Paper>\n            // </MuiThemeProvider>\n          );\n    }\n}\n \nexport default ScheduleView;\n","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport ScheduleView from '../components/ScheduleView';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass SavedSchedule extends Component {\n    constructor(props){\n        super(props);\n    }\n    state = {\n        scheduleContent: [\n            {\n                id: 3,\n                title: \"CSSERVM\",\n                section: \"S15\",\n                startDate: new Date(2018, 5, 26, 10, 0),\n                endDate: new Date(2018, 5, 26, 11, 0),\n                location: \"G302\",\n                professor: \"Flowers, Fritz\",\n                startTime: \"09:30AM\",\n                endTime: \"11:30AM\",\n                days: ['T', 'H'],\n                classCode: \"2453\"\n              },\n              {\n                title: \"INOVATE\",\n                section: \"EB14\",\n                startDate: new Date(2018, 5, 26, 12, 0),\n                endDate: new Date(2018, 5, 26, 13, 30),\n                id: 4,\n                location: \"G305\",\n                professor: \"Tuazon, James Dean\",\n                startTime: \"12:00PM\",\n                endTime: \"01:30PM\",\n                days: ['T', 'H'],\n                classCode: \"2453\"\n              },\n              {\n                  title: \"HUMAART\",\n                  section: \"S17\",\n                  startDate: new Date(2018, 5, 27, 9, 30),\n                  endDate: new Date(2018, 5, 27, 11, 30),\n                  id: 0,\n                  location: \"G302\",\n                  professor: \"Sangi, April\",\n                  startTime: \"09:30AM\",\n                  endTime: \"11:30AM\",\n                  days: ['M', 'W'],\n                  classCode: \"2453\"\n                  },\n          ],\n        //tableContent: this.props.tableContent,\n      }\n    render() { \n\n        var schedSample =[\n            {\n                \n              title: \"HUMAART\",\n              startDate: new Date(2018, 5, 25, 9, 30),\n              endDate: new Date(2018, 5, 25, 11, 30),\n              id: 0,\n              location: \"Room 1\",\n              source: \"G302\",\n              description: \"Professor lulu\"\n             \n            }\n          ]\n\n        const StyledTableCell = withStyles(theme => ({\n            head: {\n              backgroundColor: '#006A4E',\n              color: theme.palette.common.white,\n            },\n            body: {\n              fontSize: 14,\n            },\n          }))(TableCell);\n          \n          const StyledTableRow = withStyles(theme => ({\n            root: {\n              '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n              },\n            },\n          }))(TableRow);\n          \n          function createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n            return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n          }\n          \n          const rows = [\n            createData(2258, 'INOVATE', 'S17', 'DELA CRUZ, JUAN', 'TH', '12:45', '14:15', 'GK210', 45, 45),\n            createData(2259, 'INOVATE', 'S18', 'DELA CRUZ, JUAN', 'TH', '14:30', '16:00', 'GK210', 45, 40),\n            createData(2043, 'TREDTRI', 'S17', 'TORRES, MARIA', 'TH', '14:30', '16:00', 'GK301', 30, 30),\n            createData(2044, 'TREDTRI', 'S18', 'TORRES, MARIA', 'TH', '12:45', '14:15', 'GK301', 30, 28)\n          ]\n          \n        return (  \n            \n            <Row vertical='center'>\n                <ScheduleView height='300px' content={this.state.scheduleContent}/>\n            </Row>\n\n            \n            // <div className=\"viewCourses\">\n            //     <TableContainer component={Paper}>\n            //     <Table aria-label=\"customized table\">\n            //         <TableHead>\n            //         <TableRow>\n            //             <StyledTableCell> Class Number </StyledTableCell>\n            //             <StyledTableCell> Course </StyledTableCell>\n            //             <StyledTableCell> Section </StyledTableCell>\n            //             <StyledTableCell> Faculty </StyledTableCell>\n            //             <StyledTableCell> Day </StyledTableCell>\n            //             <StyledTableCell> Time </StyledTableCell>\n            //             <StyledTableCell> Room </StyledTableCell>\n            //             <StyledTableCell> Capacity </StyledTableCell>\n            //             <StyledTableCell> Enrolled </StyledTableCell>\n            //         </TableRow>\n            //         </TableHead>\n            //         <TableBody>\n            //         {rows.map(row => (\n            //             <StyledTableRow key={row.classNmbr}>\n            //             <StyledTableCell> {row.classNmbr} </StyledTableCell>\n            //             <StyledTableCell> {row.course} </StyledTableCell>\n            //             <StyledTableCell> {row.section} </StyledTableCell>\n            //             <StyledTableCell> {row.faculty} </StyledTableCell>\n            //             <StyledTableCell> {row.day} </StyledTableCell>\n            //             <StyledTableCell> {row.startTime} - {row.startTime} </StyledTableCell>\n            //             <StyledTableCell> {row.room} </StyledTableCell>\n            //             <StyledTableCell align=\"right\"> {row.capacity} </StyledTableCell>\n            //             <StyledTableCell align=\"right\"> {row.enrolled} </StyledTableCell>\n            //             </StyledTableRow>\n            //         ))}\n            //         </TableBody>\n            //     </Table>\n            //     </TableContainer>\n            // </div>\n           \n        );\n    }\n}\n \nexport default SavedSchedule   ;","import React, { Component } from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport ScheduleView from '../components/ScheduleView';\nimport '../css/Index.css'\nimport SavedSchedule from '../components/SavedSchedule';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\n\nimport EditableLabel from 'react-inline-editing';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  pencilIcon:{ \n      marginLeft: \"10px\",\n      '&:hover': {\n          backgroundColor: \"white\",\n          color: \"gray\"\n        },\n  },\n  checkIcon:{\n      color: \"green\", \n      marginLeft: \"10px\",\n      '&:hover': {\n          backgroundColor: \"white\",\n          color: \"#79c879\"\n        },\n  }\n});\n\nclass SchedViewHome extends Component {\n    constructor(props){\n      super(props);\n      this._handleFocus = this._handleFocus.bind(this);\n      this._handleFocusOut = this._handleFocusOut.bind(this);\n      this.handleKeyPress = this.handleKeyPress.bind(this);\n\n      this.state = {  \n        scheduleContent: props.scheduleContent,\n        tableContent: props.tableContent,\n        id: props.id,\n        schedTitle: props.titleName,\n        boolEdit: false,\n        palette: props.palette,\n        earliest: props.earliest,\n        latest: props.latest,\n        allowEdit: props.allowEdit,\n        matched: props.matched\n      }\n      this.editableLabel = React.createRef();\n      \n      console.log(\"reach schedviewhome\")\n      console.log(props)\n    }\n    \n\n    _handleFocus=(text)=> {\n      this.setState({boolEdit: true});\n      console.log('Focused with text: ' + text);\n      \n  }\n\n  _handleFocusOut=(text)=> {\n      console.log('Left editor with text: ' + text);\n      this.setState({schedTitle: text});\n      console.log(\"this is props\");\n      console.log(this.props);\n      this.props.updateSchedTitle(text);\n      this.setState({boolEdit: false});\n\n  }\n\n  handleKeyPress = (event) => {\n      console.log(\"event: \" + event);\n      if(event.key === 'Enter'){\n          this.setState({boolEdit: false});\n          console.log(\"isEditing: \" + this.state.boolEdit);\n\n      }\n  }\n\n  editButtonPress = () =>{\n      if(this.state.boolEdit === false){\n          this.setState({boolEdit: true});\n          this.editableLabel.current.setState({isEditing: true});\n      }else if(this.state.boolEdit === true){\n          this.setState({boolEdit: false});\n      }\n  }\n\n  componentWillReceiveProps(props){\n    this.setState({\n      scheduleContent: props.scheduleContent,\n      tableContent: props.tableContent,\n      id: props.id,\n      schedTitle: props.titleName,\n      palette: props.palette,\n      earliest: props.earliest,\n      latest: props.latest,\n      allowEdit: props.allowEdit,\n      matched: props.matched,\n    });\n    console.log(props.palette);\n  }\n\n    render() { \n      \n      const { classes } = this.props;\n      \n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n          position: \"sticky\",\n          top: 0,\n        },\n        body: {\n          fontSize: 12,\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n        },\n      }))(TableRow);\n      \n      function createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n        return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n      }\n      \n      const rows = [\n        createData(2258, 'INOVATE', 'S17', 'DELA CRUZ, JUAN', 'TH', '12:45', '14:15', 'GK210', 45, 45),\n        createData(2259, 'INOVATE', 'S18', 'DELA CRUZ, JUAN', 'TH', '14:30', '16:00', 'GK210', 45, 40),\n        createData(2043, 'TREDTRI', 'S17', 'TORRES, MARIA', 'TH', '14:30', '16:00', 'GK301', 30, 30),\n        createData(2044, 'TREDTRI', 'S18', 'TORRES, MARIA', 'TH', '12:45', '14:15', 'GK301', 30, 28)\n      ];\n        return (\n          <div style={{marginRight:\"20px\"}}>\n            <Row horizontal=\"center\">\n                <Column flexShrink={1}>\n                  <div id='savedSchedContent' class='savedSchedContent' style={{block: \"display\"}}>\n                \n                {this.state.allowEdit ? \n                  <Row horizontal= 'center'>\n                      <EditableLabel ref={this.editableLabel} text={this.state.schedTitle}\n                      labelClassName='myLabelClass'\n                      inputClassName='myInputClass'\n                      inputWidth='200px'\n                      inputHeight='25px'\n                      inputMaxLength='50'\n                      labelFontWeight='bold'\n                      inputFontWeight='bold'\n                      onFocus={this._handleFocus}\n                      onFocusOut={this._handleFocusOut}\n                      onChange={this.handleKeyPress}\n                      /> \n\n                      {this.state.boolEdit ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={this.editButtonPress}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={this.editButtonPress}/>}\n                    </Row>\n                : \n                  <Row horizontal= 'center'>\n                    <h5>{this.state.schedTitle}</h5>  \n                  </Row>\n                }\n                    <center>\n                      <ScheduleView content={this.state.scheduleContent} earliest={this.state.earliest} latest={this.state.latest} palette={this.state.palette} matched={this.props.matched}/>\n                    </center>\n                  \n                  <Row horizontal='center' flexShrink={1}>\n                    <div className=\"viewCoursesHome\" id=\"viewCoursesHome\">\n                      <TableContainer component={Paper} style={{maxHeight: \"428px\", overflowY: \"auto\", overflowX: \"auto\", width: \"auto\"}}>\n                        <Table aria-label=\"customized table\" fixedHeader={false} style={{ tableLayout: 'auto' }} >\n                          <TableHead>\n                            <TableRow>\n                              <StyledTableCell> Class Number </StyledTableCell>\n                              <StyledTableCell> Course </StyledTableCell>\n                              <StyledTableCell> Section </StyledTableCell>\n                              <StyledTableCell> Faculty </StyledTableCell>\n                              <StyledTableCell> Day </StyledTableCell>\n                              <StyledTableCell> Time </StyledTableCell>\n                              <StyledTableCell> Room </StyledTableCell>\n                              <StyledTableCell> Capacity </StyledTableCell>\n                              <StyledTableCell> Enrolled </StyledTableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {this.state.tableContent.map(row => (\n                              <StyledTableRow style={row.compareMatch ? {backgroundColor: \"#b8d4cd\"} : {backgroundColor: \"0099CC\"}} key={row.classNmbr}>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.classNmbr} </StyledTableCell>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.course} </StyledTableCell>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.section} </StyledTableCell>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.faculty} </StyledTableCell>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.day} </StyledTableCell>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.startTime} - {row.endTime} </StyledTableCell>\n                                <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.room} </StyledTableCell>\n                                <StyledTableCell align=\"right\" style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.capacity} </StyledTableCell>\n                                <StyledTableCell align=\"right\" style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {}}> {row.enrolled} </StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </div>\n                  </Row>\n                </div>\n                </Column>\n            </Row>\n          </div>\n  \n        );\n    }\n}\n \nSchedViewHome.propTypes={\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(SchedViewHome);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport _ from 'underscore';\nimport axios from 'axios'\nimport groupArray from 'group-array';\n\nclass ComboBox extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            college: '',\n            programList: [],\n            degrees: [],\n            courseList: [],\n            offeringList: [],\n            value: this.props.value,\n            loading: false\n        }\n        this.handleSearchInputThrottled = _.debounce(this.handleSearchInput, 500)\n        this.handleOfferingThrottled = _.debounce(this.handleOfferingSearchInput, 500)\n    }\n\n    componentWillReceiveProps(props){\n        this.setState({\n            value: props.value,\n        });\n        this.changeProgramList(props);\n    }\n\n    changeProgramList(props) {\n\n        var updatedProgramList = [];\n        \n        if(props.degrees != undefined){\n            props.degrees.map(degree => {\n                if(String(props.college) == String(degree.college)){\n                    const program = {'id':degree.id, 'name':degree.degree_name};\n                    updatedProgramList = updatedProgramList.concat(program);\n                }\n            })\n        }\n\n        this.state.programList = updatedProgramList;\n\n    }\n\n    handleSearchInput = (e, val) =>{\n      if(val.trim() != ''){\n        this.setState({loading: true, courseList: []}, () => {\n          axios.get('https://animosched-backend-backup.herokuapp.com/api/searchcourse/'+val+'/')\n          .then(res => {\n            res.data.map(course => {\n                var courses = this.state.courseList;\n                courses.push({'id':course.id, 'course_code':course.course_code})\n                this.setState({courseList: courses})\n            })\n            this.setState({loading: false})\n          })\n        })\n      }else{\n        this.setState({courseList: []})\n      }\n    }\n\n    createData(classNmbr, course, course_id, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n        return { classNmbr, course, course_id, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n    }\n\n    handleOfferingSearchInput = (e, val) =>{\n        if(val.trim() != ''){\n            this.setState({loading: true})\n            const offeringList = [];\n            const courses = [];\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/searchcourse/'+val+'/')\n            .then(res => {\n                res.data.map(course => {\n                    courses.push(course.id)\n                })\n                axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n                    courses,\n                    applyPreference: false,\n                    user_id: localStorage.getItem('user_id')\n                }).then(res => {\n                    res.data.map(bundle => {\n                        var arranged = groupArray(bundle, 'classnumber');\n                        console.log(arranged)\n                        for (let key in arranged) {\n                        console.log(key, arranged[key]);\n                        var days = []\n                        var day = ''\n                        var classnumber = ''\n                        var course = ''\n                        var course_id = ''\n                        var section = ''\n                        var faculty = ''\n                        var timeslot_begin = ''\n                        var timeslot_end = ''\n                        var room = ''\n                        var max_enrolled = ''\n                        var current_enrolled = ''\n                        arranged[key].map(offering => {\n                            days.push(offering.day)\n                            classnumber = offering.classnumber\n                            course = offering.course\n                            course_id = offering.course_id\n                            section = offering.section\n                            faculty = offering.faculty\n                            timeslot_begin = offering.timeslot_begin\n                            timeslot_end = offering.timeslot_end\n                            room = offering.room\n                            max_enrolled = offering.max_enrolled\n                            current_enrolled = offering.current_enrolled\n                        })\n                        days.map(day_code => {\n                            day += day_code;\n                        })\n                        const offering = this.createData(classnumber, course, course_id, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n                        console.log(offering)\n                        offeringList.push(offering);\n                        }\n                    })\n                    this.setState({offeringList, loading: false})\n                })\n            })\n        }else{\n            this.setState({offeringList: []})\n        }\n    }\n\n    render (){\n   \n        if(this.props.page == \"register\"){\n            return (\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={this.state.programList}\n                  getOptionLabel={option => option.name}\n                  style={{ width: 500 }}\n                  renderInput={params => <TextField {...params} label=\"Degree Program\" variant=\"outlined\" />}\n                  value={this.state.value}\n                  inputValue={this.state.value}\n                  searchText={this.state.value}\n                  onChange={this.props.onChange}\n                />\n            );\n        } else if(this.props.page == \"search\"){\n            return (\n                <Autocomplete\n                  multiple\n                  id=\"tags-outlined\"\n                  options={this.state.courseList}\n                  getOptionLabel={option => option.course_code}\n                //   style={{ width: 500 }}\n                  defaultValue={this.props.defaultValue}\n                  filterSelectedOptions\n                  loading={this.state.loading}\n                  noOptionsText={\"Start typing to search for a course!\"}\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Search Course\"\n                        variant=\"outlined\"\n                        InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                            {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                            {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        ),\n                        }}\n                    />\n                )}\n                //   renderInput={params => <TextField {...params} label=\"Search Courses\" variant=\"outlined\" />}\n                onChange={this.props.onChange}\n                onKeyPress={this.props.onKeyPress}\n                onInputChange={this.handleSearchInputThrottled}\n                />\n            );\n        } else if(this.props.page == \"search_simple\"){\n            return (\n                <Autocomplete\n                  multiple\n                  id=\"tags-outlined\"\n                  options={this.state.courseList}\n                  getOptionLabel={option => option.course_code}\n                //   style={{ width: 500 }}\n                  filterSelectedOptions\n                  loading={this.state.loading}\n                  noOptionsText={\"Start typing to search for a course!\"}\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Search Course\"\n                        variant=\"outlined\"\n                        InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                            {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                            {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        ),\n                        }}\n                    />\n                )}\n                //   renderInput={params => <TextField {...params} label=\"Search Courses\" variant=\"outlined\" />}\n                  onChange={this.props.onChange}\n                  onInputChange={this.handleSearchInputThrottled}\n                />\n            )\n        } else if(this.props.page == \"add\"){\n\n            return(\n            <Autocomplete\n            multiple\n            options={this.state.courseList}\n            disabled={this.props.disabled}\n            getOptionLabel={option => option.course_code}\n            filterSelectedOptions\n            noOptionsText={\"Start typing to add a course!\"}\n            style={{ width: 500 }}\n            loading={this.state.loading}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Course\"\n                    variant=\"outlined\"\n                    InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                        <React.Fragment>\n                        {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                        {params.InputProps.endAdornment}\n                        </React.Fragment>\n                    ),\n                    }}\n                />\n            )}\n            onChange={this.props.onChange}\n            onKeyPress={this.props.onKeyPress}\n            onInputChange={this.handleSearchInputThrottled}\n            value={this.props.value}\n            />\n            )\n        } else if(this.props.page == \"edit\"){\n            return(\n            <Autocomplete\n            multiple\n            options={this.state.offeringList}\n            getOptionLabel={option => option.course + ' ' + option.section + ' (' + option.classNmbr + ') ' + option.day + ' ' + option.startTime + ' - ' + option.endTime}\n            filterSelectedOptions\n            noOptionsText={\"Start typing to search for a course offering!\"}\n            style={{ width: 500 }}\n            loading={this.state.loading}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Search Course\"\n                    helperText=\"Search for a course code or class number to select a class to add to this schedule.\"\n                    variant=\"outlined\"\n                    InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                        <React.Fragment>\n                        {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                        {params.InputProps.endAdornment}\n                        </React.Fragment>\n                    ),\n                    }}\n                />\n            )}\n            onChange={this.props.onChange}\n            // onKeyPress={this.props.onKeyPress}\n            onInputChange={this.handleOfferingThrottled}\n            value={this.props.value}\n            />\n            )\n        } else if(this.props.page == \"generate\"){\n            return(\n            <Autocomplete\n            multiple\n            options={this.state.offeringList}\n            getOptionLabel={option => option.course + ' ' + option.section + ' (' + option.classNmbr + ')'}\n            filterSelectedOptions\n            noOptionsText={\"Start typing to add a specific course offering!\"}\n            style={{ width: 500 }}\n            loading={this.state.loading}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Add specific course offerings\"\n                    variant=\"outlined\"\n                    InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                        <React.Fragment>\n                        {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                        {params.InputProps.endAdornment}\n                        </React.Fragment>\n                    ),\n                    }}\n                />\n            )}\n            onChange={this.props.onChange}\n            // onKeyPress={this.props.onKeyPress}\n            onInputChange={this.handleOfferingThrottled}\n            value={this.props.value}\n            />\n            )\n        }\n    }\n}\n\nexport default ComboBox;","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { Pagination, PaginationItem, PaginationLink} from 'reactstrap';\nimport '../css/Index.css'\n\nimport SchedViewHome from '../components/SchedViewHome';\n\nimport Background from '../assets/Gradient_BG.png'\nimport calendarIcon from '../assets/calendar.png'\nimport attachIcon from '../assets/attach.png'\nimport laughIcon from '../assets/laugh.png'\nimport whiteBlob from '../assets/whiteBlob.png'\n// import { Container, Row, Col } from 'reactstrap';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport { isThisMonth } from \"date-fns/esm\";\nimport groupArray from 'group-array';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport html2canvas from 'html2canvas';\nimport { Steps, Hints } from 'intro.js-react';\nimport 'intro.js/introjs.css';\nimport '../css/introjs-modern.css';\n\n// import Modal from '@material-ui/core/Modal';\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ReactLoading from 'react-loading';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Chip } from \"@material-ui/core\";\nimport ComboBox from \"../components/ComboBox.jsx\";\n\nimport { Redirect } from \"react-router-dom\";\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport StarIcon from '@material-ui/icons/Star';\nimport TodayIcon from '@material-ui/icons/Today';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { BlockPicker, CirclePicker, SketchPicker } from 'react-color';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst GreenCheckbox = withStyles({\n  root: {\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst styles = theme => ({\n  popover: {\n    position: 'absolute',\n    zIndex: '2',\n  },\n  cover: {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px',\n  },\n  buttonStyle:{\n      textTransform: \"none\",\n      width: \"160px\",\n      borderRadius: \"25px\",\n      padding: \"10px\",\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",\n      backgroundColor: \"#16775D\",\n      border: \"none\",\n      color: \"white\",\n      boxShadow: \"6px 5px #e8f4ea\",\n      borderStyle: \"solid\",\n      borderColor: \"#16775D\",\n      marginTop: \"20px\",\n      justifyContent: 'center',\n      '&:hover': {\n          backgroundColor: \"white\",\n          color: \"#16775D\"\n        },\n  },\nprefbuttonStyle:{\n    textTransform: \"none\",\n    width: \"15%\",\n    borderRadius: \"25px\",\n    padding: \"10px\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    backgroundColor: \"#16775D\",\n    border: \"none\",\n    color: \"white\",\n    boxShadow: \"6px 5px #e8f4ea\",\n    borderStyle: \"solid\",\n    borderColor: \"#16775D\",\n    marginTop: \"20px\",\n    justifyContent: 'center',\n    '&:hover': {\n        backgroundColor: \"white\",\n        color: \"#16775D\"\n      },\n},\n\ntestbuttonStyle:{\n  fontSize: \"1vw\",\n  textTransform: \"none\",\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"10px\",\n  // padding: \"2%\",\n  // paddingLeft: \"15px\",\n  // paddingRight: \"15px\",\n  border: \"2px solid #16775D\",\n  // backgroundColor: \"white\",\n  backgroundColor: \"#16775D\",\n  color: \"white\",\n  // color: \"#16775D\",\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n  // borderStyle: \"solid\",\n  // borderColor: \"#16775D\",\n  // marginTop: \"20px\",\n  // justifyContent: 'center',\n  '&:hover': {\n    // backgroundColor: \"#16775D\",\n    // color: \"white\",\n    color: \"#16775D\",\n    backgroundColor: \"white\",\n    },\n},\n\n    deleteButtonStyle:{\n      textTransform: \"none\",\n      width: \"160px\",\n      borderRadius: \"25px\",\n      padding: \"10px\",\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",\n      backgroundColor: \"#D3D3D3\",\n      border: \"##D3D3D3\",\n      color: \"black\",\n      boxShadow: \"6px 5px #e8f4ea\",\n      borderStyle: \"solid\",\n      borderColor: \"#D3D3D3\",\n      marginTop: \"20px\",\n      justifyContent: 'center',\n      '&:hover': {\n          backgroundColor: \"#d11a2a\",\n          borderStyle: \"solid\",\n          color: \"white\",\n          // borderColor: \"#D3D3D3\",\n        },\n    },\n    \n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      // transform: 'translate(-50px, -50px)',\n      backgroundColor: \"white\",\n      top:\"50%\",\n      left:\"50%\",\n      transform: \"translate(-50%,-50%)\",\n\n    },\n    \n    paper: {\n      position: 'absolute',\n      width: \"400px\",\n      height: \"300px\",\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n\n    gridRoot:{\n      flexGrow: 1,\n    },\n\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      \n    },\n    wrapper: {\n      // margin: theme.spacing(1),\n      position: 'relative',\n      \n  \n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n      paddingTop: '5px',\n      paddingBottom: '5px',\n    },\n\n});\n\nvar sectionStyle = {\n  // width: \"100%\",\n  minHeight: \"100vh\",\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n  overflow: \"hidden\",\n  backgroundImage: \"linear-gradient(#086e53, #579d8b)\"\n\n};\n\nclass Index extends Component {\n    constructor(props){\n      super(props);\n      this.state={\n        openAlert: false,\n        snackBarVariables: [\n          {snackBarSuccess: false}, {snackBarFailed: false}],\n        // snackBarFailed: false,\n        currentPage: 0,\n        currentContent: \"\",\n        generatedContents: [],\n        // currentContent: <SchedViewHome/>,\n        // generatedContents: [<SchedViewHome/>,<SchedViewHome/>,<SchedViewHome/>],\n        pagesCount: 1,\n        dataReceived: !props.logged_in,\n        schedules: [],\n        openModalCustomize: false,\n        openModalEdit: false,\n        paletteChoices: [],\n        // chosenPalette: ['#9BCFB8', '#7FB174', '#689C97', '#072A24', '#D1DDDB', '#85B8CB', '#1D6A96', '#283B42','#FFB53C', '#EEB3A3', '#F3355C', '#FAA98B', '#E6AECF', '#AEE0DD', '#01ACBD','#FED770', ' #F29F8F', '#FB7552', '#076A67','#324856', '#4A746A', '#D18237', '#D66C44', '#FFA289', '#6A92CC', '#706FAB', '#50293C'],\n        chosenPalette: ['#9BCFB8', '#7FB174', '#689C97', '#072A24', '#D1DDDB'],\n        classboxDetailsList: [\n          {id: 1, title: \"showFaculty\", checked: true},\n          {id: 2, title: \"showTime\", checked: true},\n          {id: 3, title: \"showRoom\", checked: true}\n        ],\n        classList: [],\n        currentClasses:  [],\n        newCurrentClasses: [],\n        newClassboxDetailsList: [],\n        newChosenPalette: [],\n        snackbarMsg: \"\",\n        allowEdit: true,\n        scheduleChanged: true,\n        goToSearch: false,\n        goToCreate: false,\n        rejected: [],\n        allNumbers: [],\n        editLoad: true,\n        displayColorPicker: [false, false, false, false, false],\n//        this.scheduleRef = React.createRef();\n      }\n      if(localStorage.getItem('palette') == undefined){\n        localStorage.setItem('palette', JSON.stringify(['#9BCFB8', '#7FB174', '#689C97', '#072A24', '#D1DDDB']))\n      }\n      if(localStorage.getItem('steps') == undefined){\n        localStorage.setItem('steps',true)\n      }\n      \n    }\n\n\n    handlePageChange = (e,index) => {\n      this.setState(state =>{\n        var currentContent = state.generatedContents[index];\n        return {currentContent};\n      }, () => {\n        const currentClasses = [];\n        const offerings = this.state.currentContent.props.offerings\n        for(var i = 0 ; i < offerings.length ; i += 1){\n          var alreadyAdded = false;\n          for(var j = 0 ; j < currentClasses.length ; j += 1){\n            if(offerings[i].classnumber == currentClasses[j].classnumber){\n              alreadyAdded = true\n            }\n          }\n          if(!alreadyAdded){\n            currentClasses.push({title: offerings[i].course + ' ' + offerings[i].section, classnumber: offerings[i].classnumber, course: offerings[i].course_id})\n        }}\n        this.setState({currentClasses})\n      });\n\n      \n      this.setState({currentPage: index});\n      this.setState(state =>{\n        var currentPage = index;\n        return {currentPage};\n      });\n      console.log(\"pressed page \" + index);\n      console.log(this.state.generatedContents[index]);\n      window.scrollTo({top: 0, behavior: 'smooth'});\n  }\n\n  createTimeslot = (day, hour, minute) =>{\n      if(day == 'M'){\n          return new Date(2018, 5, 25, hour, minute);\n      }else if(day == 'T'){\n          return new Date(2018, 5, 26, hour, minute);\n      }else if(day == 'W'){\n          return new Date(2018, 5, 27, hour, minute);\n      }else if(day == 'H'){\n          return new Date(2018, 5, 28, hour, minute);\n      }else if(day == 'F'){\n          return new Date(2018, 5, 29, hour, minute);\n      }else if(day == 'S'){\n          return new Date(2018, 5, 30, hour, minute);\n      }\n  }\n\n  createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n    return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n  }\n\n  componentDidMount(){\n    // var pal1 = ['#EAC9C0', '#DAB2D3', '#9EDAE3', '#65C4D8', '#FFD0D6', '#B7DDE0', '#FEE19F', '#735b69'];\n    // var pal2 = ['#A9DFED', '#EBD6E8', '#84C0E9', '#37419A', '#7CCAAE', '#A299CA', '#FFb69B', '#ECEC84'];\n    // var pal3 = ['#9BCFB8', '#7FB174', '#689C97', '#072A24', '#D1DDDB', '#85B8CB', '#1D6A96', '#283B42'];\n    // this.processPaletteChoices('Pastel Blossoms', pal1);\n    // this.processPaletteChoices('Halographic', pal2);\n    // this.processPaletteChoices('Plantita', pal3);\n\n    // var pal4 = ['#138086', '#534666', '#CD7672', '#DC8665', '#E8A49C', '#EEB462'];\n    var pal5 = ['#522157', '#8B4C70', '#C2649A', '#E4C7B7', '#E4DFD9'];\n    // var pal6 = ['#205072', '#2C6975', '#329D9C', '#56C596', '#68B2A0', '#7BE495', '#CDE0C9', '#CFF4D2'];\n    // var pal7 = ['#9F8189', '#F3ABB6', '#FAA7B8', '#FBEEE6', '#FFCAD4', '#FFE5D8'];\n    var pal8 = ['#0191B4', '#35BBCA', '#D3DD18', '#F8D90F', '#FE7A15'];\n    var pal9 = ['#47CACC', '#63BCC9', '#CDB3D4', '#E7B7C8', '#FFBE88'];\n    var pal10 = ['#C6878F', '#B79D94', '#969696', '#67697C', '#253D5B'];\n    // this.processPaletteChoices('Pal4', pal4);\n    this.processPaletteChoices('Pal5', pal5);\n    // this.processPaletteChoices('Pal6', pal6);\n    // this.processPaletteChoices('Pal7', pal7);\n    this.processPaletteChoices('Pal8', pal8);\n    this.processPaletteChoices('Pal9', pal9);\n    this.processPaletteChoices('Pal10', pal10);\n    if(!this.state.dataReceived){\n      this.retrieveSchedInfo()\n    }\n    this.randomPalette()\n\n\n  }\n\n  randomPalette = () => {\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? \"0\" + hex : hex;\n    }\n    function rgbToHex(r, g, b) {\n      return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n    axios.get('https://animosched-backend-backup.herokuapp.com/api/randompalette/'\n    ).then(res => {\n      const chosenPalette = []\n      console.log(res.data)\n      res.data.result.map(color => {\n        chosenPalette.push(rgbToHex(color[0], color[1], color[2]))\n      })\n      this.setState({chosenPalette})\n    })\n  }\n\n  retrieveSchedInfo = () => {\n    axios.get('https://animosched-backend-backup.herokuapp.com/api/schedulelist/'+localStorage.getItem('user_id')+'/')\n    .then(res => {\n        const schedules = []\n        res.data.map(newSchedule =>{\n            var count = 0;\n            const scheduleContent = []\n            const tableContent = []\n            var earliest = 9\n            var latest = 17\n            var arranged = groupArray(newSchedule.courseOfferings, 'classnumber');\n            for (let key in arranged) {\n              var days = []\n              var day = ''\n              var classnumber = ''\n              var course = ''\n              var course_id = ''\n              var section = ''\n              var faculty = ''\n              var timeslot_begin = ''\n              var timeslot_end = ''\n              var room = ''\n              var max_enrolled = ''\n              var current_enrolled = ''\n              arranged[key].map(offering => {\n                days.push(offering.day)\n                classnumber = offering.classnumber\n                course = offering.course\n                course_id = offering.course_id\n                section = offering.section\n                faculty = offering.faculty\n                timeslot_begin = offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3)\n                timeslot_end = offering.timeslot_end.substring(0, offering.timeslot_end.length - 3)\n                room = offering.room\n                max_enrolled = offering.max_enrolled\n                current_enrolled = offering.current_enrolled\n              })\n              days.map(day_code => {\n                day += day_code;\n              })\n              const newTableContent = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n              tableContent.push(newTableContent)\n            }\n            newSchedule.courseOfferings.map(offering=>{\n                var startTime = offering.timeslot_begin.split(':');\n                var endTime = offering.timeslot_end.split(':');\n                const newContent = \n                {\n                    id: count,\n                    title: offering.course + ' ' + offering.section,\n                    section: offering.section,\n                    startDate: this.createTimeslot(offering.day,startTime[0],startTime[1]),\n                    endDate: this.createTimeslot(offering.day,endTime[0],endTime[1]),\n                    location: offering.room,\n                    professor: offering.faculty,\n                    startTime: offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3),\n                    endTime: offering.timeslot_end.substring(0, offering.timeslot_end.length - 3),\n                    days: offering.day,\n                    classCode: offering.classnumber \n                }\n                if(earliest > Number(startTime[0])){\n                    earliest = Number(startTime[0])\n                }\n                if(latest < Number(endTime[0]) + 1){\n                    latest = Number(endTime[0]) + 1\n                }\n                scheduleContent.push(newContent);\n\n                count += 1;\n            })\n            schedules.unshift({\n                id: newSchedule.id,\n                title: newSchedule.title,\n                scheduleContent: scheduleContent,\n                tableContent: tableContent, \n                prefContent: [],\n                conflictsContent: newSchedule.information,\n                earliest: earliest,\n                latest: latest,\n                offerings: newSchedule.courseOfferings\n            });\n        })\n        console.log(schedules)\n        this.setState({schedules});\n        this.setSchedInfo();\n        this.setState({success: true});\n        this.setState({loading: false});\n        this.setState({dataReceived: true})\n        this.setState({scheduleChanged: true})\n    }).catch(error => {\n        console.log(error)\n        this.setState({success: false});\n        this.setState({loading: false});\n    })\n  }\n\n  setSchedInfo = () => {\n    console.log(this.state.schedules)\n    if(this.state.schedules.length > 0){      \n      const palette = JSON.parse(localStorage.getItem('palette'))\n      var generatedContents = this.state.schedules.map((item, index) =>\n          <SchedViewHome key={item.id} id={item.id} offerings={item.offerings} tableContent={item.tableContent} scheduleContent={item.scheduleContent} titleName={item.title} earliest={item.earliest} latest={item.latest} updateSchedTitle={this.updateSchedTitle} palette={palette} allowEdit={this.state.allowEdit}/>\n      );\n      this.setState({currentPage: 0})\n      this.setState({generatedContents});\n      // this.setState({hideGenContent: false});\n      this.setState({pagesCount: generatedContents.length});\n      this.setState({currentContent: generatedContents[0]},() => {\n        const currentClasses = [];\n        const offerings = this.state.currentContent.props.offerings\n        for(var i = 0 ; i < offerings.length ; i += 1){\n          var alreadyAdded = false;\n          for(var j = 0 ; j < currentClasses.length ; j += 1){\n            if(offerings[i].classnumber == currentClasses[j].classnumber){\n              alreadyAdded = true\n            }\n          }\n          if(!alreadyAdded){\n            currentClasses.push({title: offerings[i].course + ' ' + offerings[i].section, classnumber: offerings[i].classnumber, course: offerings[i].course_id})\n          }\n        }\n        this.setState({currentClasses, scheduleChanged: true})\n      })\n    }\n  }\n\n  updateSchedTitle=(text)=>{\n    var newArray = [];\n    const currentContent = this.state.currentContent;\n    // var index = newArray.findIndex(this.state.currentContent);\n    axios.patch('https://animosched-backend-backup.herokuapp.com/api/schedules/'+currentContent.props.id+'/',{\n      title: text\n    }).then(res => {\n      const newContent = <SchedViewHome key={currentContent.props.id} id={currentContent.props.id} scheduleContent={currentContent.props.scheduleContent} tableContent={currentContent.props.tableContent} earliest={currentContent.props.earliest} latest={currentContent.props.latest} titleName={text} updateSchedTitle={this.updateSchedTitle} allowEdit={this.state.allowEdit} palette={currentContent.props.palette}/>\n\n      this.state.generatedContents.map(value=>{\n          if(value.key == this.state.currentContent.key){\n              newArray.push(newContent)\n          }else{\n              newArray.push(value)\n          }\n      })\n\n      this.setState({generatedContents: newArray});\n      this.setState({currentContent: newContent});\n      window.location.reload();\n    }).catch(err => {\n      console.log(err.response)\n    })\n  }\n\n deleteSchedule=()=>{\n  var newSchedule = [...this.state.generatedContents];\n  var currentPage = this.state.currentPage;\n  var index = currentPage;\n\n  axios.delete('https://animosched-backend-backup.herokuapp.com/api/schedules/'+this.state.currentContent.props.id+'/').then(res => {\n    window.location.reload()\n  }).catch(err => {\n    console.log(err.response)\n  })\n  if(index !== -1){\n    newSchedule.splice(index, 1);\n  }\n  this.setState({generatedContents: newSchedule})\n\n  if(currentPage == this.state.generatedContents.length - 1){\n    currentPage = currentPage - 1;\n    this.setState({currentPage});\n    this.setState({currentContent: this.state.generatedContents[currentPage-1]});\n\n  }\n    this.setState({openAlert: false});\n\n    let snackBarVariables = [...this.state.snackBarVariables];\n    this.setState({snackbarMsg: \"Your schedule has been successfully deleted!\"});\n    snackBarVariables[0].snackBarSuccess = true;\n    // snackBarVariables[1].snackBarFailed = true;\n    this.setState({snackBarVariables});\n    console.log(snackBarVariables);\n }\n\n handleClickOpenAlert = () => {\n   this.setState({openAlert: true});\n  }\n\n  handleCloseAlert = () => {\n    this.setState({openAlert: false});\n  }\n\n  handleCloseSnackBar = (event, reason, snackBarIndex) => {\n    console.log(event);\n    console.log(reason);\n\n    if (reason === 'clickaway') {\n      return;\n    }\n    \n  \n    let snackBarVariables = [...this.state.snackBarVariables];\n    if(snackBarIndex == 0){\n      snackBarVariables[0].snackBarSuccess = false;\n    }else if(snackBarIndex == 1){\n      snackBarVariables[1].snackBarFailed = false;\n    }\n    this.setState({snackBarVariables});\n  }\n\n  exportSched = () => {\n    window.scrollTo(0, 0);\n    html2canvas(document.querySelector(\"#savedSchedContent\")).then(canvas => {\n//      document.location.href = canvas.toDataURL().replace('image/png', 'image/octet-stream');\n        var filename = this.state.currentContent.title + \".png\";\n        console.log(this.state.currentContent.props.titleName);\n        console.log(filename);\n        this.saveAs(canvas.toDataURL(), this.state.currentContent.props.titleName+\".png\"); \n        \n\n    });\n\n    let snackBarVariables = [...this.state.snackBarVariables];\n    this.setState({snackbarMsg: \"Your schedule image is downloading!\"});\n    snackBarVariables[0].snackBarSuccess = true;\n    // snackBarVariables[1].snackBarFailed = true;\n    this.setState({snackBarVariables});\n    console.log(snackBarVariables);\n  }\n  \n  saveAs = (uri, filename) => {\n\n    var link = document.createElement('a');\n\n    if (typeof link.download === 'string') {\n\n        link.href = uri;\n        link.download = filename;\n\n        //Firefox requires the link to be in the body\n        document.body.appendChild(link);\n\n        //simulate click\n        link.click();\n\n        //remove the link when done\n        document.body.removeChild(link);\n\n    } else {\n\n        window.open(uri);\n\n    }\n}\n\n  handleCloseModalCustomize = ()=>{\n    this.setState({openModalCustomize: false})\n  }\n\n  handleOpenModalCustomize = ()=>{\n    console.log(\"Hello opening modal\");\n    this.setState({openModalCustomize: true})\n    console.log(this.state.openModalCustomize);\n  }\n\n  toggleModal = () => {\n    var openModalVar = this.state.openModalCustomize;\n    this.setState({openModalCustomize: !openModalVar});\n  }\n\n  toggleModalEdit = () => {\n    var openModalVar = this.state.openModalEdit;\n    this.setState({openModalEdit: !openModalVar});\n  }\n\n\n\n  processPaletteChoices = (title, paletteArray) => {\n    const colorDiv = paletteArray.map(function(palColor, index){\n                        var newstyle = {backgroundColor: palColor, color: palColor, width:\"50px\", fontSize:\"8px\", padding: \"1em\", display: \"table-cell\"};\n                        if(index == 0){\n                          newstyle = {backgroundColor: palColor, color: palColor, width:\"50px\", fontSize:\"8px\", padding: \"1em\", display: \"table-cell\", borderRadius: \"100px 0px 0px 100px\" };\n                        }else if(index == paletteArray.length - 1){\n                          newstyle = {backgroundColor: palColor, color: palColor, width:\"50px\", fontSize:\"8px\", padding: \"1em\", display: \"table-cell\", borderRadius: \"0px 100px 100px 0px\" };\n                        }\n                      return(\n                        <div key={index} style= {newstyle}>\n                          {palColor}\n                        </div>\n                      )\n                    });\n\n      const paletteDiv = <div className={\"colorContainer\"} style={{width: \"50%\", display: \"table\"}}> {colorDiv}</div>\n\n      var paletteChoices = this.state.paletteChoices;\n      paletteChoices.push({id: this.state.paletteChoices.length, title: title, paletteDiv: paletteDiv, paletteArray: paletteArray});\n      console.log(paletteChoices);\n      this.setState({paletteChoices});\n  }\n\n  handlePaletteChange=(event)=>{\n    this.setState({chosenPalette: event.target.value})\n    console.log(this.state.currentContent)\n    console.log(this.state.currentContent.props)\n    console.log(event.target.value);\n  }\n\n  handleClassBoxChange = (event) => {\n    var newDetailsList = [...this.state.classboxDetailsList];\n    newDetailsList.map(value=>{\n        if(value.id === Number(event.target.id)){\n            value.checked = event.target.checked;\n        }\n    })\n    this.setState({newClassboxDetailsList: newDetailsList});\n    // this.setState({[event.target.name]: event.target.checked });\n  };\n\n  handleCustomizeSave = () =>{\n    console.log(\"Class Box changes saved\");\n    // this.setState({chosenPalette: this.state.newChosenPalette});\n    // this.setState({classboxDetailsList: this.state.newClassboxDetailsList});\n    this.setState({scheduleChanged: false})\n    localStorage.setItem('palette', JSON.stringify(this.state.chosenPalette))\n    this.setSchedInfo();\n    this.setState({openModalCustomize: false});\n    \n    let snackBarVariables = [...this.state.snackBarVariables];\n    this.setState({snackbarMsg: \"Your schedule customization changes have been successfully saved!\"});\n    snackBarVariables[0].snackBarSuccess = true;\n    // snackBarVariables[1].snackBarFailed = true;\n    this.setState({snackBarVariables});\n    console.log(snackBarVariables);\n  }\n\n  handleEditChange =(e, val)=>{\n    this.setState({newCurrentClasses: val});\n  }\n\n  handleEditAdd=()=>{\n    console.log(\"Schedule edit changes saved\");\n    const currentClasses = this.state.currentClasses\n    this.state.newCurrentClasses.map(offering => {\n      console.log(offering)\n      currentClasses.push({title: offering.course + ' ' + offering.section, classnumber: offering.classNmbr, course: offering.course_id})\n    })\n    this.setState({currentClasses, newCurrentClasses: []}, () => {\n      console.log(currentClasses)\n    })\n  }\n\n  handleEditCheck=()=>{\n    this.setState({editLoad: false})\n    console.log(\"Schedule edit changes saved\");\n    const currentClasses = this.state.currentClasses\n    const classnumbers = []\n    const newclassnumbers = []\n    const courses = []\n    const allNumbers = []\n    this.state.newCurrentClasses.map(offering => {\n      console.log(offering)\n      // currentClasses.push({title: offering.course + ' ' + offering.section, classnumber: offering.classNmbr, course: offering.course_id})\n      newclassnumbers.push(offering.classNmbr)\n      courses.push(offering.course_id)\n    })\n    this.setState({currentClasses, newCurrentClasses: []}, () => {\n      console.log(currentClasses)\n    })\n\n    const sched_id = this.state.currentContent.props.id\n    const user_id = localStorage.getItem('user_id')\n\n    currentClasses.map(offering => {\n      classnumbers.push(offering.classnumber)\n      courses.push(offering.course)\n    })\n    console.log(classnumbers)\n    console.log(newclassnumbers)\n    console.log(courses)\n\n    let snackBarVariables = [...this.state.snackBarVariables];\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/editschedule/',{\n      classes:classnumbers,\n      newclasses:newclassnumbers,\n      courses,\n      sched_id,\n      user_id\n    }).then(res => {\n      console.log(res)\n      console.log(res.data)\n      this.setState({allNumbers: res.data['classnumbers']}, () => {\n        if(res.data['rejected'].length > 0){\n          this.setState({rejected:res.data['rejected']}, ()=>{\n              this.setState({editDialog: true})\n          })\n        }else{\n          this.handleEditSave()\n        }\n      })\n      // this.setState({snackbarMsg: \"Your schedule changes have been successfully saved!\"});\n\n      // snackBarVariables[0].snackBarSuccess = true;\n      // // snackBarVariables[1].snackBarFailed = true;\n      // this.setState({snackBarVariables});\n      // console.log(snackBarVariables);\n      // window.location.reload();\n    }).catch(err => {\n      console.log(err.response)\n    })   \n    // this.setState({openModalEdit: false});\n  }\n  \n  \n  handleEditSave=()=>{\n    const sched_id = this.state.currentContent.props.id\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/saveeditschedule/',{\n      classnumbers:this.state.allNumbers,\n      sched_id,\n    }).then(res => {\n      window.location.reload()\n      // this.setState({snackbarMsg: \"Your schedule changes have been successfully saved!\"});\n      // snackBarVariables[0].snackBarSuccess = true;\n      // // snackBarVariables[1].snackBarFailed = true;\n      // this.setState({snackBarVariables});\n      // console.log(snackBarVariables);\n      // window.location.reload();\n      this.setState({editLoad: true})\n      this.setState({editDialog: false})\n    }).catch(err => {\n      this.setState({editLoad: true})\n      this.setState({editDialog: false})\n      console.log(err.response)\n    })   \n  }\n\n  handleDelete=(index)=>{\n    const currentClasses = this.state.currentClasses\n    if (index > -1) {\n      currentClasses.splice(index, 1);\n    }\n    this.setState({currentClasses})\n\n  }\n\n  goToCreateSchedule = () => {\n    this.setState({goToCreate: true});\n  }\n  \n  goToSearchCourse = () => {\n    this.setState({goToSearch: true});\n  }\n\n  renderRedirect = () => {\n    if(this.state.goToSearch){\n      return <Redirect to='/login/'/>\n    }else if(this.state.goToCreate){\n      return <Redirect to='/login/'/>\n    }\n\n  }\n\n  tutorialDone = () => {\n    localStorage.setItem('steps',false)\n  }\n  handleClose = () => {\n    this.setState({editLoad: true})\n    this.setState({editDialog: false})\n  }\n\n  handleColorPicker = (index) => {\n    const displayPicker = [] \n    this.state.displayColorPicker.map((picker, index2) => {\n      if(index == index2){\n        displayPicker.push(true)\n      }else{\n        displayPicker.push(false)\n      }\n    });\n    this.setState({displayColorPicker:displayPicker})\n  }\n  handleClosePicker = (index) => {\n    const displayPicker = [] \n    this.state.displayColorPicker.map((picker, index2) => {\n      displayPicker.push(false)\n    });\n    this.setState({displayColorPicker:displayPicker})\n  }\n  handleChangePicker = (color,e,index) => {\n    // console.log(val)\n    const chosenPalette = this.state.chosenPalette;\n    chosenPalette[index] = color['hex'];\n    this.setState({chosenPalette})\n  } \n  pagination = () => {\n    return(\n      <div id=\"viewCoursesHome\" className = \"paginationContainer\" style={(this.state.generatedContents != null) ? {} : {display: \"none\"}}>\n            <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                <PaginationItem disabled={this.state.currentPage <= 0}>\n                    <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPage - 1)}\n                        previous/>\n                </PaginationItem>\n                {[...Array(this.state.pagesCount)].map((page, i) => \n                    <PaginationItem active={i === this.state.currentPage} key={i} className={'paginationItemStyle'}>\n                        <PaginationLink onClick={e => this.handlePageChange(e, i)} className={'paginationLinkStyle'}>\n                        {i + 1}\n                        </PaginationLink>\n                    </PaginationItem>\n                    )}\n                <PaginationItem disabled={this.state.currentPage >= this.state.generatedContents.length - 1}>\n                    <PaginationLink\n                        onClick={e => this.handlePageChange(e, this.state.currentPage + 1)}\n                        next\n                    />\n                    </PaginationItem>\n            </Pagination>\n      </div>\n    )\n  }\n\n    render() {\n        this.state.pagesCount = this.state.generatedContents.length;\n        this.state.currentContent = this.state.generatedContents[this.state.currentPage];\n\n        const { classes } = this.props;\n        const steps = [\n          {\n            intro: 'Welcome to AnimoSched!',\n          },\n          {\n            element: '#searchStep',\n            intro: 'Use the course search to find available classes!',\n            // position: 'right',\n            // tooltipClass: 'myTooltipClass',\n            // highlightClass: 'myHighlightClass',\n          },\n          {\n            element: '#preferencesStep',\n            intro: 'Set your preferences to help generate the schedules that suit you best!',\n          },\n          {\n            element: '#genschedStep',\n            intro: 'Generate and save a schedule easily!',\n          },\n          {\n            // element: '',\n            // position: 'bottom-right-aligned',\n            intro: 'Explore the site! You can also compare schedules and generate schedules together with your friends!',\n          },\n        ];\n\n      return (\n        <div style={!this.props.logged_in? sectionStyle : {}}>\n          {this.props.menu('savedSchedules')}\n\n          {this.state.dataReceived ? \n          <div className={\"homepage\"} style={this.props.logged_in ? {} : {display: \"none\"}}>\n            <div className={\"hasContent\"} style={(this.state.generatedContents.length > 0) ? {} : {display: \"none\"}}>\n\n\n            <Steps\n              enabled={localStorage.getItem('steps') == 'true' && this.state.generatedContents.length <= 0 && this.props.logged_in}\n              steps={steps}\n              initialStep={0}\n              onExit={this.tutorialDone}\n              onComplete={this.tutorialDone}\n            />\n            <Grid container>\n              <Grid item xs={12}>\n                <br></br>\n                    <Typography gutterBottom variant=\"h3\" align=\"center\">\n                      SECOND TRIMESTER, AY 2019 - 2020\n                    </Typography>\n              </Grid>\n\n              <Grid item xs={2}>\n              </Grid>\n\n              <Grid item xs={6} className={'gridSavedContent'}>\n                <div id='savedContent' className='savedContent'>\n                  {this.state.scheduleChanged ? \n                    <span>{this.state.currentContent}</span>\n                  : \n                  <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                  </div>\n                  }\n                </div>\n                {this.pagination()}\n              </Grid>\n\n              {/* <Grid item xs={1}>\n              </Grid> */}\n       \n              <Grid item xs={4} align=\"center\" justify=\"center\" alignItems=\"center\" alignContent=\"center\" direction=\"column\">\n                <div class='optionList'>\n                  <Grid item xs={1} direction=\"column\" align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      className={classes.buttonStyle}\n                      endIcon={<DateRangeIcon/>}\n                      onClick={this.toggleModalEdit}\n                      >\n                      Edit\n                    </Button>\n                      <Modal isOpen={this.state.openModalEdit} toggle={this.toggleModalEdit} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" >\n                        <ModalHeader toggle={this.toggleModalEdit}><h4>Edit Schedule</h4></ModalHeader>\n                        <ModalBody>\n                          <div className=\"searchBarEdit\" >\n                            <h5>Classes currently in this schedule:</h5>                              \n                              {/* <h7>Your current classes</h7> */}\n                              <div style={{display: \"flex\", justifyContent: \"center\", width: \"-webkit-fill-available\"}}>                              \n                                <span style={{borderRadius: \"4px\", minHeight: \"3.8em\", width: \"-webkit-fill-available\"}} className={'edit-current-classes-container'}>\n                                  {this.state.currentClasses.map((current, index) => (\n                                    <Chip label={current.title} onDelete={() => this.handleDelete(index)} style={{marginBottom: \"5px\", marginRight: \"5px\"}}></Chip>\n                                  ))}\n                                </span>\n                              </div>\n                              <div style={{display: \"flex\", justifyContent: \"center\", width: \"-webkit-fill-available\", marginBottom: \"15px\"}}>\n                                <ComboBox page={\"edit\"} value={this.state.newCurrentClasses} onChange={this.handleEditChange}></ComboBox>\n                                  {/* <Button\n                                      variant=\"contained\"\n                                      color = \"Primary\"\n                                      style={{backgroundColor: \"green\", color:\"white\", height:\"56px\"}}\n                                      onClick={this.handleEditCheck}>\n                                      {'Edit'}\n                                  </Button> */}\n                              </div>\n                              <Dialog\n                                open={this.state.editDialog}\n                                onClose={this.handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                              >\n                                <DialogTitle id=\"alert-dialog-title\">{\"Class Conflicts\"}</DialogTitle>\n                                <DialogContent>\n                                  <DialogContentText id=\"alert-dialog-description\">\n                                    Adding these classes will not allow you to get these courses:\n                                    <List>\n                                      <li>\n                                        <ul>\n                                          {this.state.rejected.map(r => \n                                            <ListItem>\n                                              <ListItemText primary={r} />\n                                            </ListItem>\n                                          )}\n                                        </ul>\n                                      </li>\n                                  </List>\n\n                                  </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                  <Button onClick={this.handleClose} color=\"primary\">\n                                    Cancel\n                                  </Button>\n                                  <Button onClick={this.handleEditSave} color=\"primary\" autoFocus>\n                                    Continue\n                                  </Button>\n                                </DialogActions>\n                              </Dialog>\n                          </div>\n                        </ModalBody>\n                      <ModalFooter>\n                      <Button style={{color: \"gray\"}} onClick={this.toggleModalEdit}>Cancel</Button>\n                        <Button color=\"primary\" onClick={this.handleEditCheck}>Save Changes</Button>{' '}\n                        \n                      </ModalFooter>\n                    </Modal>    \n                    <Modal isOpen={!this.state.editLoad} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" centered={true}>\n                        <ModalHeader>\n                            <center>\n                                <br></br><p>Please wait...In the process of loading your schedules</p>\n                                <ReactLoading type={'spin'} color={'#9BCFB8'} height={'10%'} width={'10%'}/>\n                            </center>\n                            </ModalHeader>\n                    </Modal> \n                  </Grid>\n                  \n                  <Grid item xs={1} direction=\"column\" align=\"center\">\n                    <Button\n                    variant=\"contained\"\n                    className={classes.buttonStyle}\n                    onClick={this.handleOpenModalCustomize}\n                    endIcon={<PaletteIcon/>}\n                    >\n                      Customize\n                    </Button>\n                    <Modal isOpen={this.state.openModalCustomize} toggle={this.toggleModal} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\">\n                      <ModalHeader toggle={this.toggleModal}><h4>Customize Schedule</h4></ModalHeader>\n                      <ModalBody>\n                        {/* Select a class box color palette */}                  \n                        <div>\n                        <h5>Color Palette</h5>\n                        <TextField\n                            id=\"outlined-select-break\"\n                            select\n                            label=\"Color Palette\"\n                            onChange={this.handlePaletteChange}\n                            helperText=\"Choose a pre-made color palette.\"\n                            variant=\"outlined\"\n                            style={{width: \"100%\", marginTop: \"10px\", marginBottom: \"25px\"}}\n                            value={this.state.chosenPalette}\n                            maxRows=\"3\"\n                            autoWidth= {true}\n                            >\n                            \n                            {/* <MenuItem key={1} value={\"option.value\"}>\n                                {trycolor}\n                            </MenuItem> */}\n                                  \n                            {this.state.paletteChoices.map((option) => (\n                                <MenuItem key={option.title} value={option.paletteArray}>\n                                {option.paletteDiv}\n                                </MenuItem>\n                                    ))}\n                        </TextField>\n                        <center>\n                          <Grid container spacing={6}>\n                            {this.state.chosenPalette.map((color, index) => \n                              <Grid item xs={2}>\n                                <Chip onClick={() => this.handleColorPicker(index)} clickable style={{backgroundColor:color}} label={color}></Chip>\n                                { this.state.displayColorPicker[index] ? <div style={ styles.popover }>\n                                  <div style={ styles.cover } onClick={() => this.handleClosePicker(index) }/>\n                                  <SketchPicker color={color} onChange={(color, event) => this.handleChangePicker(color,event,index) } />\n                                </div> : null }\n                              </Grid>\n                            )}\n                          </Grid>\n                        </center>\n                        <center>\n                          <Button\n                            variant=\"contained\"\n                            className={classes.buttonStyle}\n                            onClick={this.randomPalette}\n                            >\n                            Generate Random Palette\n                          </Button>\n                        </center>\n\n                        </div>\n                        \n                        {/* <h5>Class Box Details</h5>\n                        <div>\n                          <FormGroup>\n                              <FormControlLabel\n                              control = {<GreenCheckbox checked={this.state.classboxDetailsList[0].checked} onChange={this.handleClassBoxChange} id={this.state.classboxDetailsList[0].id} color=\"primary\"/>}label=\"Show name of faculty\" />\n                              <FormControlLabel\n                              control = {<GreenCheckbox checked={this.state.classboxDetailsList[1].checked} onChange={this.handleClassBoxChange} id={this.state.classboxDetailsList[1].id} color=\"primary\"/>}label=\"Show start and end time\" />\n                              <FormControlLabel\n                              control = {<GreenCheckbox checked={this.state.classboxDetailsList[2].checked} onChange={this.handleClassBoxChange} id={this.state.classboxDetailsList[2].id} color=\"primary\"/>}label=\"Show room assigned\" />\n                          </FormGroup>\n                        </div> */}\n                      </ModalBody>\n                    <ModalFooter>\n                      <Button style={{color: \"gray\"}}onClick={this.toggleModal}>Cancel</Button>\n                      <Button color=\"primary\" onClick={this.handleCustomizeSave}>Save Changes</Button>{' '}\n                    </ModalFooter>\n                  </Modal>    \n                  </Grid>\n\n                  <Grid item xs={1} direction=\"column\" align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      className={classes.buttonStyle}\n                      onClick={this.exportSched}\n                      endIcon={ <GetAppIcon/>}\n                      >\n                      Export\n                    </Button>\n                  </Grid>\n\n                  <Grid item xs={1} direction=\"column\" align=\"center\">\n                    <Button\n                      variant=\"contained\"\n                      className={classes.deleteButtonStyle}\n                      onClick={this.handleClickOpenAlert}\n                      endIcon={<DeleteIcon/>}\n                      >\n                      Delete\n                    </Button>\n                      {this.state.currentContent != null ?\n                      <Dialog\n                        open={this.state.openAlert}\n                        onClose={this.handleCloseAlert}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                      >\n                        <DialogTitle id=\"alert-dialog-title\">{\"Confirm Deletion of Schedule\"}</DialogTitle>\n                        <DialogContent>\n                          <DialogContentText id=\"alert-dialog-description\">\n                            Do you want to delete \"{this.state.currentContent.props.titleName}\" from your saved schedules?\n                          </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleCloseAlert} style={{color: \"gray\"}}>\n                                Cancel\n                            </Button>\n                            <Button onClick={this.deleteSchedule} color=\"secondary\" autoFocus>\n                                Delete\n                            </Button>\n                            \n                          \n                        </DialogActions>\n                      </Dialog>\n                      : null }\n\n                      <Snackbar open={this.state.snackBarVariables[0].snackBarSuccess} autoHideDuration={4000} onClose={(event, reason)=>this.handleCloseSnackBar(event, reason,0)}>\n                        <Alert onClose={(event, reason)=>this.handleCloseSnackBar(event, reason, 0)} severity=\"success\">\n                          {this.state.snackbarMsg}{/* Your schedule has been successfully deleted! */}\n                        </Alert>\n                      </Snackbar>\n\n                      <Snackbar open={this.state.snackBarVariables[1].snackBarFailed} autoHideDuration={4000} onClose={(event, reason)=>this.handleCloseSnackBar(event, reason, 1)}>\n                        <Alert onClose={(event, reason)=>this.handleCloseSnackBar(event, reason, 1)} severity=\"error\">\n                        Delete failed\n                        </Alert>\n                      </Snackbar> \n                  </Grid>\n\n                  </div>\n              </Grid>\n\n              <Grid item xs={12} justify=\"center\" alignItems=\"center\">\n\n              </Grid>\n\n            </Grid>\n\n            </div> \n                          \n                        \n            <div className={\"hasNoContent\"} style={(this.state.generatedContents.length <= 0) ? {} : {display: \"none\"}}>\n              <Typography gutterBottom variant=\"h4\" align=\"center\" style={{marginTop: \"30px\"}}>\n                    You haven't made any schedules yet!\n              </Typography>\n              {/* Test A original */}\n              {/* <center>\n                  <a href=\"/preferences\" style={{textDecoration: \"none\"}}>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.prefbuttonStyle}\n                    >\n                    Set Schedule Preferences\n                  </Button>\n                </a>\n              </center>\n              <Typography gutterBottom variant=\"h5\" align=\"center\" style={{marginTop: \"30px\"}}>\n                    or\n              </Typography>\n                <center>\n                  <a href=\"/generateSchedule\" style={{textDecoration: \"none\"}}>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.buttonStyle}\n                    >\n                    Create Schedule\n                  </Button>\n                </a>\n              </center> */}\n            {/* Test B Big boi buttons */}\n            <Typography gutterBottom variant=\"h5\" align=\"center\" style={{marginTop: \"30px\", marginBottom: \"30px\"}}>\n                    Do you want to:\n              </Typography>\n            <Row horizontal='center' flexShrink={5}>\n            <Column style={{marginLeft:\"30px\"}}>\n                <a href=\"/search_courses\" style={{textDecoration: \"none\"}}>\n                    <Button\n                      id=\"searchStep\"\n                      variant=\"contained\"\n                      className={classes.testbuttonStyle}\n                      startIcon={<SearchIcon fontSize=\"large\"/>}\n                      size=\"large\"\n                      >\n                      Search Classes\n                    </Button>\n                  </a>\n              </Column>\n              <Column style={{marginLeft:\"30px\"}}>\n                <a href=\"/preferences\" style={{textDecoration: \"none\"}}>\n                    <Button\n                      id=\"preferencesStep\"\n                      variant=\"contained\"\n                      className={classes.testbuttonStyle}\n                      startIcon={<StarIcon fontSize=\"large\"/>}\n                      size=\"large\"\n                      >\n                      Set Preferences\n                    </Button>\n                  </a>\n              </Column>\n              <Column style={{marginLeft:\"30px\"}}>\n                <a href=\"/generateSchedule\" style={{textDecoration: \"none\"}}>\n                  <Button\n                    id=\"genschedStep\"\n                    variant=\"contained\"\n                    className={classes.testbuttonStyle}\n                    startIcon={<TodayIcon fontSize=\"large\"/>}\n                      size=\"large\"\n                    >\n                    Create Schedule\n                  </Button>\n                </a>\n              </Column>\n            </Row>\n\n            </div>\n\n          </div>\n          :\n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n            <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n          </div>\n          \n          }\n\n          <div className={\"landingpage\"} style={!this.props.logged_in? {height:\"100%\"} : {display: \"none\"}}>\n          \n          <img src={whiteBlob} className={\"whiteBlob\"}/>\n          <Grid container spacing={3} style={{flexGrow: 1}}>\n            <Grid item xs={12}>\n            </Grid>\n              <Grid item xs={12}>\n            </Grid>\n            <Grid item xs={6} style={{height:\"100%\"}}>\n                  <Typography gutterBottom variant=\"h3\" align=\"center\">\n                    Create your schedule!\n                  </Typography>\n            </Grid>\n            <Grid item xs={6}>\n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={1}>\n              <img src={calendarIcon} className={\"iconStyle\"}/>\n            </Grid>\n            <Grid item xs={3}>\n                          <Typography variant=\"body1\" gutterBottom>\n                            Enter your courses and select an automatically-generated schedule\n                          </Typography>\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n            <Grid item xs={2} style={{zIndex:\"100\"}}>\n              {/* <center><button type=\"button\" class=\"btn btn-success\">Create Schedule</button></center> */}\n              <center>\n                <Button\n                  variant=\"contained\"\n                  className={classes.buttonStyle}\n                  onClick={this.goToSearchCourse}\n                    style={{width: \"210px\"}}\n                  >\n                  Search Course Offerings\n                </Button>\n              </center>\n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={1}>\n              <img src={attachIcon} className={\"iconStyle\"}/>\n            </Grid>\n            <Grid item xs={3}>\n                            <Typography variant=\"body1\" gutterBottom>\n                            Customize the look of your\n                            schedule and save it as an image\n                          </Typography>\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n            <Grid item xs={2} style={{zIndex:\"100\"}}>\n               <center>\n                <Button\n                  variant=\"contained\"\n                  className={classes.buttonStyle}\n                  onClick={this.goToCreateSchedule}\n                  style={{width: \"210px\"}}\n                  // style={{backgroundColor: \"green\"}}\n                  >\n                  Create Schedule\n                </Button>\n              </center>\n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={1}>\n              <img src={laughIcon} className={\"iconStyle\"}/>\n            </Grid>\n        \n            <Grid item xs={3}>\n                            <Typography variant=\"body1\" gutterBottom>\n                            Share and compare schedules with your friends\n                            {/* collaborate with friends\n                            and create schedules\n                            as a group. */}\n                          </Typography>\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n            <Grid item xs={2} style={{zIndex:\"100\"}}>\n              {/* <center><button type=\"button\" class=\"btn btn-success\">Check Flowchart</button></center> */}\n             \n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n          </Grid>\n          {this.renderRedirect()}\n          </div>\n        </div>        \n      );\n    }\n  }\n\n  Index.propTypes={\n  classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(Index);","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Login.svg';\nimport { Redirect } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport GoogleLogin from 'react-google-login';\nimport axios from 'axios';\n\nimport { Container, Row, Col, Jumbotron, Card, CardBody } from \"reactstrap\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonLogin: {\n        fontSize: \"100%\",\n        width: \"110%\",\n        alignItems: 'center',\n        justifyContent: 'center',\n        textTransform: \"none\",\n        borderRadius: \"30px\",\n        padding: \"10px\",\n        paddingLeft: \"30px\",\n        paddingRight: \"30px\",\n        backgroundColor: \"green\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"green\",\n        '&:hover': {\n            color: \"green\",\n            backgroundColor: \"#FFFFFF\",\n          },\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  backBtn:{\n    color: \"white\", \n    marginLeft: \"5px\",\n  '&:hover': {\n      color: \"#d3d3d3\"\n    },\n  },\n});\n\nvar sectionStyle = {\n  // width: \"100%\",\n  minHeight: \"100vh\",\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n  overflow: \"hidden\",\n  backgroundImage: \"linear-gradient(#086e53, #579d8b)\"\n\n};\n\nclass Login extends Component {\n    constructor(props){\n        super();\n\n        this.state = {\n            fields: {},\n            errors: {},\n            helperEmail: \"\",\n            helperPassword: \"\",\n            snackBar: false,\n            loading: false,\n            success: false,\n            snackBarText: \"\",\n            fname: '',\n            lname: ''\n     \n        }\n\n    }\n\n    handleChange(field, e){    \t\t\n      let fields = this.state.fields;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n    }\n\n    handleValidation = () => {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      // EMAIL\n      if(!fields[\"email\"]){\n        formIsValid = false;\n        errors[\"email\"] = \"Required Email\"\n        this.setState({helperEmail: \"This field is required\"})\n      } else{\n        this.setState({helperEmail: \"\"})\n      }\n\n      if(typeof fields[\"email\"] !== \"undefined\"){\n        let lastAtPos = fields[\"email\"].lastIndexOf('@');\n        let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Invalid Email\";\n          this.setState({helperEmail: \"Enter a valid DLSU email\"});\n        }\n      }\n\n      // PASSWORD\n      if(!fields[\"pass\"]){\n        formIsValid = false;\n        errors[\"pass\"] = \"This field is required\"\n        this.setState({helperPassword: \"This field is required\"})\n      } else{\n        this.setState({helperPassword: \"\"})\n      }\n\n      this.setState({errors: errors});\n      return formIsValid;\n    }\n\n\n    // test = () =>{\n    //     console.log(this.state.token)\n    //     axios.get('https://animosched-backend-backup.herokuapp.com/api/auth/user/',\n    //     {\n    //         headers: {\n    //             'X-CSRF-TOKEN': this.state.token,\n    //         }\n    //     })\n    //     .then(res => {\n    //         console.log(res);\n    //         console.log(res.data);\n    //     })\n    //     .catch(error => {\n    //         console.log(error);\n    //     });\n    // }\n    \n    state = {\n        redirect: false\n      }\n\n      setRedirect = () => {\n        this.setState({\n          redirect: true\n        })\n        this.setState({loading:false});\n        this.setState({success:true});\n        \n      }\n      setRedirectRegister = () => {\n        this.setState({\n          redirectRegister: true\n        })\n        this.setState({loading:false});\n        this.setState({success:true});\n        \n      }\n\n      renderRedirect = () => {\n        if (this.state.redirect) {\n          return <Redirect to='/' />\n        }\n      }\n\n      renderRedirectRegister = () => {\n        var url = '/register?filled=true&googleId='+this.state.googleId+'&email='+this.state.email+'&fname='+this.state.fname+'&lname='+this.state.lname\n        if (this.state.redirectRegister) {\n          return <Redirect to={url} />\n        }\n      }\n\n      handleSubmit = (event) => {\n        event.preventDefault();\n        if(!this.state.loading){\n          this.setState({loading: true});\n          this.setState({success: false});\n        }else{\n          this.setState({success: true});\n            this.setState({loading: false});\n        } \n            \n\n        \n        if(this.handleValidation()){\n          const data = {\n              email: this.state.fields[\"email\"],\n              password: this.state.fields[\"pass\"]\n          }\n          this.props.handle_login(data, (res) => {\n            if(res == null){\n              this.setRedirect();\n            }else{\n              if(res.status == 400){\n                for (var key in res.data) {\n                  this.setState({snackBarText: res.data[key][0]})\n                }\n              }else{\n                  this.setState({snackBarText: \"Account does not exist.\"})\n              }\n              this.setState({snackBar: true})\n              this.setState({loading: false})\n            }\n          });\n        }\n        else{\n          // alert(\"Form has invalid input.\");\n          this.setState({snackBar: true});\n          this.setState({loading:false});\n          \n        }\n      }\n    \n    handleCloseSnackBar = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      this.setState({snackBar: false});\n    }\n\n    render() {\n      const { classes } = this.props;\n      return (\n        // <Redirect to=\"http://archerone-backend.herokuapp.com/accounts/google/login/\"></Redirect>\n        <div style={sectionStyle}>\n                \n                  <div className={\"backBtn\"}>\n                  <a className=\"backBtn\" href=\"/\">\n                    <ArrowBackIosIcon fontSize=\"large\"className={classes.backBtn} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                      {/* <svg class=\"bi bi-backspace\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path fill-rule=\"evenodd\" d=\"M8.603 4h7.08a1 1 0 011 1v10a1 1 0 01-1 1h-7.08a1 1 0 01-.76-.35L3 10l4.844-5.65A1 1 0 018.603 4zm7.08-1a2 2 0 012 2v10a2 2 0 01-2 2h-7.08a2 2 0 01-1.519-.698L2.241 10.65a1 1 0 010-1.302L7.084 3.7A2 2 0 018.603 3h7.08z\" clip-rule=\"evenodd\"></path>\n                          <path fill-rule=\"evenodd\" d=\"M7.83 7.146a.5.5 0 000 .708l5 5a.5.5 0 00.707-.708l-5-5a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                          <path fill-rule=\"evenodd\" d=\"M13.537 7.146a.5.5 0 010 .708l-5 5a.5.5 0 01-.708-.708l5-5a.5.5 0 01.707 0z\" clip-rule=\"evenodd\"></path>\n                      </svg> */}\n                      </a>\n                    </div>\n                \n\n                <div style={{textAlign: 'center'}}>\n                    <Row>\n                      <Col />\n                      <Col lg=\"8\">\n                        <h1 style={{color: \"white\"}}>\n                            <img\n                            alt=\"\"\n                            src=\"/logo.svg\"\n                            width=\"40\"\n                            height=\"40\"\n                            className=\"d-inline-block align-top\"/> \n                        AnimoSched</h1>\n                        <Jumbotron style={{padding: 32, backgroundColor: \"white\", marginLeft: \"15%\", marginRight: \"15%\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n                          <h3>\n                            Log in to your account!\n                          </h3>\n                            <div id=\"signup-form\">\n                              <form onSubmit={this.handleSubmit.bind(this)}>\n                                  {/* Email */}\n                                  <br/>\n                                  <TextField style={{width: 350}} error={this.state.errors[\"email\"]} helperText={this.state.helperEmail} id=\"outlined-basic\" label=\"DLSU Email\" variant=\"outlined\" name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/>\n                                  {/* <input name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}></input> */}\n                                  {/* <span className=\"error\">{this.state.errors[\"email\"]}</span> */}\n\n                                  <br/>\n                                  <br/>\n\n                                  {/* Password */}\n                                  <br/>\n                                  <TextField style={{width: 350}} error={this.state.errors[\"pass\"]} helperText={this.state.helperPassword} type=\"password\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" name=\"pass\" placeholder=\"●●●●●●●●\" value={this.state.fields[\"pass\"]} onChange={this.handleChange.bind(this, \"pass\")}/>\n                                  {/* <input type=\"password\" name=\"pass\" placeholder=\"●●●●●●●●\" onChange={this.handleChange.bind(this, \"pass\")} value={this.state.fields[\"pass\"]}></input> */}\n                                  {/* <span className=\"error\">{this.state.errors[\"pass\"]}</span> */}\n\n                                  <br/>\n                                  <br/>\n\n                                  {this.renderRedirect()}\n                                  {this.renderRedirectRegister()}\n                              \n                                  <input type=\"submit\" style={{height: 0, width: 0, padding: 0, border: 0}} />\n                                  <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                                  <div className={classes.root}>\n                                    <div className={classes.wrapper}> \n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.buttonLogin}\n                                        // disabled={this.state.loading}\n                                        onClick={this.handleSubmit}\n                                        style={{}}\n                                      >\n                                        Login\n                                      </Button>\n\n                                      {/* {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>} */}\n                                    </div>\n                                  </div>\n                                  </Row>\n                                  \n                              </form>\n                              <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                                <Alert onClose={this.handleCloseSnackBar} severity=\"error\">\n                                  {this.state.snackBarText}\n                                </Alert>\n                              </Snackbar>\n                              <br/>\n\n                          </div>\n\n                        </Jumbotron>\n                      </Col>\n                      <Col />\n                    </Row>\n                </div>\n        </div>        \n      );\n    }\n  }\n\nLogin.propTypes={\n  classes: PropTypes.object.isRequired,\n};\n  export default withStyles(styles)(Login);","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Register.svg';\nimport { Redirect } from \"react-router-dom\";\n\nimport ComboBox from '../components/ComboBox.jsx';\nimport axios from 'axios';\n\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport { Container, Row, Col, Jumbotron, Card, CardBody } from \"reactstrap\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n    backBtn:{\n      color: \"white\", \n      marginLeft: \"5px\",\n    '&:hover': {\n        color: \"#d3d3d3\",\n      },\n    },\n\n    buttonRegister: {\n      fontSize: \"100%\",\n      width: \"110%\",\n      alignItems: 'center',\n      justifyContent: 'center',\n      textTransform: \"none\",\n      borderRadius: \"30px\",\n      padding: \"10px\",\n      paddingLeft: \"30px\",\n      paddingRight: \"30px\",\n      backgroundColor: \"green\",\n      border: \"none\",\n      color: \"white\",\n      boxShadow: \"6px 5px #e8f4ea\",\n      borderStyle: \"solid\",\n      borderColor: \"green\",\n      '&:hover': {\n          color: \"green\",\n          backgroundColor: \"#FFFFFF\",\n        },\n    },\n\n    degreeStyle: {\n      alignItems: \"center\", \n      justifyContent: \"center\", \n      justify: \"center\", \n      placeItems: \"center\"\n    }\n  });\n\n  var sectionStyle = {\n    // width: \"100%\",\n    minHeight: \"100vh\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    overflow: \"hidden\",\n    backgroundImage: \"linear-gradient(#086e53, #579d8b)\"\n  \n  };\n\nclass Register extends Component {\n    constructor(props){\n        super(props);\n\n        this.degreeRef = React.createRef();\n\n        this.state = {\n            fields: {},\n            errors: {},\n            colleges: [],\n            degrees: [],\n            snackBar: false,\n            snackBarSucess: false,\n            snackBarText: \"\",\n            loading: false,\n            success: false,\n            errorFirstName: false,\n            helperFirstName: \"\",\n            errorLastName: false,\n            helperLastName: \"\",\n            errorEmail: false,\n            helperEmail: \"\",\n            errorID: false,\n            helperID: \"\",\n            errorCollege: false,\n            helperCollege: \"\",\n            errorDegree: false,\n            helperDegree: \"\",\n            errorPassword: false,\n            helperPassword: \"Must be a minimum of 8 characters\",\n            errorConPassword: false,\n            helperConPassword: \"Re-type your password here\",\n        }\n\n    }\n    componentWillMount(){\n        const fields = this.state.fields\n        const filled = new URLSearchParams(this.props.props.location.search).get('filled')\n        const googleId = new URLSearchParams(this.props.props.location.search).get('googleId')\n        const email = new URLSearchParams(this.props.props.location.search).get('email')\n        const firstName = new URLSearchParams(this.props.props.location.search).get('fname')\n        const lastName = new URLSearchParams(this.props.props.location.search).get('lname')\n        fields['pass'] = googleId+firstName+lastName\n        fields['passCon'] = googleId+firstName+lastName\n        fields['email'] = email\n        fields['firstName'] = firstName \n        fields['lastName'] = lastName \n        if(filled != undefined || filled != null){\n          this.setState({filled})\n        }\n        this.setState({fields})\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/colleges/')\n        .then(res => {\n          var newArray = [];\n          res.data.map(college=>{\n              newArray.push(college);\n          })\n          this.setState({colleges: newArray})\n        })\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/degrees/')\n        .then(res => {\n          var newArray = [];\n          res.data.map(degree=>{\n              newArray.push(degree);\n          })\n          this.setState({degrees: newArray});\n          console.log(newArray);\n        })\n      }\n\n    handleChange = (field, e) => {\n        // this.setState({\n        //     [e.target.name]: e.target.value\n        // })\n\n        let fields = this.state.fields;\n        fields[field] = e.target.value;        \n        if(field == 'college'){\n          fields['degree'] = undefined\n          console.log(this.degreeRef)\n          this.degreeRef.current.setState({value: undefined})\n          // this.degreeRef.current.setState({searchText: undefined})\n          // console.log(this.degreeRef.current.state.value)\n        }\n        this.setState({fields});\n\n    }\n\n    handleAutoCompleteChange = (e, val) => {\n        if(val != undefined){\n          let fields = this.state.fields;\n          fields['degree'] = val.id;\n          console.log(val.id);\n          this.setState({fields});\n        }else{\n          let fields = this.state.fields;\n          fields['degree'] = undefined;\n          this.setState({fields});\n        }\n    }\n\n    handleValidation = () => {\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n  \n        // FIRSTNAME\n        if(!fields[\"firstName\"]){\n            formIsValid = false;\n            errors[\"firstName\"] = \"Required First Name\"\n            this.setState({errorFirstName: true})\n            this.setState({helperFirstName: \"This field is required\"})\n        }else{\n            this.setState({errorFirstName: false})\n            this.setState({helperFirstName: \"\"})\n        }\n\n        // LASTNAME\n        if(!fields[\"lastName\"]){\n            formIsValid = false;\n            errors[\"lastName\"] = \"Required Last Name\"\n            this.setState({errorLastName: true})\n            this.setState({helperLastName: \"This field is required\"})\n        }else{\n            this.setState({errorLastName: false})\n            this.setState({helperLastName: \"\"})\n        }\n\n        // EMAIL\n        if(!fields[\"email\"]){\n          formIsValid = false;\n          errors[\"email\"] = \"Required Email\"\n            this.setState({errorEmail: true})\n            this.setState({helperEmail: \"This field is required\"})\n        }else{\n            this.setState({errorEmail: false})\n            this.setState({helperEmail: \"This field is required\"})\n        }\n  \n        if(typeof fields[\"email\"] !== \"undefined\"){\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\n  \n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n            formIsValid = false;\n            errors[\"email\"] = \"Invalid Email\";\n            this.setState({errorEmail: true})\n            this.setState({helperEmail: \"Enter a valid DLSU email\"})\n          }else{\n                this.setState({errorEmail: false})\n                this.setState({helperEmail: \"Enter a valid DLSU email\"})\n            }\n        }\n\n        // ID NUMBER\n        if(!fields[\"idNo\"]){\n            formIsValid = false;\n            errors[\"idNo\"] = \"Required ID Number\"\n            this.setState({errorID: true})\n            this.setState({helperID: \"This field is required\"})\n        }else{\n            this.setState({errorID: false})\n            this.setState({helperID: \"\"})\n        }\n  \n        // PASSWORD\n        if(!fields[\"pass\"]){\n          formIsValid = false;\n          errors[\"pass\"] = \"Required Password\"\n            this.setState({errorPassword: true})\n            this.setState({helperPassword: \"This field is required\"})\n        }else{\n            this.setState({errorPassword: false})\n            this.setState({helperPassword: \"Must be a minimum of 8 characters\"})\n        }\n\n        // CONFIRM PASSWORD\n        if(!fields[\"passCon\"]){\n            formIsValid = false;\n            errors[\"passCon\"] = \"Required Confirm Password\"\n            this.setState({errorConPassword: true})\n            this.setState({helperConPassword: \"This field is required\"})\n        }else{\n            this.setState({errorConPassword: false})\n            this.setState({helperConPassword: \"Re-enter your password here\"})\n        }\n\n        if(!fields[\"college\"]){\n            formIsValid = false;\n            errors[\"college\"] = \"Required College\"\n            this.setState({errorCollege: true})\n            this.setState({helperCollege: \"This field is required\"})\n        }else{\n            this.setState({errorCollege: false})\n            this.setState({helperCollege: \"\"})\n        }\n\n        if(!fields[\"degree\"]){\n            formIsValid = false;\n            errors[\"degree\"] = \"Required Degree\"\n            this.setState({errorDegree: true})\n            this.setState({helperDegree: \"Required Degree\"})\n        }else{\n            this.setState({errorDegree: false})\n            this.setState({helperDegree: \"\"})\n        }\n  \n        this.setState({errors: errors});\n        return formIsValid;\n    }\n\n    state = {\n        redirect: false\n    }\n\n    setRedirect = () => {\n        this.setState({\n          redirect: true\n        })\n    }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n          return <Redirect to='/' />\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if(!this.state.loading){\n            this.setState({loading: true});\n            this.setState({success: false});\n          }else{\n            this.setState({success: true});\n            this.setState({loading: false});\n          } \n\n        if(this.handleValidation()){\n            const data = {\n\n                // START EDITING HERE\n\n                email: this.state.fields['email'],\n                // username: this.state.idNo,\n                id_num: this.state.fields['idNo'],\n                first_name: this.state.fields['firstName'],\n                last_name: this.state.fields['lastName'],\n                password1: this.state.fields['pass'],\n                password2: this.state.fields['passCon'],\n                college: Number(this.state.fields['college']),\n                degree: Number(this.state.fields['degree'])\n            };\n            console.log(data);\n            this.props.handle_register(data, (res) => {\n                if(res == null){\n                    this.setState({redirect: true})\n                    this.setState({success: true});\n                    this.setState({loading: false});\n                }else{\n                  this.setState({success: false});\n                  this.setState({loading: false});\n                  if(res.status == 400){\n                    for (var key in res.data) {\n                      this.setState({snackBarText: key + ': ' + res.data[key][0]})\n                    }\n                  }else{\n                      this.setState({snackBarText: \"Account already exists.\"})\n                  }\n                  this.setState({snackBar: true})\n                }\n            });\n        }else{\n            this.setState({success: false});\n            this.setState({loading: false});\n            this.setState({snackBar: true});\n        }\n    }\n\n    handleCloseSnackBar = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      this.setState({snackBar: false});\n      this.setState({snackBarSuccess: false});\n    }\n\n    render() {\n        const { classes } = this.props;\n      return (\n        <div style={sectionStyle}>\n\n            \n                  <div className={\"backBtn\"}>\n                  <a className=\"backBtn\" href=\"/\">\n                  <ArrowBackIosIcon fontSize=\"large\"className={classes.backBtn} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                    {/* <svg class=\"bi bi-backspace\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M8.603 4h7.08a1 1 0 011 1v10a1 1 0 01-1 1h-7.08a1 1 0 01-.76-.35L3 10l4.844-5.65A1 1 0 018.603 4zm7.08-1a2 2 0 012 2v10a2 2 0 01-2 2h-7.08a2 2 0 01-1.519-.698L2.241 10.65a1 1 0 010-1.302L7.084 3.7A2 2 0 018.603 3h7.08z\" clip-rule=\"evenodd\"></path>\n                        <path fill-rule=\"evenodd\" d=\"M7.83 7.146a.5.5 0 000 .708l5 5a.5.5 0 00.707-.708l-5-5a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                        <path fill-rule=\"evenodd\" d=\"M13.537 7.146a.5.5 0 010 .708l-5 5a.5.5 0 01-.708-.708l5-5a.5.5 0 01.707 0z\" clip-rule=\"evenodd\"></path>\n                    </svg> */}\n                  </a>\n                  </div>\n            \n                \n                <div style={{textAlign: 'center'}}>\n                    <Row>\n                      <Col />\n                      <Col lg=\"8\">\n                      <h1 style={{color: \"white\"}}>\n                            <img\n                            alt=\"\"\n                            src=\"/logo.svg\"\n                            width=\"40\"\n                            height=\"40\"\n                            className=\"d-inline-block align-top\"/> \n                        AnimoSched</h1>\n                        <Jumbotron className={\"jumboClass\"} style={{padding: 32, backgroundColor: \"white\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n                          <h3>\n                            Account Registration\n                          </h3>\n                          <div id=\"signup-form\">\n                    <form onSubmit={this.handleSubmit.bind(this)}>\n                        {/* First Name */}\n                        <br/>\n                        {/* <input name=\"firstName\" placeholder=\"John\" value={this.state.fields[\"firstName\"]} onChange={this.handleChange.bind(this, \"firstName\")}/> */}\n                        <TextField error={this.state.errorFirstName} helperText={this.state.helperFirstName} id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" name=\"firstName\" placeholder=\"John\" value={this.state.fields[\"firstName\"]} onChange={this.handleChange.bind(this, \"firstName\")} style={{marginRight: 25, width: 250}}></TextField>\n                        {/* <span className=\"error\" style={{marginRight: \"15%\"}}>{this.state.errors[\"firstName\"]}</span>*/}\n \n                        <TextField error={this.state.errorLastName} helperText={this.state.helperLastName} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" name=\"lastName\" placeholder=\"Dela Cruz\" value={this.state.fields[\"lastName\"]} onChange={this.handleChange.bind(this, \"lastName\")} style={{marginRight: 25, width: 250}}></TextField>\n                        {/* <input name=\"lastName\" placeholder=\"Dela Cruz\" value={this.state.fields[\"lastName\"]} onChange={this.handleChange.bind(this, \"lastName\")}/> */}\n                        {/* <span className=\"error\">{this.state.errors[\"lastName\"]}</span>*/}\n\n                        {/* ID Number */}\n                        <TextField error={this.state.errorID} helperText={this.state.helperID} id=\"outlined-basic\" label=\"ID Number\" variant=\"outlined\" name=\"idNo\" placeholder=\"11612345\" value={this.state.fields[\"idNo\"]} onChange={this.handleChange.bind(this, \"idNo\")} style={{width: 185}}/>\n                        {/* <input name=\"idNo\" placeholder=\"11612345\" onChange={this.handleChange.bind(this, \"idNo\")} value={this.state.fields[\"idNo\"]}/> */}\n                        {/* <span className=\"error\">{this.state.errors[\"idNo\"]}</span>*/}\n                        <br/><br/>\n\n                        {/* College */}\n                        <div className=\"collegeField\">\n                            {/* Email Address */}\n                            <TextField error={this.state.errorEmail} disabled={this.state.filled} helperText={this.state.helperEmail} id=\"outlined-basic\" label=\"DLSU Email\" variant=\"outlined\" name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")} style={{marginRight: 50, width: 345}}/>\n                            {/* <input name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}/> */}\n                            {/* <span className=\"error\" style={{marginRight: \"15%\"}}>{this.state.errors[\"email\"]}</span>*/}\n\n                            <TextField\n                                error={this.state.errorCollege} helperText={this.state.helperCollege}\n                                id=\"outlined-select-college\"\n                                select\n                                label=\"College\"\n                                onChange={this.handleChange.bind(this, \"college\")}\n                                value = {this.state.fields[\"college\"]}\n                                style={{width: 345}}\n                                variant=\"outlined\">\n                                {this.state.colleges.map(college => (\n                                    <MenuItem key={college.id} value={college.id}>\n                                    {college.college_name}\n                                    </MenuItem>\n                                    \n                                ))}\n                            </TextField>\n                          {/* <span className=\"error\" style={{marginRight: \"15%\"}}>{this.state.errors[\"college\"]}</span>*/}\n                        </div>\n                        {/* <select id=\"college\" name=\"college\" value={this.state.fields[\"college\"]} onChange={this.handleChange.bind(this, \"college\")} >\n                            <>\n                            \n                            {this.state.colleges.map(college => (\n                                <option value={college.id}>{college.college_name}</option>\n                            ))}\n                            </>\n                        </select> */}\n                       \n                        <br/>\n                        {/* Degree */}\n                        {/* <span className=\"error\">{this.state.errors[\"degree\"]}</span> */}\n                        <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                          <div>\n                            <ComboBox error={this.state.errorDegree} helperText={this.state.helperDegree} ref={this.degreeRef} page=\"register\" name=\"degree\" value={this.state.fields[\"degree\"]} onChange={this.handleAutoCompleteChange} college={this.state.fields[\"college\"]} degrees={this.state.degrees} className={classes.degreeStyle}/><br/>\n                          </div>\n                        </Row>\n                        {/* Password */}\n                        <TextField disabled={this.state.filled} error={this.state.errorPassword} helperText={this.state.helperPassword} type=\"password\"  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" name=\"pass\" placeholder=\"●●●●●●●●\" value={this.state.fields[\"pass\"]} onChange={this.handleChange.bind(this, \"pass\")} style={{marginRight: 50, width: 345}}/>\n                        {/* <input type=\"password\" name=\"pass\" placeholder=\"●●●●●●●●\" onChange={this.handleChange.bind(this, \"pass\")} value={this.state.fields[\"pass\"]}/> */}\n                        {/* <span className=\"error\" style={{marginRight: \"15%\"}}>{this.state.errors[\"pass\"]}</span>*}\n                     \n\n                        {/* Confirm Password */}\n                       \n                        <TextField disabled={this.state.filled} error={this.state.errorConPassword} helperText={this.state.helperConPassword} type=\"password\"  id=\"outlined-basic\" label=\"Confirm Password\" variant=\"outlined\" name=\"passCon\" placeholder=\"●●●●●●●●\" value={this.state.fields[\"passCon\"]} onChange={this.handleChange.bind(this, \"passCon\")} style={{width: 345}}/>\n                        {/* <input type=\"password\" name=\"passCon\" placeholder=\"●●●●●●●●\" onChange={this.handleChange.bind(this, \"passCon\")} value={this.state.fields[\"passCon\"]}/> */}\n                        {/* <span className=\"error\">{this.state.errors[\"passCon\"]}</span>*/}\n                        <br/>\n\n                        {this.renderRedirect()}\n                        <input type=\"submit\" style={{height: 0, width: 0, padding: 0, border: 0}} />\n                        <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                          <div className={classes.root}>\n                            <div className={classes.wrapper}> \n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.buttonRegister}\n                                disabled={this.state.loading}\n                                onClick={this.handleSubmit}\n                                \n                              >\n                                Register\n                              </Button>\n                              {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                          </div>\n                        </div>\n                      </Row>\n                    </form>\n                    <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                      <Alert onClose={this.handleCloseSnackBar} severity=\"error\">\n                      {this.state.snackBarText}\n                      </Alert>\n                    </Snackbar>\n                    <Snackbar open={this.state.snackBarSuccess} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                      <Alert onClose={this.handleCloseSnackBar} severity=\"success\">\n                      Email verification sent\n                      </Alert>\n                    </Snackbar>\n                    <br/>\n\n                    {/* <div id=\"signup-message\"> */}\n                    <p>Already have an account? <a href=\"/login\">Log in!</a></p>\n                {/* </div> */}\n                    \n                </div>\n\n                        </Jumbotron>\n                      </Col>\n                      <Col />\n                    </Row>\n                </div>\n                \n                \n            \n        </div>        \n      );\n    }\n  }\n\n  Register.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n\n  export default withStyles(styles)(Register);","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Login.svg';\nimport { Redirect } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport {Jumbotron, Row, Col} from \"reactstrap\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonSend: {\n        fontSize: \"100%\",\n        width: \"110%\",\n        alignItems: 'center',\n        justifyContent: 'center',\n        textTransform: \"none\",\n        borderRadius: \"30px\",\n        padding: \"10px\",\n        paddingLeft: \"30px\",\n        paddingRight: \"30px\",\n        backgroundColor: \"green\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"green\",\n        '&:hover': {\n            color: \"green\",\n            backgroundColor: \"#FFFFFF\",\n          },\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  backBtn:{\n    color: \"white\", \n    marginLeft: \"5px\",\n  '&:hover': {\n      color: \"#d3d3d3\"\n    },\n  },\n});\n\nvar sectionStyle = {\n  // width: \"100%\",\n  minHeight: \"100vh\",\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n  overflow: \"hidden\",\n  backgroundImage: \"linear-gradient(#086e53, #579d8b)\"\n\n};\n\nclass ResetPassword extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            fields: {},\n            errors: {},\n            helperEmail: \"\",\n            snackBar: false,\n            loading: false,\n            success: false,\n            snackBarText: \"Enter a valid DLSU email\",\n        }\n    }\n\n    handleChange = (field, e) => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n    }\n\n    handleValidation = () => {\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      // EMAIL\n      if(!fields[\"email\"]) {\n        formIsValid = false;\n        errors[\"email\"] = \"Enter a valid email.\"\n        this.setState({helperEmail: \"This field is required\"})\n      } else{\n        this.setState({helperEmail: \"\"})\n      }\n\n      if(typeof fields[\"email\"] !== \"undefined\") {\n        let lastAtPos = fields[\"email\"].lastIndexOf('@');\n        let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Enter a valid email.\";\n          this.setState({helperEmail: \"Enter a valid DLSU email\"});\n          this.setState({loading: false});\n          this.setState({success: true});\n        }\n      }\n\n      this.setState({errors: errors});\n      return formIsValid;\n    }\n    \n    state = {\n        redirect: false\n    }\n\n    setRedirect = () => {\n      console.log(\"Setting redirect\");\n      this.setState({\n        redirect: true\n      })\n    }\n\n    renderRedirect = () => {\n      if(this.state.redirect) {\n        console.log(\"Rendering redirect\");\n        return <Redirect to='/password_reset_done' />\n      }\n    }\n\n    handleSubmit = (event) => {\n      if(!this.state.loading){\n        this.setState({loading: true});\n        this.setState({success: false});\n      }else{\n        this.setState({success: true});\n          this.setState({loading: false});\n      } \n\n      event.preventDefault();\n      if(this.handleValidation()) {\n        const data = {\n          email: this.state.fields[\"email\"]\n        }\n        this.props.handle_resetPassword(data, (res) => {\n          if(res) {\n            this.setState({snackBar: true})\n              this.setState({loading: false})\n            this.setRedirect();\n          }\n        });\n      }\n      else {\n        // alert(\"Form has invalid input.\");\n        this.setState({snackBar: true});\n        this.setState({loading:false});\n      }\n    }\n\n    handleCloseSnackBar = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      this.setState({snackBar: false});\n    }\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <div style={sectionStyle}>\n            <div class=\"sidenavnew\">\n              <a className=\"backBtn\" href=\"/\">\n                    <div className={\"backBtn\"}></div>\n                    <ArrowBackIosIcon fontSize=\"large\" style={{color: \"white\", marginLeft: \"5px\"}} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                      {/* <svg class=\"bi bi-backspace\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path fill-rule=\"evenodd\" d=\"M8.603 4h7.08a1 1 0 011 1v10a1 1 0 01-1 1h-7.08a1 1 0 01-.76-.35L3 10l4.844-5.65A1 1 0 018.603 4zm7.08-1a2 2 0 012 2v10a2 2 0 01-2 2h-7.08a2 2 0 01-1.519-.698L2.241 10.65a1 1 0 010-1.302L7.084 3.7A2 2 0 018.603 3h7.08z\" clip-rule=\"evenodd\"></path>\n                          <path fill-rule=\"evenodd\" d=\"M7.83 7.146a.5.5 0 000 .708l5 5a.5.5 0 00.707-.708l-5-5a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                          <path fill-rule=\"evenodd\" d=\"M13.537 7.146a.5.5 0 010 .708l-5 5a.5.5 0 01-.708-.708l5-5a.5.5 0 01.707 0z\" clip-rule=\"evenodd\"></path>\n                      </svg> */}\n                  </a>\n                {/* <img class='img-responsive' id='lower' src={SidebarIMG}/> */}\n            </div>\n\n            {/* <div class=\"sidenav-main\">\n              <br/>\n                <div id=\"reset-message\">\n                    <h5>Enter your email address below.<br/>We'll send you a link to reset your password.</h5>\n                </div>\n                \n                <div id=\"reset-form\">\n                    <form onSubmit={this.handleSubmit.bind(this)}> */}\n                        {/* Email */}\n                        {/* <br/>\n                        <TextField id=\"outlined-basic\" helperText=\"Please use your DLSU email address\" label=\"Email Address\" variant=\"outlined\" name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/> */}\n                        {/* <input name=\"email\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}></input> */}\n                        {/* <span className=\"error\">{this.state.errors[\"email\"]}</span> */}\n                        {/* <br/>\n                        <br/>\n                        {this.renderRedirect()}\n                        <input type=\"submit\" class=\"btn btn-success\" value=\"Send link\" />\n                    </form>                                    \n                </div>\n            </div> */}\n\n<div style={{textAlign: 'center'}}>\n                    <Row>\n                      <Col />\n                      <Col lg=\"8\">\n                        <h1 style={{color: \"white\"}}>\n                            <img\n                            alt=\"\"\n                            src=\"/logo.svg\"\n                            width=\"40\"\n                            height=\"40\"\n                            className=\"d-inline-block align-top\"/> \n                        AnimoSched</h1>\n                        <Jumbotron style={{padding: 32, backgroundColor: \"white\", marginLeft: \"15%\", marginRight: \"15%\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n                          <h5>\n                            Log in to your account! Enter your email address below.<br/>We'll send you a link to reset your password.\n                          </h5>\n                            <div id=\"signup-form\">\n                              <form onSubmit={this.handleSubmit.bind(this)}>\n                                  {/* Email */}\n                                  <br/>\n                                  <TextField  error={this.state.errors[\"email\"]} id=\"outlined-basic\" helperText=\"Please use your DLSU email address\" label=\"Email Address\" variant=\"outlined\" name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/> \n                                  {/* <TextField style={{width: 350}} error={this.state.errors[\"email\"]} helperText={this.state.helperEmail} id=\"outlined-basic\" label=\"DLSU Email\" variant=\"outlined\" name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/> */}\n                                  {/* <input name=\"email\" placeholder=\"john_delacruz@dlsu.edu.ph\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}></input> */}\n                                  {/* <span className=\"error\">{this.state.errors[\"email\"]}</span> */}\n\n                                  <br/>\n                                  <br/>\n\n                                  {this.renderRedirect()}\n                              \n                                  <input type=\"submit\" style={{height: 0, width: 0, padding: 0, border: 0}} />\n                                  <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                                  <div className={classes.root}>\n                                    <div className={classes.wrapper}> \n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.buttonSend}\n                                        disabled={this.state.loading}\n                                        onClick={this.handleSubmit}\n                                       \n                                      >\n                                        Send Link\n                                      </Button>\n                                      {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                                    </div>\n                                  </div>\n                                  </Row>\n\n                                  \n                              </form>\n                              <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                                <Alert onClose={this.handleCloseSnackBar} severity=\"error\">\n                                  {this.state.snackBarText}\n                                </Alert>\n                              </Snackbar>\n                              <br/>\n                              \n                          </div>\n\n                        </Jumbotron>\n                      </Col>\n                      <Col />\n                    </Row>\n                </div>\n        </div>        \n      );\n    }\n  }\n  ResetPassword.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(ResetPassword);","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Login.svg';\nimport { Redirect } from \"react-router-dom\";\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nclass ResetPasswordDone extends Component {\n    constructor(props){\n        super();\n    }\n\n    render() {\n      return (\n        <div>\n            <div class=\"sidenav\">\n                <a className=\"backBtn\" href=\"/\">\n                    <div className={\"backBtn\"}></div>\n                    <ArrowBackIosIcon fontSize=\"large\" style={{color: \"white\", marginLeft: \"5px\"}} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                        {/* <svg class=\"bi bi-backspace\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M8.603 4h7.08a1 1 0 011 1v10a1 1 0 01-1 1h-7.08a1 1 0 01-.76-.35L3 10l4.844-5.65A1 1 0 018.603 4zm7.08-1a2 2 0 012 2v10a2 2 0 01-2 2h-7.08a2 2 0 01-1.519-.698L2.241 10.65a1 1 0 010-1.302L7.084 3.7A2 2 0 018.603 3h7.08z\" clip-rule=\"evenodd\"></path>\n                            <path fill-rule=\"evenodd\" d=\"M7.83 7.146a.5.5 0 000 .708l5 5a.5.5 0 00.707-.708l-5-5a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                            <path fill-rule=\"evenodd\" d=\"M13.537 7.146a.5.5 0 010 .708l-5 5a.5.5 0 01-.708-.708l5-5a.5.5 0 01.707 0z\" clip-rule=\"evenodd\"></path>\n                        </svg> */}\n                </a>\n                <img class='img-responsive' id='lower' src={SidebarIMG}/>\n            </div>\n\n            <div class=\"sidenav-main\">\n                <br/>\n                <div id=\"reset-message\">\n                    <h5>We've emailed you instructions for setting your password.<br />If they haven't arrived in a few minutes, check your spam folder.</h5>\n                </div>              \n            </div>\n        </div>        \n      );\n    }\n  }\n  export default ResetPasswordDone;","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Login.svg';\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nclass ResetPasswordConfirm extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            fields: {},\n            errors: {},\n        }\n    }\n\n    handleChange = (field, e) => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n    }\n\n    handleValidation = () => {\n      console.log(this.props);\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\n      if(!fields[\"pass\"]){\n        formIsValid = false;\n        errors[\"pass\"] = \"Password required.\"\n      }\n\n      if(!fields[\"passCon\"]){\n          formIsValid = false;\n          errors[\"passCon\"] = \"Password confirmation required.\"\n      }\n\n      this.setState({errors: errors});\n      return formIsValid;\n    }\n    \n    state = {\n        redirect: false\n    }\n\n    setRedirect = () => {\n      console.log(\"Setting redirect\");\n      this.setState({\n        redirect: true\n      })\n    }\n\n    renderRedirect = () => {\n      if(this.state.redirect) {\n        console.log(\"Rendering redirect\");\n        return <Redirect to='/password_reset_complete' />\n      }\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault();\n      if(this.handleValidation()) {\n        const data = {\n          new_password1: this.state.fields['pass'],\n          new_password2: this.state.fields['passCon'],\n          uid: this.props.match.params.uidb64,\n          token: this.props.match.params.token,\n        }\n        this.props.handle_resetPasswordConfirm(data, (res) => {\n          if(res) {\n            this.setRedirect();\n          }\n        });\n      }\n      else {\n        alert(\"Form has invalid input.\");\n      }\n    }\n\n    render() {\n      return (\n        <div>\n            <div class=\"sidenav\">\n              <a className=\"backBtn\" href=\"/\">\n                    <div className={\"backBtn\"}></div>\n                    <ArrowBackIosIcon fontSize=\"large\" style={{color: \"white\", marginLeft: \"5px\"}} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                      {/* <svg class=\"bi bi-backspace\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path fill-rule=\"evenodd\" d=\"M8.603 4h7.08a1 1 0 011 1v10a1 1 0 01-1 1h-7.08a1 1 0 01-.76-.35L3 10l4.844-5.65A1 1 0 018.603 4zm7.08-1a2 2 0 012 2v10a2 2 0 01-2 2h-7.08a2 2 0 01-1.519-.698L2.241 10.65a1 1 0 010-1.302L7.084 3.7A2 2 0 018.603 3h7.08z\" clip-rule=\"evenodd\"></path>\n                          <path fill-rule=\"evenodd\" d=\"M7.83 7.146a.5.5 0 000 .708l5 5a.5.5 0 00.707-.708l-5-5a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                          <path fill-rule=\"evenodd\" d=\"M13.537 7.146a.5.5 0 010 .708l-5 5a.5.5 0 01-.708-.708l5-5a.5.5 0 01.707 0z\" clip-rule=\"evenodd\"></path>\n                      </svg> */}\n                </a>\n                <img class='img-responsive' id='lower' src={SidebarIMG}/>\n            </div>\n\n            <div class=\"sidenav-main\">\n              <br/>\n                <div id=\"reset-message\">\n                    <h5>Enter your new password below.</h5>\n                </div>\n                \n                <div id=\"reset-form\">\n                    <form onSubmit={this.handleSubmit.bind(this)}>\n                        Password\n                        <br/>\n                        <input type=\"password\" name=\"pass\" placeholder=\"●●●●●●●●\" onChange={this.handleChange.bind(this, \"pass\")} value={this.state.fields[\"pass\"]}/>\n                        <span className=\"error\">{this.state.errors[\"pass\"]}</span>\n                        <br/><br/>\n                        Confirm password\n                        <br/>\n                        <input type=\"password\" name=\"passCon\" placeholder=\"●●●●●●●●\" onChange={this.handleChange.bind(this, \"passCon\")} value={this.state.fields[\"passCon\"]}/>\n                        <span className=\"error\">{this.state.errors[\"passCon\"]}</span>\n                        <br/>\n                        <br/>\n                        {this.renderRedirect()}\n                        <input type=\"submit\" class=\"btn btn-success\" value=\"Send link\" />\n                    </form>                                    \n                </div>\n            </div>\n        </div>        \n      );\n    }\n  }\n  export default withRouter(ResetPasswordConfirm);","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Login.svg';\nimport { Redirect } from \"react-router-dom\";\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nclass ResetPasswordComplete extends Component {\n    constructor(props){\n        super();\n    }\n\n    render() {\n      return (\n        <div>\n            <div class=\"sidenav\">\n                <a className=\"backBtn\" href=\"/\">\n                    <div className={\"backBtn\"}></div>\n                    <ArrowBackIosIcon fontSize=\"large\" style={{color: \"white\", marginLeft: \"5px\"}} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                        {/* <svg class=\"bi bi-backspace\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M8.603 4h7.08a1 1 0 011 1v10a1 1 0 01-1 1h-7.08a1 1 0 01-.76-.35L3 10l4.844-5.65A1 1 0 018.603 4zm7.08-1a2 2 0 012 2v10a2 2 0 01-2 2h-7.08a2 2 0 01-1.519-.698L2.241 10.65a1 1 0 010-1.302L7.084 3.7A2 2 0 018.603 3h7.08z\" clip-rule=\"evenodd\"></path>\n                            <path fill-rule=\"evenodd\" d=\"M7.83 7.146a.5.5 0 000 .708l5 5a.5.5 0 00.707-.708l-5-5a.5.5 0 00-.708 0z\" clip-rule=\"evenodd\"></path>\n                            <path fill-rule=\"evenodd\" d=\"M13.537 7.146a.5.5 0 010 .708l-5 5a.5.5 0 01-.708-.708l5-5a.5.5 0 01.707 0z\" clip-rule=\"evenodd\"></path>\n                        </svg> */}\n                </a>\n                <img class='img-responsive' id='lower' src={SidebarIMG}/>\n            </div>\n\n            <div class=\"sidenav-main\">\n                <br/>\n                <div id=\"reset-message\">\n                    <h5>Password change successful.<br /><a href=\"/login\">Log in?</a></h5>\n                </div>              \n            </div>\n        </div>        \n      );\n    }\n  }\n  export default ResetPasswordComplete;","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport '../css/Profile.css';\nimport axios from 'axios';\nimport ResetPassword from \"./ResetPassword.jsx\";\nimport EditableLabel from 'react-inline-editing';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport ReactLoading from 'react-loading';\n\nimport { Element } from 'react-scroll'\n\nconst styles = theme => ({\n    pencilIcon:{ \n        marginLeft: \"10px\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"gray\"\n          },\n    },\n    checkIcon:{\n        color: \"green\", \n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#79c879\"\n          },\n    }\n  });\n\nconst GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nclass Profile extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n          email: '',\n          first_name: '',\n          last_name: '',\n          college: '',\n          degree: '',\n          id_num: '',\n          emailBool: false,\n        //   firstNameBool: false,\n        //   lastNameBool: false,\n        //   collegeBool: false,\n        //   degreeBool: false,\n        //   idNoBool: false,\n        fieldsBool: {\n            emailBool: false,\n            firstNameBool: false,\n            lastNameBool: false,\n            collegeBool: false,\n            degreeBool: false,\n            idNoBool: false\n        },\n        dataReceived: false\n      }\n      this.editFirstName = React.createRef();\n      this.editLastName = React.createRef();\n      this.editEmail = React.createRef();\n      this.editIdNo = React.createRef();\n      this.editCollege = React.createRef();\n      this.editDegree = React.createRef();\n    }\n\n    componentWillMount(){\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/'\n        )\n        .then(res => {\n            console.log(res.data)\n            this.setState({\n                email: res.data.email,\n                first_name: res.data.first_name,\n                last_name: res.data.last_name,\n                id_num: res.data.id_num, \n            })\n            const college = res.data.college;\n            const degree = res.data.degree;\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/colleges/'+college+'/')\n            .then(res => {\n              this.setState({college: res.data.college_name})\n              axios.get('https://animosched-backend-backup.herokuapp.com/api/degrees/'+degree+'/')\n              .then(res => {\n                this.setState({degree: res.data.degree_name});\n                this.setState({dataReceived: true})\n              })\n            })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    handleFocus(text) {\n        console.log('Focused with text: ' + text);\n    }\n\n    handleFocusOut(text) {\n        console.log('Left editor with text: ' + text);\n    }\n\n\n    _handleFocus=(text, iconBool)=> {\n        let fieldsBool = this.state.fieldsBool;\n        fieldsBool[iconBool] = true;\n        this.setState({fieldsBool});\n        console.log('Focused with text: ' + text);\n        \n    }\n\n    _handleFocusOut=(text, iconBool)=> {\n        this.setState({boolEdit: false});\n        let fieldsBool = this.state.fieldsBool;\n         fieldsBool[iconBool] = false;\n        if(iconBool == 'firstNameBool'){\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                'first_name': text\n            }).then(res => {\n                localStorage.setItem('first_name',text)\n            })\n            .catch(err => {\n                console.log(err.response)\n            })\n        }else if(iconBool == 'lastNameBool'){\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                'last_name': text\n            }).then(res => {\n                localStorage.setItem('last_name',text)\n            })\n            .catch(err => {\n                console.log(err.response)\n            })\n        }else if(iconBool == 'idNoBool'){\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                'id_num': text\n            })\n            .catch(err => {\n                console.log(err.response)\n            })\n        }else if(iconBool == 'collegeBool'){\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                'college': text\n            })\n            .catch(err => {\n                console.log(err.response)\n            })\n        }else if(iconBool == 'degreeBool'){\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                'degree': text\n            })\n            .catch(err => {\n                console.log(err.response)\n            })\n        }else if(iconBool == 'emailBool'){\n            axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n                'email': text\n            })\n            .catch(err => {\n                console.log(err.response)\n            })\n        }\n\n    }\n\n    editButtonPress = (iconBool, editRef) =>{\n        let fieldsBool = this.state.fieldsBool;\n        if(fieldsBool[iconBool] === false){\n            fieldsBool[iconBool] = true;\n            this.setState({fieldsBool});\n            editRef.current.setState({isEditing: true});\n        }else if(fieldsBool[iconBool] === true){\n            fieldsBool[iconBool] = false;\n            this.setState({fieldsBool});\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n      return (\n          <div>\n            {this.props.menu('profile')}\n\n            {this.state.dataReceived ? \n            <div>\n            <div className=\"profile-category\">\n                <h2>Account Profile</h2>\n\n                <div className=\"profile-category-content\">\n                    <b>First Name</b>\n                    <br/>\n                    {/* <input value={this.state.first_name}/><br/><br/> */}\n                    \n                    <Row horizontal= 'start'>\n                    <EditableLabel\n                        ref={this.editFirstName}\n                        text={this.state.first_name}\n                        inputWidth='150px'\n                        inputHeight='25px'\n                        inputMaxLength='30'\n                        onFocus={(text)=>this._handleFocus(text, 'firstNameBool')}\n                        onFocusOut={(text)=>this._handleFocusOut(text, 'firstNameBool')}\n                    />\n                    {this.state.fieldsBool['firstNameBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/>}\n                    </Row>\n                \n                    \n                    <br/>\n                    \n                    <b>Last Name</b>\n                    <br/>\n                    {/* <input value={this.state.last_name}/><br/><br/> */}\n                    <Row horizontal= 'start'>\n                    <EditableLabel\n                        ref={this.editLastName}\n                        text={this.state.last_name}\n                        inputWidth='150px'\n                        inputHeight='25px'\n                        inputMaxLength='30'\n                        onFocus={(text)=>this._handleFocus(text, 'lastNameBool')}\n                        onFocusOut={(text)=>this._handleFocusOut(text, 'lastNameBool')}\n                    />\n                    {this.state.fieldsBool['lastNameBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('lastNameBool',this.editLastName)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('lastNameBool',this.editLastName)}/>}\n                    </Row>\n                    {/* <EditableLabel\n                        initialValue={this.state.last_name}\n                        inputWidth='50%'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        onFocus={(text)=>this._handleFocus(text, 'lastNameBool')}\n                        onFocusOut={this._handleFocusOut}\n                    /> */}\n                    <br/>\n\n                    <b>ID Number</b>\n                    <br/>\n                    {/* <input value={this.state.id_num}/><br/><br/> */}\n\n                    <Row horizontal= 'start'>\n                        <p>{this.state.id_num}</p>\n                        {/* <EditableLabel\n                            ref={this.editIdNo}\n                            text={this.state.id_num}\n                            inputWidth='90px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'idNoBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'idNoBool')}\n                        />*/}\n                        {/* {this.state.fieldsBool['idNoBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('idNoBool',this.editIdNo)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('idNoBool',this.editIdNo)}/>} */}\n                    </Row>\n                    {/* <EditableLabel\n                        text={this.state.id_num}\n                        inputWidth='50%'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        onFocus={this._handleFocus}\n                        onFocusOut={this._handleFocusOut}\n                    /> */}\n                    <br/>\n\n                    <b>College</b>\n                    <br/>\n                    {/* <input value={this.state.college}/><br/><br/> */}\n                    <Row horizontal= 'start'>\n                        <p>{this.state.college}</p>\n                        {/*<EditableLabel\n                            ref={this.editCollege}\n                            text={this.state.college}\n                            inputWidth='250px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'collegeBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'collegeBool')}\n                        />*/}\n                        {/* {this.state.fieldsBool['collegeBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('collegeBool',this.editCollege)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('collegeBool',this.editCollege)}/>} */}\n                    </Row>\n                    <br/>\n                    <b>Degree</b>\n                    <br/>\n                    {/* <input value={this.state.degree}/><br/><br/> */}\n                    <Row horizontal= 'start'>\n                        <p>{this.state.degree}</p>\n                        {/*\n                        <EditableLabel\n                            ref={this.editDegree}\n                            text={this.state.degree}\n                            inputWidth='250px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'degreeBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'degreeBool')}\n                        />*/}\n                        {/* {this.state.fieldsBool['degreeBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('degreeBool',this.editDegree)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('degreeBool',this.editDegree)}/>} */}\n                    </Row>\n                    <br/>\n                    <b>Email Address</b>\n                    <br/>\n                    {/* <input value={this.state.email}/><br/><br/> */}\n                    <Row horizontal= 'start' id=\"notifs-container\">\n                        <p>{this.state.email}</p>\n                        {/*\n                        <EditableLabel\n                            ref={this.editEmail}\n                            text={this.state.email}\n                            inputWidth='250px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'emailBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'emailBool')}\n                        />*/}\n                        {/* {this.state.fieldsBool['emailBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('emailBool',this.editEmail)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('emailBool',this.editEmail)}/>} */}\n                    </Row>\n                    <br/>\n                </div>\n            </div>\n            \n            <div className=\"profile-category\" >\n                <h2>Password Settings</h2>\n                    \n                <div className=\"profile-category-content\" >\n                    <b>Current Password</b>\n                    <br/>\n                    <Row horizontal= 'start'>\n                        <EditableLabel\n                            // ref={this.editFirstName}\n                            // text={this.state.first_name}\n                            text='●●●●●●●●'\n                            inputWidth='150px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'firstNameBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'firstNameBool')}\n                        />\n                        {/* {this.state.fieldsBool['firstNameBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/>} */}\n                    </Row>\n                    <a href=\"/password_reset\" style={{fontSize: 13}}>Forgot your password?</a>\n\n                    <br/>\n                    <br/>\n\n                    <b>New Password</b>\n                    <br/>\n                    <Row horizontal= 'start'>\n                        <EditableLabel\n                            // ref={this.editFirstName}\n                            // text={this.state.first_name}\n                            text='●●●●●●●●'\n                            inputWidth='150px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'firstNameBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'firstNameBool')}\n                        />\n                        {/* {this.state.fieldsBool['firstNameBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/>} */}\n                    </Row>\n\n                    <br/>\n\n                    <b>Confirm Password</b>\n                    <br/>\n                    <Row horizontal= 'start'>\n                        <EditableLabel\n                            // ref={this.editFirstName}\n                            // text={this.state.first_name}\n                            text='●●●●●●●●'\n                            inputWidth='150px'\n                            inputHeight='25px'\n                            inputMaxLength='30'\n                            // onFocus={(text)=>this._handleFocus(text, 'firstNameBool')}\n                            // onFocusOut={(text)=>this._handleFocusOut(text, 'firstNameBool')}\n                        />\n                        {/* {this.state.fieldsBool['firstNameBool'] ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={()=>this.editButtonPress('firstNameBool',this.editFirstName)}/>} */}\n                    </Row>\n\n                    <center>\n                        <input class=\"btn btn-success submit-form\" type=\"submit\" value=\"Save\"/>\n                    </center>\n\n                </div>\n            </div>\n            \n            <div className=\"profile-category\" >\n                <h2>Notification Settings</h2>\n                    \n                <div className=\"profile-category-content\" >\n                    Notify me on AnimoSched when:\n                    <FormGroup>\n                        <FormControlLabel\n                        control = {<GreenCheckbox defaultChecked color=\"primary\"/>} label={\"A class in my schedule is full, or has open slots\"} />\n                        <FormControlLabel\n                        control = {<GreenCheckbox defaultChecked color=\"primary\"/>} label={\"A conflict between classes in my schedule is detected\"} />\n                        <FormControlLabel\n                        control = {<GreenCheckbox defaultChecked color=\"primary\"/>} label={\"My friends make changes to their schedules and preferences\"}/>\n                    </FormGroup>\n                    <center>\n                        <input class=\"btn btn-success submit-form\" type=\"submit\" value=\"Save\"/>\n                    </center>\n                    {/* <form>\n                        <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                        <label className=\"checkbox-description\" for=\"\"> The status of your chosen sections in your schedule has changed. </label><br/>\n\n                        <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                        <label className=\"checkbox-description\" for=\"\"> Course conflicts in your schedule. </label><br/>\n\n                        <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                        <label className=\"checkbox-description\" for=\"\"> Your friends make changes to their schedules and preferences. </label>\n\n                        <center>\n                        <input class=\"btn btn-success submit-form\" type=\"submit\" value=\"Submit\"/>\n                        </center>\n                    </form> */}\n\n                </div>\n            </div>\n\n            <div className=\"profile-category\">\n                <h2>Data Privacy Settings</h2>\n\n                <div className=\"profile-category-content\">\n                    Allow friends to view\n                    <FormGroup>\n                        <FormControlLabel\n                        control = {<GreenCheckbox defaultChecked color=\"primary\"/>} label={\"Your saved schedules\"} />\n                        <FormControlLabel\n                        control = {<GreenCheckbox defaultChecked color=\"primary\"/>} label={\"Your schedule preferences\"} />\n                        <FormControlLabel\n                        control = {<GreenCheckbox defaultChecked color=\"primary\"/>} label={\"College and course details\"}/>\n                    </FormGroup>\n                    <center>\n                        <input class=\"btn btn-success submit-form\" type=\"submit\" value=\"Save\"/>\n                    </center>\n\n                    {/* <form>\n                        <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                        <label className=\"checkbox-description\" for=\"\"> Your saved schedules. </label><br/>\n\n                        <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                        <label className=\"checkbox-description\" for=\"\"> Your schedule preferences. </label><br/>\n\n                        <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                        <label className=\"checkbox-description\" for=\"\"> College and course details. </label>\n\n                        <center>\n                            <input class=\"btn btn-success submit-form\" type=\"submit\" value=\"Submit\"/>\n                        </center>\n                    </form> */}\n                </div>\n            </div>\n            </div> : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n              </div>\n            }\n        </div>        \n      );\n    }\n  }\n\n  Profile.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n  export default withStyles(styles)(Profile);","import React, { Component } from \"react\";\nimport '../css/Flowchart.css';\nimport SidebarIMG from '../images/Login.svg';\nimport Menu from '../components/Menu.jsx';\n\nimport { Flowpoint, Flowspace } from 'flowpoints';\nimport axios from 'axios';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport ReactLoading from 'react-loading';\n\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport html2canvas from 'html2canvas';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport { Row, Col, Tabs, Tab } from 'react-bootstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Chip } from \"@material-ui/core\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { Pagination, PaginationItem, PaginationLink} from 'reactstrap';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = theme => ({\n  flowchartText:{\n      overflow: 'hidden',\n      textOverflow: \"ellipsis\",\n      textAlign: \"center\",\n      fontSize: \"0.7rem\",\n      // color: \"green\", \n      '&:hover': {\n          color: \"green\"\n        },\n  },\n    buttonStyle:{\n        fontSize: \"95%\",\n      textTransform: \"none\",\n      width: \"10%\",\n      borderRadius: \"25px\",\n//      padding: \"10px\",\n      paddingLeft: \"5%\",\n      paddingRight: \"5%\",\n      backgroundColor: \"#16775D\",\n      border: \"none\",\n      color: \"white\",\n      boxShadow: \"6px 5px #e8f4ea\",\n      borderStyle: \"solid\",\n      borderColor: \"#16775D\",\n//      marginTop: \"20px\",\n      justifyContent: 'center',\n      '&:hover': {\n          backgroundColor: \"white\",\n          color: \"#16775D\"\n        },\n    },\n     buttonStyleOption:{\n      textTransform: \"none\",\n      width: \"55%\",\n      borderRadius: \"25px\",\n//      padding: \"10px\",\n      paddingLeft: \"5%\",\n      paddingRight: \"3%\",\n      backgroundColor: \"white\",\n        border: \"solid 2px #16775D\",\n      color: \"#16775D\",\n      boxShadow: \"6px 5px #e8f4ea\",\n      borderStyle: \"solid\",\n      borderColor: \"#16775D\",\n//      marginTop: \"20px\",\n      justifyContent: 'center',\n      '&:hover': {\n          \n          backgroundColor: \"#16775D\",\n          border: \"none\",\n          color: \"white\",\n        },\n    }\n});\n\nclass Flowchart extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        terms: [],\n        courses: [],\n        flowpoints: [],\n        degreekey: '1',\n        batchkey: '116',\n        dataReceived: false,\n        snackbar: false,\n        currentPage: 0,\n        currentContent: \"\",\n        generatedContents: [],\n        pagesCount: 1,\n        pagesEnabled: true,\n      }\n    }\n\n    componentDidMount() {\n      // const degreekey = '1';\n      // const batchkey = '116';\n      axios.get('https://animosched-backend-backup.herokuapp.com/api/flowcharttermslist/'+this.state.degreekey+'/'+this.state.batchkey+'/')\n      .then(res => {\n        res.data.map((term, i) => {\n                var coursesList = this.state.courses;\n                var flowpointsList = this.state.flowpoints;\n                var newTerm = {'id':term.id, 'degree':term.degree, 'batch': term.batch, 'courses': term.courses, 'tracks': term.tracks, 'year': term.year, 'term': term.term} \n                var currentTerm = term.term + 3 * (term.year - 1);\n                var tracks = newTerm.tracks.split(',');\n                var tempCoursesList = [];\n                term.courses.map((course, j) => {\n                  var tempCourse = course;\n                  tempCourse.year = term.year;\n                  tempCourse.term = term.term;\n                  tempCourse.prerequisites = [];\n                  tempCourse.softPrerequisites = [];\n                  tempCourse.corequisites = [];\n                  // console.log(tempCourse);\n                  // var outputsList = {};\n                  coursesList.push(tempCourse);\n                  tempCoursesList.push(tempCourse);\n                  // course.prerequisite_to.map((prereq_to) => {\n                  //   outputsList[prereq_to] = { output: \"right\", input: \"left\" }                    \n                  // })            \n                  // flowpointsList.push({'key': course.id, 'name': course.course_code, 'units': course.units, 'startPosition': { x:(currentTerm-1)*85, y:tracks[j]*45 }, 'width': 70, 'height': 40, 'dragX': false, 'dragY': false, 'outputs': outputsList, 'year': term.year, 'term': term.term});\n                })\n                \n                tempCoursesList.sort(function(a, b) {\n                  var keyA = new String(a.course_code),\n                    keyB = new String(b.course_code);\n                  if (keyA < keyB) return -1;\n                  if (keyA > keyB) return 1;\n                  return 0;\n                });\n\n                coursesList.sort(function (a, b) {\n                  if(a.year == b.year) {\n                    if(a.term == b.term) {\n                      return (a.units < b.units) ? 1 : -1;\n                    }\n                    else {                    \n                      return (a.term > b.term) ? 1 : -1;\n                    }\n                  }\n                  else {\n                      return (a.year > b.year) ? 1 : -1;\n                  }\n                });\n\n                for(var k = 0; k < tempCoursesList.length; k++) {\n                  var outputsList = {};\n                  tempCoursesList[k].prerequisite_to.map((prereq_to) => {\n                    outputsList[prereq_to] = { output: \"right\", input: \"left\", inputColor: \"#16775d\", outputColor: \"#16775d\" }\n                  })\n                  tempCoursesList[k].soft_prerequisite_to.map((prereq_to) => {\n                    outputsList[prereq_to] = { output: \"right\", input: \"left\", inputColor: \"#16775d\", outputColor: \"#16775d\", dash: \"3\" }                    \n                  })\n                  tempCoursesList[k].co_requisite.map((coreq) => {\n                    outputsList[coreq] = { output: \"auto\", input: \"auto\", inputColor: \"#16775d\", outputColor: \"#16775d\"}                    \n                  })\n                  flowpointsList.push({'key': tempCoursesList[k].id, 'name': tempCoursesList[k].course_code, 'units': tempCoursesList[k].units, 'startPosition': { x:(currentTerm-1)*85, y:tracks[k]*50 }, 'width': 70, 'height': 40, 'dragX': false, 'dragY': false, 'outputs': outputsList, 'year': term.year, 'term': term.term});\n                }\n                \n                var tempTerm = {'year': term.year, 'term':term.term, 'courses':[]};\n                this.state.terms.push(tempTerm);\n\n                this.setState({courses: coursesList})\n                this.setState({flowpoints: flowpointsList})\n        })\n\n        for(var k = 0; k < this.state.courses.length; k++) {\n          this.state.courses[k].prerequisite_to.map((prereq_to) => {\n            var tempCourse = this.state.courses.findIndex(course => (course.id).toString() === prereq_to.toString());\n            if(tempCourse != -1) {\n              this.state.courses[tempCourse].prerequisites.push(this.state.courses[k]);\n            }\n          })\n          this.state.courses[k].soft_prerequisite_to.map((prereq_to) => {\n            var tempCourse = this.state.courses.findIndex(course => (course.id).toString() === prereq_to.toString());\n            if(tempCourse != -1) {\n              this.state.courses[tempCourse].softPrerequisites.push(this.state.courses[k]);\n            }\n          })\n          this.state.courses[k].co_requisite.map((prereq_to) => {\n            var tempCourse = this.state.courses.findIndex(course => (course.id).toString() === prereq_to.toString());\n            if(tempCourse != -1) {\n              this.state.courses[tempCourse].corequisites.push(this.state.courses[k]);\n            }\n          })\n        }\n\n        this.state.terms.sort(function (a, b) {\n          if(a.year == b.year) {\n            return (a.term > b.term) ? 1 : -1;\n          }\n          else {\n              return (a.year > b.year) ? 1 : -1;\n          }\n        });\n\n        for(var k = 0; k < this.state.courses.length; k++) {\n          var tempTerm = this.state.terms.findIndex(term => ((term.year === this.state.courses[k].year) && (term.term === this.state.courses[k].term)));\n          this.state.terms[tempTerm].courses.push(this.state.courses[k]);\n        }\n        console.log(this.state.terms);\n        console.log(this.state.courses);\n\n        this.setFlowchartTables();\n        this.setState({currentPage: 0})\n        this.setState({currentContent: this.state.generatedContents[0]});\n        this.setState({dataReceived: true})\n      })\n    }\n\n    componentDidUpdate(prevProp, prevState) {\n      if(prevState.currentPage != this.state.currentPage){    \n        console.log(\"blah\");\n        this.setState({currentContent: this.state.generatedContents[this.state.currentPage]});\n        this.handleScrollToGen();\n      }     \n    }\n\n    exportFlowchart = () => {\n        window.scrollTo(0, 0);\n        html2canvas(document.querySelector(\"#flowchart-area\")).then(canvas => {\n    //      document.location.href = canvas.toDataURL().replace('image/png', 'image/octet-stream');\n            var filename = \"flowchart\" + \".png\";\n            this.saveAs(canvas.toDataURL(), filename); \n        });\n        \n        this.setState({snackbar: true});\n\n//        let snackBarVariables = [...this.state.snackBarVariables];\n//        this.setState({snackbarMsg: \"Your schedule image is downloading!\"});\n//        snackBarVariables[0].snackBarSuccess = true;\n        // snackBarVariables[1].snackBarFailed = true;\n//        this.setState({snackBarVariables});\n//        console.log(snackBarVariables);\n      }\n    \n      exportFlowchartTable = () => {\n            window.scrollTo(0, 0);\n            html2canvas(document.querySelector(\"#flowchart-table-area\")).then(canvas => {\n        //      document.location.href = canvas.toDataURL().replace('image/png', 'image/octet-stream');\n                var filename = \"flowchart\" + \".png\";\n                this.saveAs(canvas.toDataURL(), filename); \n            });\n              \n              this.setState({snackbar: true});\n        }\n\n    setFlowchartTables = () => {\n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 12,\n          // borderBottom: \"1px solid white\",\n        },\n      }))(TableCell);\n\n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n        },\n      }))(TableRow);\n\n      if(this.state.terms.length > 0) {\n        var generatedContents = this.state.terms.map((term) =>\n        <TableContainer component={Paper}>\n        <center><div class=\"header-table-term\"><h3>YEAR {term.year}, TERM {term.term}</h3></div></center>\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                {/* <StyledTableCell> Year </StyledTableCell>\n                <StyledTableCell> Term </StyledTableCell> */}\n                <StyledTableCell> Code </StyledTableCell>\n                <StyledTableCell style={{width: \"20em\"}}> Title </StyledTableCell>\n                <StyledTableCell> Units </StyledTableCell>\n                <StyledTableCell> Prerequisites and Corequisites </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {term.courses.map((row) => (                                  \n                <StyledTableRow key={row.course_name} style={{color: \"#006600\", height: '30px'}}>\n                  {/* <StyledTableCell style={{color: \"#006600\"}}> {row.year} </StyledTableCell>\n                  <StyledTableCell style={{color: \"#006600\"}}> {row.term} </StyledTableCell> */}\n                  <StyledTableCell style={{color: \"#006600\"}}> {row.course_code} </StyledTableCell>\n                  <StyledTableCell style={{color: \"#006600\"}}> {row.course_name} </StyledTableCell>\n                  <StyledTableCell style={{color: \"#006600\"}}> {row.units} </StyledTableCell>\n                  <StyledTableCell style={{color: \"#006600\"}}>                                \n                    {row.prerequisites.map((prereq) => (\n                      <Chip label={prereq.course_code} style={{width: '8em', height: '25px', borderStyle: 'solid', borderWidth: '2px', borderColor: 'lightgray'}} size=\"medium\"></Chip>\n                    ))}                                \n                    {row.softPrerequisites.map((prereq) => (\n                        <Chip label={prereq.course_code} style={{width: '8em', height: '25px', borderStyle: 'dotted', borderWidth: '2px', borderColor: 'grey'}} size=\"medium\"></Chip>\n                    ))}                                \n                    {row.corequisites.map((prereq) => (\n                        <Chip label={prereq.course_code} style={{width: '8em', height: '25px', backgroundColor: '#c7ebd1', borderStyle: 'solid', borderWidth: '2px', borderColor: 'gainsboro'}} size=\"medium\"></Chip>\n                    ))}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        );\n\n        this.setState({generatedContents: generatedContents});\n        this.setState({pagesCount: generatedContents.length});\n        console.log(\"created stuff\");\n        // this.setState({currentPage: 0})\n        // this.setState({currentContent: generatedContents[0]});\n      }\n    }\n\n    handlePageChange = (e, index) => {\n      this.setState({currentContent: \"\"});\n      // this.setState({currentContent: this.state.generatedContents[index]});      \n      // this.setState(state =>{\n      //     var currentContent = state.generatedContents[index];\n      //     return {currentContent};\n      // });\n      this.setState({currentPage: index});\n      // this.setState(state =>{\n      //   var currentPage = index;\n      //   return {currentPage};\n      // });\n\n      console.log(\"soy\");\n      // console.log(this.state.currentPage);\n      // console.log(this.state.currentContent);\n\n      // this.handleScrollToGen();\n    }\n    \n    handleScrollToGen = () => {\n      window.scrollTo({top: 0, behavior: 'smooth'});\n    }\n  \n  saveAs = (uri, filename) => {\n\n    var link = document.createElement('a');\n\n    if (typeof link.download === 'string') {\n\n        link.href = uri;\n        link.download = filename;\n\n        //Firefox requires the link to be in the body\n        document.body.appendChild(link);\n\n        //simulate click\n        link.click();\n\n        //remove the link when done\n        document.body.removeChild(link);\n\n    } else {\n\n        window.open(uri);\n\n    }\n  }\n\n    handleCloseBar = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      this.setState({snackbar: false});\n    }\n\n    onChangePagesEnabled(event) {\n      this.setState({pagesEnabled: false});\n    }\n\n    render() {\n      const { classes } = this.props;\n        \n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 12,\n          // borderBottom: \"1px solid white\",\n        },\n      }))(TableCell);\n\n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n        },\n      }))(TableRow);\n\n      const coursesProcessing = this.state.courses;\n      const termsProcessing = this.state.terms;\n\n      return (\n        <div>\n            {this.props.menu('flowchart')}\n\n            {this.state.dataReceived ? \n            <div>\n               {/*<div class=\"sidemenu\" >\n                  <center>*/}\n                      {/*<Button\n                      variant=\"contained\"\n                      className={classes.buttonStyleOption}\n                         // style={{display:\"none\", width: \"0%\", margin: \"none\"}}\n                      >\n                      CSS 116 CS\n                    </Button>*/}\n                      {/* <input type=\"submit\" class=\"btn btn-success change-flowchart\" value=\"CCS 116 CS\" />\n                  </center>*/}\n                  {/* <center><input type=\"submit\" class=\"btn btn-success change-flowchart\" value=\"ID Number, Course\" /></center> */}\n                  {/* <center><input type=\"submit\" class=\"btn btn-success change-flowchart\" value=\"ID Number, Course\" /></center> */}\n               {/*</div>*/}\n\n              <div class=\"sidemenu-main-flow\">\n                <br/>\n                  <center><h2 style={{width: \"80%\"}}>YOUR FLOWCHART</h2></center>\n                  <center><h3>CCS 116 CS</h3></center>\n\n                  <Tabs defaultActiveKey=\"table\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"visual\" title=\"Visual\">\n                      <div class=\"tabArea\">\n                        <center>\n                          <Button\n                            variant=\"contained\"\n                            className={classes.buttonStyle}\n                            onClick={this.exportFlowchart}\n                            endIcon={ <GetAppIcon/>}\n                            >\n                            Export\n                          </Button>\n                        </center>\n                        <Snackbar open={this.state.snackbar} autoHideDuration={4000} onClose={this.handleCloseBar}>\n                          <Alert onClose={this.handleCloseBar} severity=\"success\">\n                          Your flowchart image is downloading!\n                          </Alert>\n                        </Snackbar>\n                        <div class=\"flowchart-area\" id=\"flowchart-area\">                          \n                          <div class=\"legendArea\">\n                            <div class=\"header\"><h5>Legend</h5></div>\n                              <div class=\"legendEntryFlowchart\"><div class=\"flowchartLegendLine\"><hr style={{borderColor: \"#16775d\", borderWidth: \"2px\"}}></hr></div><div class=\"flowchartLegendText\">Prerequisite or corequisite</div></div>\n                              <div class=\"legendEntryFlowchart\"><div class=\"flowchartLegendLine\"><hr style={{borderColor: \"#16775d\", borderWidth: \"1px\", borderStyle: \"dashed\"}}></hr></div><div class=\"flowchartLegendText\">Soft prerequisite</div></div>\n                          </div>\n                          <div class=\"flowchart-header-parent\">\n                            <div class=\"header-year-parent\">\n                              <div class=\"header-year\">Year 1</div>\n                              <div class=\"header-term-parent\">\n                                <div class=\"header-term\">Term 1</div>\n                                <div class=\"header-term\">Term 2</div>\n                                <div class=\"header-term\">Term 3</div>\n                              </div>\n                            </div>\n                            <div class=\"header-year-parent\">\n                              <div class=\"header-year\">Year 2</div>\n                              <div class=\"header-term-parent\">\n                                <div class=\"header-term\">Term 1</div>\n                                <div class=\"header-term\">Term 2</div>\n                                <div class=\"header-term\">Term 3</div>\n                              </div>\n                            </div>\n                            <div class=\"header-year-parent\">\n                              <div class=\"header-year\">Year 3</div>\n                              <div class=\"header-term-parent\">\n                                <div class=\"header-term\">Term 1</div>\n                                <div class=\"header-term\">Term 2</div>\n                                <div class=\"header-term\">Term 3</div>\n                              </div>\n                            </div>\n                            <div class=\"header-year-parent\">\n                              <div class=\"header-year\">Year 4</div>\n                              <div class=\"header-term-parent\">\n                                <div class=\"header-term\">Term 1</div>\n                                <div class=\"header-term\">Term 2</div>\n                                <div class=\"header-term\">Term 3</div>\n                              </div>\n                            </div>\n                          </div>\n                            <Flowspace theme=\"green\" variant=\"paper\" background=\"white\" connectionSize=\"2\" style={{ overflow: 'hidden', height:\"100%\", width:\"100\",}}>\n                              {\n                                Object.keys(this.state.flowpoints).map(key => {\n                                  const point = this.state.flowpoints[key]\n                                  return (\n                                    <Flowpoint\n                                      key={point.key}\n                                      startPosition={point.startPosition} \n                                      width={point.width} \n                                      height={point.height} \n                                      dragX={point.dragX} \n                                      dragY={point.dragY} \n                                      outputs={point.outputs}>\n                                      <div className={classes.flowchartText}>{point.name}<br />{point.units}</div>\n                                    </Flowpoint>\n\n                                    // <Flowpoint\n                                    //   key={key}\n                                    //   startPosition={point.pos}\n                                    //   onClick={() => {\n                                    //     var selected_point = this.state.selected_point\n                                    //     if (selected_point === key) {\n                                    //       selected_point = null\n                                    //     } else {\n                                    //       selected_point = key\n                                    //     }\n                                    //     this.setState({selected_point})\n                                    //   }}\n                                    //   onDrag={position => {\n                                    //     var flowpoints = this.state.flowpoints\n                                    //     flowpoints[key].position = position\n                                    //     this.setState({flowpoints})\n                                    //   }}>                                \n                                    // </Flowpoint>\n                                  )\n                                })\n                              }\n                          </Flowspace>\n                        </div>\n                    </div>\n                  </Tab>\n                  <Tab eventKey=\"table\" title=\"Table\">\n                    <div class=\"tabArea\">\n                    <center>\n                      <Button\n                        variant=\"contained\"\n                        className={classes.buttonStyle}\n                        onClick={this.exportFlowchartTable}\n                        endIcon={ <GetAppIcon/>}\n                        >\n                        Export\n                      </Button>\n                    </center>\n                    <Snackbar open={this.state.snackbar} autoHideDuration={4000} onClose={this.handleCloseBar}>\n                      <Alert onClose={this.handleCloseBar} severity=\"success\">\n                      Your flowchart image is downloading!\n                      </Alert>\n                    </Snackbar>\n\n                    {/* <div class=\"flowchart-table-options\" onChange={this.onChangePagesEnabled}>\n                        <input type=\"radio\" name=\"pages\" \n                                      value=\"true\" /> Page view\n                        <input type=\"radio\" name=\"pages\" \n                                      value=\"false\"/> Consolidated view\n                    </div> */}\n\n                    <div class=\"flowchart-table-area\" id=\"flowchart-table-area\">\n                    <div class=\"legendArea\">\n                      <div class=\"header\"><h5>Legend</h5></div>\n                        <div class=\"legendEntry\"><Chip style={{width: '25px', height: '25px', borderRadius: \"50%\", borderStyle: 'solid', borderWidth: '2px', borderColor: 'lightgray'}} size=\"medium\"></Chip> Prerequisite</div>\n                        <div class=\"legendEntry\"><Chip style={{width: '25px', height: '25px', borderRadius: \"50%\", borderStyle: 'dotted', borderWidth: '2px', borderColor: 'grey'}} size=\"medium\"></Chip> Soft prerequisite</div>\n                        <div class=\"legendEntry\"><Chip style={{width: '25px', height: '25px', borderRadius: \"50%\", backgroundColor: '#c7ebd1', borderStyle: 'solid', borderWidth: '2px', borderColor: 'gainsboro'}} size=\"medium\"></Chip> Corerequisite</div>\n                    </div>                    \n                    <span style={(this.state.pagesEnabled === true) ? {} : {display: \"none\"}}>{this.state.currentContent}</span>\n\n                    {/* {termsProcessing.map((term) => (    \n                      <TableContainer component={Paper}>\n                      <center><div class=\"header-table-term\"><h3>YEAR {term.year}, TERM {term.term}</h3></div></center>\n                        <Table aria-label=\"customized table\">\n                          <TableHead>\n                            <TableRow>\n                              <StyledTableCell> Code </StyledTableCell>\n                              <StyledTableCell style={{width: \"20em\"}}> Title </StyledTableCell>\n                              <StyledTableCell> Units </StyledTableCell>\n                              <StyledTableCell> Prerequisites and Corequisites </StyledTableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {term.courses.map((row) => (                                  \n                              <StyledTableRow key={row.course_name} style={{color: \"#006600\", height: '30px'}}>\n                                <StyledTableCell style={{color: \"#006600\"}}> {row.course_code} </StyledTableCell>\n                                <StyledTableCell style={{color: \"#006600\"}}> {row.course_name} </StyledTableCell>\n                                <StyledTableCell style={{color: \"#006600\"}}> {row.units} </StyledTableCell>\n                                <StyledTableCell style={{color: \"#006600\"}}>                                \n                                  {row.prerequisites.map((prereq) => (\n                                    <Chip label={prereq.course_code} style={{width: '8em', height: '25px', borderStyle: 'solid', borderWidth: '2px', borderColor: 'lightgray'}} size=\"medium\"></Chip>\n                                  ))}                                \n                                  {row.softPrerequisites.map((prereq) => (\n                                      <Chip label={prereq.course_code} style={{width: '8em', height: '25px', borderStyle: 'dotted', borderWidth: '2px', borderColor: 'grey'}} size=\"medium\"></Chip>\n                                  ))}                                \n                                  {row.corequisites.map((prereq) => (\n                                      <Chip label={prereq.course_code} style={{width: '8em', height: '25px', backgroundColor: '#c7ebd1', borderStyle: 'solid', borderWidth: '2px', borderColor: 'gainsboro'}} size=\"medium\"></Chip>\n                                  ))}\n                                </StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    ))} */}\n\n                    {/* <TableContainer component={Paper}>\n                      <Table aria-label=\"customized table\">\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell> Year </StyledTableCell>\n                            <StyledTableCell> Term </StyledTableCell>\n                            <StyledTableCell> Code </StyledTableCell>\n                            <StyledTableCell> Title </StyledTableCell>\n                            <StyledTableCell> Units </StyledTableCell>\n                            <StyledTableCell> Prerequisites and Corequisites </StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {coursesProcessing.map((row) => (                                  \n                            <StyledTableRow key={row.course_name} style={{color: \"#006600\", height: '30px'}}>\n                              <StyledTableCell style={{color: \"#006600\"}}> {row.year} </StyledTableCell>\n                              <StyledTableCell style={{color: \"#006600\"}}> {row.term} </StyledTableCell>\n                              <StyledTableCell style={{color: \"#006600\"}}> {row.course_code} </StyledTableCell>\n                              <StyledTableCell style={{color: \"#006600\"}}> {row.course_name} </StyledTableCell>\n                              <StyledTableCell style={{color: \"#006600\"}}> {row.units} </StyledTableCell>\n                              <StyledTableCell style={{color: \"#006600\"}}>                                \n                                {row.prerequisites.map((prereq) => (\n                                  <Chip label={prereq.course_code} style={{width: '8em', height: '25px', borderStyle: 'solid', borderWidth: '2px', borderColor: 'lightgray'}} size=\"medium\"></Chip>\n                                ))}                                \n                                {row.softPrerequisites.map((prereq) => (\n                                    <Chip label={prereq.course_code} style={{width: '8em', height: '25px', borderStyle: 'dotted', borderWidth: '2px', borderColor: 'grey'}} size=\"medium\"></Chip>\n                                ))}                                \n                                {row.corequisites.map((prereq) => (\n                                    <Chip label={prereq.course_code} style={{width: '8em', height: '25px', backgroundColor: '#c7ebd1', borderStyle: 'solid', borderWidth: '2px', borderColor: 'gainsboro'}} size=\"medium\"></Chip>\n                                ))}\n                              </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer> */}\n                    </div>\n                    \n                    <Grid item xs={12} justify=\"center\" alignItems=\"center\">\n                      <div className = \"paginationContainer\" style={(this.state.generatedContents != null) ? {} : {display: \"none\"}}>\n                            <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                                <PaginationItem disabled={this.state.currentPage <= 0}>\n                                    <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPage - 1)}\n                                        previous/>\n                                </PaginationItem>\n                                {[...Array(this.state.pagesCount)].map((page, i) => \n                                    <PaginationItem active={i === this.state.currentPage} key={i} className={'paginationItemStyle'}>\n                                        <PaginationLink onClick={e => this.handlePageChange(e, i)} className={'paginationLinkStyle'}>\n                                        {i + 1}\n                                        </PaginationLink>\n                                    </PaginationItem>\n                                    )}\n                                <PaginationItem disabled={this.state.currentPage >= this.state.generatedContents.length - 1}>\n                                    <PaginationLink\n                                        onClick={e => this.handlePageChange(e, this.state.currentPage + 1)}\n                                        next\n                                    />                                   \n                                </PaginationItem>\n                            </Pagination>\n                      </div>\n                    </Grid>\n                    </div>\n                  </Tab>\n                  </Tabs>\n              </div>\n                <div class=\"sideRight\" >\n                </div>\n                  {/*\n                <div class=\"exportmenu\" >\n                  <center><Button\n                      variant=\"contained\"\n                      className={classes.buttonStyle}\n                      onClick={this.exportSched}\n                      endIcon={ <GetAppIcon/>}\n                      >\n                      Export\n                    </Button></center>\n                    <Snackbar open={this.state.snackbar} autoHideDuration={4000} onClose={this.handleCloseBar}>\n                    <Alert onClose={this.handleCloseBar} severity=\"success\">\n                    Your flowchart image is downloading!\n                    </Alert>\n                </Snackbar>\n                </div>*/}\n            </div>\n            : \n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n              <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n            </div>\n           }\n        </div>        \n      );\n    }\n  }\n\n  Flowchart.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n  export default withStyles(styles)(Flowchart);","export const applyDrag = (arr, dragResult) => {\n    const { removedIndex, addedIndex, payload } = dragResult;\n    if (removedIndex === null && addedIndex === null) return arr;\n  \n    const result = [...arr];\n    let itemToAdd = payload;\n  \n    if (removedIndex !== null) {\n      itemToAdd = result.splice(removedIndex, 1)[0];\n    }\n  \n    if (addedIndex !== null) {\n      result.splice(addedIndex, 0, itemToAdd);\n    }\n  \n    return result;\n  };\n  \n  export const generateItems = (count, creator) => {\n    var result = [];\n    for (let i = 0; i < count; i++) {\n      result.push(creator(i));\n    }\n    return result;\n  };","import React, { Component } from \"react\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport { applyDrag, generateItems } from '../components/ultils.jsx';\nimport '../css/CourseDnD.css';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport axios from \"axios\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ReactLoading from 'react-loading';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ListIcon from '@material-ui/icons/List';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { green } from '@material-ui/core/colors';\n\nconst groupStyle = {\n    marginLeft: '50px',\n    flex: 1\n  };\n\nconst styles = theme => ({\n    iconStyle:{ \n      marginBottom: \"5px\", \n      float: \"left\", \n      marginTop: \"11px\", \n      marginLeft: \"16px\",\n        '&:hover': {\n          color: green[500],\n          },\n    },\n  });\n\nclass CourseDnD extends Component {\n\n  constructor(props) {\n    super(props);\n    \n\n    this.state = {\n        courses: this.props.courses,\n        idTag: this.props.idTag\n    };\n\n  }\n\ncomponentWillReceiveProps(props) {\n  this.refreshList(props);\n\n}\n\ncomponentDidMount(){\n  this.refreshList(this.props);\n}\n\nrefreshList = (props) => {\n    var newItems = props.courses;\n    this.setState({courses:[]})\n\n    for(let i = 0; i < newItems.length; i++) {\n        this.setState(state =>{\n            const courses = state.courses.concat({id: newItems[i].id, course_id: newItems[i].course_id, data:newItems[i].data, siteData:newItems[i].siteData});\n            return{courses};\n        });\n    }   \n}\n\nremoveCourse = (index) =>{\n  this.props.handleCourseDelete(this.state.courses[index])\n  var newCourses = [...this.state.courses];\n  if(index !== -1){\n    newCourses.splice(index, 1);\n  }\n  this.props.updateFunction(newCourses);\n}\n\ntriggerModal =(courseName, siteData)=>{\n    this.props.triggerModal(courseName, siteData);\n}\n\ntriggerUpdate=(e)=>{\n  if(e.removedIndex == null){\n    if(e.addedIndex != null){\n      if(this.state.idTag == \"1\"){\n        axios.put('https://animosched-backend-backup.herokuapp.com/api/coursepriority/'+e.payload.id+'/',{\n          courses:e.payload.course_id, priority:true, user:localStorage.getItem('user_id')\n        }).catch(e => {\n          console.log(e.response)\n        })\n      }else if(this.state.idTag == \"2\"){\n        axios.put('https://animosched-backend-backup.herokuapp.com/api/coursepriority/'+e.payload.id+'/',{\n          courses:e.payload.course_id, priority:false, user:localStorage.getItem('user_id')\n        }).catch(e => {\n          console.log(e.response)\n        })\n      }\n\n    }\n\n  }\n  // else if(e.addedIndex == null){\n  //   if(e.removedIndex != null){\n  //     console.log(e.payload)\n\n  //   }\n\n  // }\n  this.setState({ courses: applyDrag(this.state.courses, e) })\n  this.props.updateFunction(this.state.courses);\n  // console.log(this.props.idTag + \" course state contains: \" +this.state.courses);\n}\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n       \n      <div>\n\n        <div className=\"simple-page1\" style={{ display: 'flex', justifyContent: 'center'}}>\n          <div className= \"card-container\" style={{height:\"452px\", overflow: \"auto\", width: \"270px\"}}>\n            {!this.props.loading ? \n            <Container groupName=\"1\" getChildPayload={i => this.state.courses[i]} onDrop={this.triggerUpdate} style={{height:\"100%\"}}>\n                {this.state.courses.map((p, index) => {\n                console.log(p)\n                return (\n                    <Draggable key={p.id}>\n                    <div className=\"draggable-item\">\n                        <Tooltip title=\"Select sections\" placement=\"left\">\n                        <LaunchIcon id=\"launch\" style={{cursor: \"pointer\"}} className={classes.iconStyle} onClick={() => this.triggerModal(p.data, p.siteData)}/>\n                        </Tooltip>\n                        {/* <DragHandleIcon style={{ marginBottom: \"5px\", float: \"left\", marginTop: \"12px\", marginLeft: \"16px\"}}/> */}\n                        {/* <Tooltip title=\"Select sections\" placement=\"left\"> */}\n                            <a className = \"card-courseName\" onClick={() => this.triggerModal(p.data, p.siteData)} /*style={{cursor: \"pointer\", textDecorationLine: 'underline'}}*/>{p.data}</a>\n                        {/* </Tooltip> */}\n                        <Button close  style={{ marginTop: \"11px\", marginRight: \"10px\"}} onClick={() => this.removeCourse(index)}/>\n                    </div>\n                    </Draggable>\n                );\n                })}\n            </Container>\n            :\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"40vh\"}}>\n              <ReactLoading type={'spin'} color={'#9BCFB8'} height={'20%'} width={'20%'}/>\n            </div> \n            }\n        </div>\n        </div>\n \n          {/* <button className=\"addBtn\" onClick={this.refreshList}>Add course</button> */}\n\n      </div>\n    );\n  }\n  \n    // render() {\n    //   return (\n    //     <div className=\"card-scene\" >\n    //       <Container\n    //         orientation=\"horizontal\"\n    //         onDrop={this.onColumnDrop}\n    //         dragHandleSelector=\".column-drag-handle\"\n    //         dropPlaceholder={{\n    //           animationDuration: 150,\n    //           showOnTop: true,\n    //           className: 'cards-drop-preview'\n    //         }}\n    //       >\n    //         {this.state.scene.children.map(column => {\n    //           return (\n    //             <Draggable key={column.id} >\n    //               <div className={column.props.className}>\n    //                 <div className=\"card-column-header\">\n    //                   <span className=\"column-drag-handle\">&#x2630;</span>\n    //                   {column.name}\n    //                 </div>\n    //                 <Container\n    //                   {...column.props}\n    //                   groupName=\"col\"\n    //                   onDragStart={e => console.log(\"drag started\", e)}\n    //                   onDragEnd={e => console.log(\"drag end\", e)}\n    //                   onDrop={e => this.onCardDrop(column.id, e)}\n    //                   getChildPayload={index =>\n    //                     this.getCardPayload(column.id, index)\n    //                   }\n    //                   dragClass=\"card-ghost\"\n    //                   dropClass=\"card-ghost-drop\"\n    //                   onDragEnter={() => {\n    //                     console.log(\"drag enter:\", column.id);\n    //                   }}\n    //                   onDragLeave={() => {\n    //                     console.log(\"drag leave:\", column.id);\n    //                   }}\n    //                   onDropReady={p => console.log('Drop ready: ', p)}\n    //                   dropPlaceholder={{                      \n    //                     animationDuration: 150,\n    //                     showOnTop: true,\n    //                     className: 'drop-preview' \n    //                   }}\n    //                   dropPlaceholderAnimationDuration={200}\n    //                 >\n    //                   {column.children.map(card => {\n    //                     return (\n    //                       <Draggable key={card.id}>\n    //                         <div {...card.props}>\n    //                           <p>{card.data}</p>\n    //                         </div>\n    //                       </Draggable>\n    //                     );\n    //                   })}\n    //                 </Container>\n    //               </div>\n    //             </Draggable>\n    //           );\n    //         })}\n    //       </Container>\n    //     </div>\n    //   );\n    // }\n  \n    getCardPayload(columnId, index) {\n      return this.state.scene.children.filter(p => p.id === columnId)[0].children[\n        index\n      ];\n    }\n  \n    onColumnDrop(dropResult) {\n      const scene = Object.assign({}, this.state.scene);\n      scene.children = applyDrag(scene.children, dropResult);\n      this.setState({\n        scene\n      });\n    }\n  \n    onCardDrop(columnId, dropResult) {\n      if (dropResult.removedIndex !== null || dropResult.addedIndex !== null) {\n        const scene = Object.assign({}, this.state.scene);\n        const column = scene.children.filter(p => p.id === columnId)[0];\n        const columnIndex = scene.children.indexOf(column);\n  \n        const newColumn = Object.assign({}, column);\n        newColumn.children = applyDrag(newColumn.children, dropResult);\n        scene.children.splice(columnIndex, 1, newColumn);\n  \n        this.setState({\n          scene\n        });\n      }\n    }\n\n    addCard = (name) => {\n      this.setState(state =>{\n        const oldItems = state.courses;\n        const courses = state.courses.concat({id: this.props.idTag + oldItems.length, data: name});\n        return{courses};\n      });\n    };\n\n\n    onClearArray = () => {\n      this.setState({courses: []});\n    };\n  }\n\n  CourseDnD.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n\n  export default withStyles(styles)(CourseDnD);","import React, {Component} from 'react';\n// import { Table } from 'reactstrap';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nclass ClassesTable extends Component {\n    state = {  \n\n        tableContent: this.props.content\n    }\n\n    dummyData = [\n        {\n            id: 3, \n            course: \"DUMMY1\", \n            section:\"S17\", \n            faculty: \"DELA CRUZ, JUAN\", \n            day:\"MAR 30\", \n            time:\"08:00AM-5:00PM\",\n            room: \"G310\"\n        },\n        {\n            id: 4, \n            course: \"DUMMY2\", \n            section:\"S15\", \n            faculty: \"DEL TORRE, MARIA\", \n            day:\"APR 05\", \n            time:\"08:00AM-5:00PM\",\n            room: \"G304\"\n        }\n    ];\n    renderTableData(){\n        if(this.state.tableContent != null){\n            return this.state.tableContent.map((data, index)=>{\n                const {id, course, section, faculty, day, time, room} = data\n                return(\n                    <tr key={id}>\n                        <td>{course}</td>\n                        <td>{section}</td>\n                        <td>{faculty}</td>\n                        <td>{day}</td>\n                        <td>{time}</td>\n                        <td>{room}</td>\n                    </tr>\n                )\n            });\n        }\n        \n    }\n\n\n     createTable = (tableArray) =>{     \n         //pass data with unique id number   \n        this.setState(\n            {tableContent: tableArray}\n        );\n    }\n\n    render() { \n        const StyledTableCell = withStyles(theme => ({\n            head: {\n              backgroundColor: '#006A4E',\n              color: theme.palette.common.white,\n            },\n            body: {\n              fontSize: 14,\n            },\n          }))(TableCell);\n          \n          const StyledTableRow = withStyles(theme => ({\n            root: {\n              '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n              },\n            },\n          }))(TableRow);\n          \n          function createData(classNmbr, course, section, faculty, day, startTime, endTime, room) {\n            return {classNmbr,course, section, faculty, day, startTime, endTime, room};\n          }\n\n          const rows = [\n            createData(2258, 'INOVATE', 'S17', 'DELA CRUZ, JUAN', 'TH', '12:45', '14:15', 'GK210'),\n            createData(2259, 'INOVATE', 'S18', 'DELA CRUZ, JUAN', 'TH', '14:30', '16:00', 'GK210'),\n            createData(2043,'TREDTRI', 'S17', 'TORRES, MARIA', 'TH', '14:30', '16:00', 'GK301'),\n            createData(2044,'TREDTRI', 'S18', 'TORRES, MARIA', 'TH', '12:45', '14:15', 'GK301')\n          ];\n\n        return (  \n            // <div>\n            //    <h3 id=\"title\">Non-Credit Courses</h3>\n            //    <Table id = \"classes\">\n            //         <thead>\n            //             <tr>\n            //             <th>Course</th>\n            //             <th>Section</th>\n            //             <th>Faculty</th>\n            //             <th>Day</th>\n            //             <th>Time</th>\n            //             <th>Room</th>\n            //             </tr>\n            //         </thead>\n            //         <tbody>\n            //             {this.renderTableData()}\n\n            //         </tbody>\n            //     </Table> \n            // </div>\n\n            <div>\n                <h3>Non-credited Course Details</h3>\n                <div className=\"viewCourses\">\n                  <TableContainer component={Paper} style={{maxHeight: \"428px\", overflowY: \"auto\", overflowX: \"hidden\"}}>\n                    <Table aria-label=\"customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell> Course </StyledTableCell>\n                          <StyledTableCell> Section </StyledTableCell>\n                          <StyledTableCell> Faculty </StyledTableCell>\n                          <StyledTableCell> Day </StyledTableCell>\n                          <StyledTableCell> Time </StyledTableCell>\n                          <StyledTableCell> Room </StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {this.state.tableContent.map(row => (\n                          <StyledTableRow key={row.id}>\n                            <StyledTableCell> {row.course} </StyledTableCell>\n                            <StyledTableCell> {row.section} </StyledTableCell>\n                            <StyledTableCell> {row.faculty} </StyledTableCell>\n                            <StyledTableCell> {row.day} </StyledTableCell>\n                            <StyledTableCell> {row.startTime} - {row.endTime} </StyledTableCell>\n                            <StyledTableCell> {row.room} </StyledTableCell>\n                          </StyledTableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </div>\n            </div>\n\n        );\n    }\n}\n \nexport default ClassesTable;","import React, {Component} from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport '../css/BoxInfo.css';\n\nclass BoxInfo extends Component {\n    constructor(props){\n        super(props);\n    }\n    state = {  \n        boxContent: this.props.content,\n        id: this.props.id,\n        // boxContent: ['Match Preferences','> Earliest Start Time: 9:15 AM', '> earliest End Time: 2:15 PM', '> Break Preferences: 15 minutes', '', 'Unmatched Preferences', '> Professor Bob Uy not included'],\n        // courseConflicts: ['> HUMALIT conflicts with with ClassB2', '> KASPIL conflicts with with ClassC3']\n    }\n\n    render() { \n        \n        return ( \n            <div className=\"boxinfoContainer\" key={this.state.id}>\n                <List>\n                {this.state.boxContent.map((pref, index)=>(\n                    <ListItem>\n                        <ListItemText primary={pref}/>\n                    </ListItem>\n                    // <p key={index + this.state.id}>{pref}</p>\n                ))}\n                </List>\n            </div>\n         );\n    }\n}\n \nexport default BoxInfo;","import React, {Component} from 'react';\nimport {Column, Row} from 'simple-flexbox';\nimport ScheduleView from '../components/ScheduleView';\nimport ClassesTable from '../components/ClassesTable';\nimport BoxInfo from '../components/BoxInfo';\nimport { Button } from 'reactstrap';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport EditableLabel from 'react-inline-editing';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#006A4E',\n        color: theme.palette.common.white,\n      },\n      body: {\n        fontSize: 14,\n        borderBottom: \"1px solid white\",\n      },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nfunction createData(name) {\n    return { name };\n}\n\nconst styles = theme => ({\n    pencilIcon:{ \n        marginLeft: \"10px\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"gray\"\n          },\n    },\n    checkIcon:{\n        color: \"green\", \n        marginLeft: \"10px\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#79c879\"\n          },\n    }\n  });\n\nclass GenSchedInfo extends Component {\n    constructor(props){\n        super(props);\n        var prefTitle = \"Preferences\";\n        var conflictTitle = \"Course Conflicts\";\n        if(props.type != undefined && props.owner!=undefined){\n            prefTitle = props.owner+'\\'s Preferences';\n            conflictTitle = props.owner+'\\'s Course Conflicts';\n        }\n        this._handleFocus = this._handleFocus.bind(this);\n        this._handleFocusOut = this._handleFocusOut.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.state = {  \n            scheduleContent: props.scheduleContent,\n            tableContent: props.tableContent,\n            conflictsContent: props.conflictsContent,\n            prefContent: props.prefContent,\n            rowsPref: props.prefContent,\n            rowsFriendPref: props.prefFriendContent,\n            rowsConflict: props.conflictsContent,\n            id: props.id,\n            schedTitle: props.titleName,\n            earliest: props.earliest,\n            latest: props.latest,\n            boolEdit: false,\n            defPalette: ['#9BCFB8', '#7FB174', '#689C97', '#072A24', '#D1DDDB', '#85B8CB', '#1D6A96', '#283B42','#FFB53C', '#EEB3A3', '#F3355C', '#FAA98B', '#E6AECF', '#AEE0DD', '#01ACBD','#FED770', ' #F29F8F', '#FB7552', '#076A67','#324856', '#4A746A', '#D18237', '#D66C44', '#FFA289', '#6A92CC', '#706FAB', '#50293C'],\n            prefTitle: prefTitle,\n            conflictTitle: conflictTitle,\n\n        }\n        this.editableLabel = React.createRef();\n    }\n\n    componentWillReceiveProps(props){\n        this.setState({\n            scheduleContent: props.scheduleContent,\n            tableContent: props.tableContent,\n            conflictsContent: props.conflictsContent,\n            prefContent: props.prefContent,\n            rowsPref: props.prefContent,\n            rowsFriendPref: props.prefFriendContent,\n            rowsConflict: props.conflictsContent,\n            id: props.id,\n            schedTitle: props.titleName,\n            earliest: props.earliest,\n            latest: props.latest,\n        });\n    }\n\n    _handleFocus=(text)=> {\n        this.setState({boolEdit: true});\n        console.log('Focused with text: ' + text);\n        \n    }\n\n    _handleFocusOut=(text)=> {\n        console.log('Left editor with text: ' + text);\n        this.setState({schedTitle: text});\n        console.log(\"this is props\");\n        console.log(this.props);\n        this.props.updateSchedTitle(text);\n        this.setState({boolEdit: false});\n\n    }\n\n    handleKeyPress = (event) => {\n        console.log(\"event: \" + event);\n        if(event.key === 'Enter'){\n            this.setState({boolEdit: false});\n            console.log(\"isEditing: \" + this.state.boolEdit);\n\n        }\n    }\n\n    editButtonPress = () =>{\n        if(this.state.boolEdit === false){\n            this.setState({boolEdit: true});\n            this.editableLabel.current.setState({isEditing: true});\n        }else if(this.state.boolEdit === true){\n            this.setState({boolEdit: false});\n        }\n    }\n\n\n    render() { \n        const { classes } = this.props;\n\n        console.log(this.state.rowsPref)\n        console.log(this.state.rowsConflict)\n\n        return (\n            <Column>\n                <Row verticle = 'center' className = \"RowSchedInfoContainer\">\n                    <Column flexGrow={1} horizontal = 'center' >\n                        <Row horizontal= 'start'>\n                            <EditableLabel ref={this.editableLabel} text={this.state.schedTitle}\n                            labelClassName='myLabelClass'\n                            inputClassName='myInputClass'\n                            inputWidth='200px'\n                            inputHeight='25px'\n                            inputMaxLength='50'\n                            labelFontWeight='bold'\n                            inputFontWeight='bold'\n                            onFocus={this._handleFocus}\n                            onFocusOut={this._handleFocusOut}\n                            onChange={this.handleKeyPress}\n                            /> \n\n                            {this.state.boolEdit ? <DoneIcon fontSize=\"medium\" className={classes.checkIcon} onClick={this.editButtonPress}/> : <EditIcon fontSize= \"small\" className={classes.pencilIcon} onClick={this.editButtonPress}/>}\n                        </Row>\n                   \n                        <ScheduleView id='scheduleView' content={this.state.scheduleContent} earliest={this.state.earliest} latest={this.state.latest} palette={this.state.defPalette} />\n                    </Column>\n                    <Column flexGrow={1} horizontal = 'center'style={{marginLeft: \"20px\"}} >\n                        {/* <Row horizontal = 'center'>\n                            <ClassesTable content={this.state.tableContent} />\n                        </Row> */}\n                        <Row horizontal = 'center'>\n                            <Column horizontal = 'center' style={{marginLeft: \"10px\"}}>\n                                {/* Preferences\n                                <BoxInfo content={this.state.prefContent } id={1+this.state.id}/> */}\n    \n                                <TableContainer component={Paper} className=\"boxinfoContainer\" style={{width: 250}}>\n                                    <Table className={classes.table} aria-label=\"customized table\" stickyHeader>\n                                        <TableHead>\n                                            <TableRow>\n                                                <StyledTableCell><center>{this.state.prefTitle}</center></StyledTableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        \n                                        <TableBody>\n                                            {this.state.rowsPref.length == 0 ?\n                                            <StyledTableRow key={'empty'}>\n                                                <StyledTableCell rowSpan={3}>\n                                                    All preferences were met.\n                                                </StyledTableCell>\n                                            </StyledTableRow>\n                                            : null }\n                                            {this.state.rowsPref.map((row) => (\n                                                <StyledTableRow key={row}>\n                                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                                        {row}\n                                                    </StyledTableCell>\n                                                </StyledTableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n\n                            </Column>\n\n                            <Column horizontal = 'center' style={{marginLeft: \"20px\"}}>\n                                {/* Course Conflict\n                                <BoxInfo content={this.state.conflictsContent} id={2+this.state.id}/> */}\n\n                                <TableContainer component={Paper} className=\"boxinfoContainer\" style={{width: 250}}>\n                                    <Table className={classes.table} aria-label=\"customized table\" stickyHeader>\n                                        <TableHead>\n                                            <TableRow>\n                                                <StyledTableCell><center>{this.state.conflictTitle}</center></StyledTableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        \n                                        <TableBody>\n                                            {this.state.rowsConflict.length == 0 ?\n                                            <StyledTableRow key={'empty'}>\n                                                <StyledTableCell rowSpan={3}>\n                                                    No course conflicts.\n                                                </StyledTableCell>\n                                            </StyledTableRow>\n                                            : null}\n                                            {this.state.rowsConflict.map((row) => (\n                                                <StyledTableRow key={row}>\n                                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                                        {row}\n                                                    </StyledTableCell>\n                                                </StyledTableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n\n                            </Column>\n                        </Row>\n                        {/****************TBALES FOR FRIENDS*******************/}\n                        <br></br>\n                        <div style={this.props.type ==\"friend\" ?  {} : {display:\"none\"} }>\n                        <Row horizontal>\n                            {/* <Column horizontal = 'center' style={{marginLeft: \"10px\"}}> */}\n                                <TableContainer component={Paper} className=\"boxinfoContainer\" style={{width: \"100%\"}}>\n                                    <Table className={classes.table} aria-label=\"customized table\" stickyHeader >\n                                        <TableHead>\n                                            <TableRow>\n                                                <StyledTableCell><center>Friends' Preferences and Conflicts</center></StyledTableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        \n                                        <TableBody style={{width: \"100%\"}}>\n                                            {this.state.rowsFriendPref != undefined ? \n                                            <div>\n                                                {this.state.rowsFriendPref.length == 0 ?\n                                                <StyledTableRow key={'empty'}>\n                                                    <StyledTableCell rowSpan={3}>\n                                                        All friend's preferences were met.\n                                                    </StyledTableCell>\n                                                </StyledTableRow>\n                                                : null }\n                                                {this.state.rowsFriendPref.map((row) => (\n                                                    <StyledTableRow key={row} style={{width: \"100%\"}}>\n                                                        <StyledTableCell component=\"th\" scope=\"row\" style={{width: \"100%\"}}>\n                                                            {row}\n                                                        </StyledTableCell>\n                                                    </StyledTableRow>\n                                                ))}\n                                            </div>\n                                            : null}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n\n                            {/* </Column> */}\n                            \n                            {/* <Column horizontal = 'center' style={{marginLeft: \"20px\"}}>\n                               \n\n                                <TableContainer component={Paper} className=\"boxinfoContainer\" style={{width: 250}}>\n                                    <Table className={classes.table} aria-label=\"customized table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <StyledTableCell><center>Friends' Course Conflict</center></StyledTableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        \n                                        <TableBody>\n                                            {this.state.rowsConflict.length == 0 ?\n                                            <StyledTableRow key={'empty'}>\n                                                <StyledTableCell rowSpan={3}>\n                                                    No course conflicts.\n                                                </StyledTableCell>\n                                            </StyledTableRow>\n                                            : null}\n                                            {this.state.rowsConflict.map((row) => (\n                                                <StyledTableRow key={row}>\n                                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                                        {row}\n                                                    </StyledTableCell>\n                                                </StyledTableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n\n                            </Column> */}\n                        </Row> \n                        </div>   \n                    </Column>\n                    \n                </Row>\n        \n                {/* <Row horizontal='center'>\n                    <Button style={{margin: \"40px\"}}>Save Schedule</Button>\n                </Row> */}\n           \n            </Column>\n                \n          );\n    }\n}\n\nGenSchedInfo.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles)(GenSchedInfo);","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport '../css/SearchCourses.css';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// import ComboBox from '../components/ComboBox.jsx';\n// import axios from 'axios';\n\n// import SearchIcon from '@material-ui/icons/Search';\n// import Button from '@material-ui/core/Button';\n// import groupArray from 'group-array';\n\n// import CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n\nimport ReactLoading from 'react-loading';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n// import searchIMG from '../assets/search_engine.png';\n\n// import {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    \n  },\n  wrapper: {\n    // margin: theme.spacing(1),\n    position: 'relative',\n    \n\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n    paddingTop: '5px',\n    paddingBottom: '5px',\n  },\n});\n\n\n\n\nclass FriendTable extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        dataReceived: false,\n        skeletons: [...Array(4).keys()],\n        loading: true,\n        friendInfo: [{name: \"Edward Elric\", matched: \"INOVATE S17, ALGOCOM S18\", possible: \"TREDTRI A51\", unavailable: \"SCIMATC\"}, {name: \"Mark Ruffalo\", matched: \"INOVATE S17\", possible: \"TREDFOR S18\", unavailable: \"LBYMATC\"}],\n      }\n\n    }\n\n    // componentDidMount(){\n      \n       \n    // }\n\n    createData(name, matched, possible, unavailable) {\n      return { name, matched, possible, unavailable };\n    }\n\n    handleChange = (field, e) => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({fields});\n    }\n\n    \n  \n    // toggleModal = () => {\n    //   var openModalVar = this.state.openModalCourseInfo;\n    //   this.setState({openModalCourseInfo: !openModalVar});\n    // }\n\n    render() {\n      const { classes } = this.props;\n\n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 14,\n          borderBottom: \"1px solid white\",\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n          \"&:hover\": {\n            backgroundColor: \"#efefef\"\n          },\n        },\n      }))(TableRow);\n      \n      const loadedData = (index) => {\n       \n          if(this.state.friendInfo != undefined){\n        \n            return(\n            <TableBody>\n              {this.state.friendInfo.map((row, index) => (\n                  <StyledTableRow key={index}>\n                    <StyledTableCell> {row.name} </StyledTableCell>\n                    <StyledTableCell > {row.matched} </StyledTableCell>\n                    <StyledTableCell > {row.possible} </StyledTableCell>\n                    <StyledTableCell > {row.unavailable} </StyledTableCell>\n                  </StyledTableRow>\n         \n              ))}\n            </TableBody>\n            )\n          }else{\n            return(\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell colSpan={9}>\n                  <center><p>\n                    Friends were not added\n                  </p></center>\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n            )\n        }\n\n      };\n\n      return (\n          <div>\n           \n\n            {true ? \n            <div className=\"friend-container\">\n\n                \n                {/* start of table */}\n                <div className=\"view-Friends\" style={true ? {} : {display: \"none\"}}>\n                  <TableContainer>\n\n                    {/* {this.state.friendInfo.map(index => ( */}\n                      <Table aria-label=\"customized table\" style={{marginBottom: 25, marginTop: 25}} component={Paper}>\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell> Friend </StyledTableCell>\n                            <StyledTableCell> Matched Classes </StyledTableCell>\n                            <StyledTableCell> Possible Classes </StyledTableCell>\n                            <StyledTableCell> Clashing Courses </StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        {false ? \n                        <TableBody>\n                            {this.state.skeletons.map(skeleton =>(\n                              <StyledTableRow>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                        </TableBody>\n                        : \n                        // <div></div>\n                        loadedData(\"name\")\n                        }\n                      </Table>\n                    {/* ))} */}\n\n                    </TableContainer>\n\n              </div>                  \n                \n            </div>\n                     \n            : \n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n              <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n            </div> }\n        </div>        \n      );\n    }\n  }\n\n  FriendTable.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(FriendTable);","import React, {Component} from 'react';\nimport {Column, Row} from 'simple-flexbox';\nimport {Input} from 'reactstrap';\nimport Menu from '../components/Menu.jsx';\nimport CourseDnD from '../components/CourseDnD';\nimport '../css/GenerateSchedule.css';\nimport GenSchedInfo from '../components/GenSchedInfo';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { Pagination, PaginationItem, PaginationLink} from 'reactstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport ReactLoading from 'react-loading';\nimport ComboBox from '../components/ComboBox.jsx';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport groupArray from 'group-array'\n\nimport { Steps, Hints } from 'intro.js-react';\nimport 'intro.js/introjs.css';\nimport '../css/introjs-modern.css';\nimport FriendTable from '../components/FriendTable.jsx';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    buttonProgress: {\n    //   color: green[500],\n      position: 'absolute',\n      top: '65%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n    buttonProgressSave: {\n        //   color: green[500],\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          marginTop: -12,\n          marginLeft: -12,\n        },\n    schedButton:{\n        textTransform: \"none\",\n        borderRadius: \"25px\",\n        padding: \"10px\",\n        paddingLeft: \"30px\",\n        paddingRight: \"30px\",\n        backgroundColor: \"#16775D\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        marginTop: \"20px\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#16775D\"\n          },\n    }\n  });\n\n  const GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n     \n     const WhiteCheckbox = withStyles({\n    root: {\n        color: \"white\",\n      '&$checked': {\n        color: \"white\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nclass GenerateSchedule extends Component {\n\n    constructor(props) {\n        super(props);\n        this.updateHighPriority = this.updateHighPriority.bind(this);\n        this.updateLowPriority = this.updateLowPriority.bind(this);\n        // this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.generatedRef = React.createRef();\n        this.handleScrollToGen = this.handleScrollToGen.bind(this);\n        this.handleSaveChange = this.handleSaveChange.bind(this);\n      \n        // this.updateSchedTitle = this.updateSchedTitle.bind(this);\n        this.state = {\n            highPriorityId: \"1\",\n            lowPriorityId: \"2\",\n            value: \"\",\n            highCourses: [],\n            lowCourses: [],\n            courseList: [],\n            currentPage: 0,\n            currentContent: \"\",\n            currentCourse: \"\",\n            generatedContents: [],\n            // generatedContents : ['Hello', 'There', 'Josh'],\n            // currentContent: ['Hello'],\n            pagesCount: 1,\n            searchedCourse: \"\",\n            hideGenContent:true,\n            savedScheds: [],\n            saveButtonLabel: \"Save Schedule\",\n            saveButtonStyle: {margin: \"30px\"},\n            AutoCompleteValue: [],\n            schedules: [],\n            dataReceived: false,\n\n            snackBar: false,\n            loading: false,\n            success: false,\n            courseAdded: true,\n            filterFull: true,\n\n            courseOfferings: [],\n            \n            openModalCourseOfferings: false,\n            modalCourseName: \"\",\n            siteData: [],\n            siteDataArray: [],\n            allCheckBox: true,\n     \n            skeletons: [...Array(8).keys()],\n\n            undesirableClass: {},\n            tempUndesirableClass: {},\n\n            openModalWait: false,\n        };\n\n        if(localStorage.getItem('hints') == null){\n            localStorage.setItem('hints',true)\n        }\n\n    }\n\n    getLowCourseOfferings(id, val, newCourses, _callback){\n        if(val.course_code.trim() != ''){\n            const offeringList = [];\n            const courses = [];\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/searchcourse/'+val.course_code.trim()+'/')\n            .then(res => {\n                res.data.map(course => {\n                    courses.push(course.id)\n                })\n                console.log(courses)\n                axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n                    courses,\n                    applyPreference: false,\n                    user_id: localStorage.getItem('user_id')\n                }).then(res => {\n                    res.data.map(bundle => {\n                        var arranged = groupArray(bundle, 'classnumber');\n                        for (let key in arranged) {\n                        var days = []\n                        var day = ''\n                        var classnumber = ''\n                        var course = ''\n                        var course_id = ''\n                        var section = ''\n                        var faculty = ''\n                        var timeslot_begin = ''\n                        var timeslot_end = ''\n                        var room = ''\n                        var max_enrolled = ''\n                        var current_enrolled = ''\n                        arranged[key].map(offering => {\n                            days.push(offering.day)\n                            classnumber = offering.classnumber\n                            course = offering.course\n                            course_id = offering.course_id\n                            section = offering.section\n                            faculty = offering.faculty\n                            timeslot_begin = offering.timeslot_begin\n                            timeslot_end = offering.timeslot_end\n                            room = offering.room\n                            max_enrolled = offering.max_enrolled\n                            current_enrolled = offering.current_enrolled\n                        })\n                        days.map(day_code => {\n                            day += day_code;\n                        })\n                        var checked = this.state.undesirableClass[classnumber]\n                        if(checked == null || checked){\n                            checked = true;\n                        }else{\n                            checked = false;\n                        }\n                        const offering = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled, checked);\n                        offeringList.push(offering);\n                        }\n                    })\n                    newCourses.push({'id':id, 'course_id':val.id, 'data':val.course_code, 'siteData': offeringList})\n                    console.log(newCourses)\n                    this.setState({lowCourses: newCourses}, () => {\n                        _callback()\n                    })\n                })\n            })\n        }else{\n            newCourses.push({'id':id, 'course_id':val.id, 'data':val.course_code, 'siteData': []})\n            this.setState({lowCourses: newCourses}, () => {\n                _callback()\n            })\n        }\n    }\n\n    getCourseOfferings(id, val, newCourses, _callback){\n        if(val.course_code.trim() != ''){\n            const offeringList = [];\n            const courses = [];\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/searchcourse/'+val.course_code.trim()+'/')\n            .then(res => {\n                res.data.map(course => {\n                    courses.push(course.id)\n                })\n                console.log(courses)\n                axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n                    courses,\n                    applyPreference: false,\n                    user_id: localStorage.getItem('user_id')\n                }).then(res => {\n                    res.data.map(bundle => {\n                        var arranged = groupArray(bundle, 'classnumber');\n                        for (let key in arranged) {\n                        var days = []\n                        var day = ''\n                        var classnumber = ''\n                        var course = ''\n                        var course_id = ''\n                        var section = ''\n                        var faculty = ''\n                        var timeslot_begin = ''\n                        var timeslot_end = ''\n                        var room = ''\n                        var max_enrolled = ''\n                        var current_enrolled = ''\n                        arranged[key].map(offering => {\n                            days.push(offering.day)\n                            classnumber = offering.classnumber\n                            course = offering.course\n                            course_id = offering.course_id\n                            section = offering.section\n                            faculty = offering.faculty\n                            timeslot_begin = offering.timeslot_begin\n                            timeslot_end = offering.timeslot_end\n                            room = offering.room\n                            max_enrolled = offering.max_enrolled\n                            current_enrolled = offering.current_enrolled\n                        })\n                        days.map(day_code => {\n                            day += day_code;\n                        })\n                        var checked = this.state.undesirableClass[classnumber]\n                        if(checked == null || checked){\n                            checked = true;\n                        }else{\n                            checked = false;\n                        }\n                        const offering = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled, checked);\n                        offeringList.push(offering);\n                        }\n                    })\n                    newCourses.push({'id':id, 'course_id':val.id, 'data':val.course_code, 'siteData': offeringList})\n                    console.log(newCourses)\n                    this.setState({highCourses: newCourses}, () => {\n                        _callback()\n                    })\n                })\n            })\n        }else{\n            newCourses.push({'id':id, 'course_id':val.id, 'data':val.course_code, 'siteData': []})\n            this.setState({highCourses: newCourses}, () => {\n                _callback()\n            })\n        }\n    }\n\n    getSingleCourseOfferings(id, val, _callback){\n        if(val.course_code.trim() != ''){\n            const offeringList = [];\n            const courses = [];\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/searchcourse/'+val.course_code.trim()+'/')\n            .then(res => {\n                res.data.map(course => {\n                    courses.push(course.id)\n                })\n                console.log(courses)\n                axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n                    courses,\n                    applyPreference: false,\n                    user_id: localStorage.getItem('user_id')\n                }).then(res => {\n                    res.data.map(bundle => {\n                        var arranged = groupArray(bundle, 'classnumber');\n                        for (let key in arranged) {\n                        var days = []\n                        var day = ''\n                        var classnumber = ''\n                        var course = ''\n                        var course_id = ''\n                        var section = ''\n                        var faculty = ''\n                        var timeslot_begin = ''\n                        var timeslot_end = ''\n                        var room = ''\n                        var max_enrolled = ''\n                        var current_enrolled = ''\n                        arranged[key].map(offering => {\n                            days.push(offering.day)\n                            classnumber = offering.classnumber\n                            course = offering.course\n                            course_id = offering.course_id\n                            section = offering.section\n                            faculty = offering.faculty\n                            timeslot_begin = offering.timeslot_begin\n                            timeslot_end = offering.timeslot_end\n                            room = offering.room\n                            max_enrolled = offering.max_enrolled\n                            current_enrolled = offering.current_enrolled\n                        })\n                        days.map(day_code => {\n                            day += day_code;\n                        })\n                        var checked = this.state.undesirableClass[classnumber]\n                        if(checked == null || checked){\n                            checked = true;\n                        }else{\n                            checked = false;\n                        }\n                        const offering = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled, checked);\n                        offeringList.push(offering);\n                        }\n                    })\n                    const newCourse = {'id':id,'course_id':val.id,'data':val.course_code,'siteData':offeringList}; \n                    this.setState(state =>{\n                        const highCourses = state.highCourses.concat(newCourse);\n                        return{highCourses};\n                    });\n                    _callback()\n                })\n            })\n        }else{\n            const newCourse = {'id':id,'course_id':val.id,'data':val.course_code,'siteData':[]}; \n            this.setState(state =>{\n                const highCourses = state.highCourses.concat(newCourse);\n                return{highCourses};\n            });\n            _callback()\n        }\n    }\n\n    componentDidMount(){\n        const id = localStorage.getItem('user_id');\n        var AutoCompleteValue = JSON.parse(localStorage.getItem('addCourses'))\n        var schedules = localStorage.getItem('schedules') \n        var setSched = false;\n        if(schedules != undefined){\n            schedules = JSON.parse(schedules)\n        }\n        if(AutoCompleteValue != null){\n            this.setState({AutoCompleteValue})\n            this.setState({currentCourse: AutoCompleteValue});\n        }\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/courses/')\n        .then(res => {\n            res.data.map(course => {\n                var courses = this.state.courseList;\n                var addCourse = {'id':course.id,'course_code':course.course_code}\n                courses.push(addCourse)\n                this.setState({courseList: courses})\n            })\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/courseprioritylist/'+id+'/')\n            .then(res => {\n                console.log(res.data)\n                var total = res.data.length;\n                var done = 0;\n                res.data.map(coursepriority => {\n                    const id = coursepriority.id\n                    const priority = coursepriority.priority\n                    var newCourseList = []\n                    this.state.courseList.map(course =>{\n                        if(course.id == coursepriority.courses){\n                            if(priority){\n                                this.getCourseOfferings(id, course, this.state.highCourses, () => {\n                                    done += 1;\n                                    this.setState({dataReceived: true}, () => {\n                                        if(!setSched){\n                                            this.setSchedInfo();\n                                            setSched = true\n                                        }\n                                    })\n                                })\n                            }else{\n                                this.getLowCourseOfferings(id, course, this.state.lowCourses, () => {\n                                    done += 1;\n                                    console.log('test 2')\n                                    if(total <= done){\n                                        this.setState({dataReceived: true}, () => {\n                                            if(!setSched){\n                                                this.setSchedInfo();\n                                                setSched = true\n                                            }\n                                        })\n                                    }\n                                })\n                            }\n                        }else{\n                            newCourseList.push(course)\n                        }\n                    })\n                    this.setState({courseList:newCourseList})\n                })\n                if(total <= done){\n                    this.setState({dataReceived: true}, () => {\n                        if(!setSched){\n                            this.setSchedInfo();\n                            setSched = true\n                        }\n                    })\n                }\n                console.log(schedules)\n                if(schedules != undefined){\n                    this.setState({schedules})\n                }\n                console.log(this.state.highCourses.length)\n                console.log(this.state.lowCourses.length)\n                console.log(this.state.loading || this.state.highCourses.length + this.state.lowCourses.length <= 0);\n            });\n        })\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/undesirableclasslist/'+id+'/').then(res => {\n            res.data.map(c => {\n                const undesirableClass = this.state.undesirableClass\n                undesirableClass[c.undesirable_classes] = false\n                this.setState({undesirableClass})\n            })\n        })\n    }\n\n    saveCourses = () => {\n        // const priority = res.data.priority\n        // var newCourseList = []\n        // this.state.courseList.map(course =>{\n        //     if(course.id == res.data.courses){\n        //         if(priority){\n        //             var courses = this.state.highCourses;\n        //             courses.push(course.course_code)\n        //             this.setState({highCourses: courses})\n        //         }else{\n        //             var courses = this.state.lowCourses;\n        //             courses.push(course.course_code)\n        //             this.setState({lowCourses: courses})\n        //         }\n        //     }else{\n        //         newCourseList.push(course)\n        //     }\n        // })\n        // this.setState({courseList:newCourseList})\n    }\n\n    componentDidUpdate(prevProp, prevState){\n        if(prevState.generatedContents !== this.state.generatedContents){\n            this.handleScrollToGen();\n            prevState.generatedContents = this.state.generatedContents;\n        }\n       \n    }\n\n    // handleKeyPress = (event) => {\n    //     if(event.key === 'Enter'){\n    //         const newCourse = event.target.value;\n    //         this.setState(state =>{\n    //             const highCourses = state.highCourses.concat(newCourse);\n    //             return{highCourses};\n    //         });\n    //         console.log(this.state.highCourses)\n    //     }\n    // }\n    handleCourseDelete = (addCourse) => {\n        axios.delete('https://animosched-backend-backup.herokuapp.com/api/courseprioritylist/'+addCourse.id+'/')\n        .then(res => {\n            console.log(\"deleted \"+addCourse.id)\n            const newCourseList = [];\n            this.state.courseList.map(course => {\n                newCourseList.push(course)\n            })\n            newCourseList.push({'id':addCourse.course_id, 'course_code':addCourse.data})\n            this.setState({courseList:newCourseList})\n        }).catch(error =>{\n            console.log(error.response)\n        })\n    }\n\n    handleAutoCompleteChange = (e, val) => {\n        this.setState({currentCourse: val});\n        this.setState({AutoCompleteValue: val},() => {\n            localStorage.setItem('addCourses', JSON.stringify(val))\n        });\n    }\n\n    handleAutoCompletePress = (e) => {\n        const val = this.state.currentCourse;\n        if(e.key === 'Enter'){\n            this.handleAddCoursePriority();\n        }\n    }\n\n    handleAddCoursePriority = () => {\n        console.log(this.state.currentCourse)\n        const val = this.state.currentCourse;\n        localStorage.removeItem('addCourses')\n\n        if(val != undefined && val != [] && val.length != 0){\n            this.setState({AutoCompleteValue: []})\n            this.setState({currentCourse: []})\n            this.setState({courseAdded: false})\n            this.setState({loading: true})\n            const newCourseList = [];\n            // this.state.courseList.map(course => {\n            //     if(course.id != val.id){\n            //         newCourseList.push(course)\n            //     }\n            // })\n            // this.setState({courseList:newCourseList})\n            var count = 0\n            var max = val.length\n            val.map(course => {\n                if(course.course_code != undefined && course.course_code.trim() != ''){\n                    const id = localStorage.getItem('user_id');\n                    const data = {\n                        courses: course.id,\n                        priority: true,\n                        user: id\n                    }\n                    axios.post('https://animosched-backend-backup.herokuapp.com/api/coursepriority/', data,\n                    {\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    })\n                    .then(res => {\n                        this.getSingleCourseOfferings(res.data.id, course, () => {\n                            count += 1\n                            if(max >= count){\n                                this.setState({loading: false}, () => {\n                                })\n                            }\n\n                        })\n\n                    })\n                    .catch(error => {\n                        console.log(error.response)\n                        this.setState({loading: false})\n                    });\n                }\n            })\n        }       \n    }\n\n    handlePageChange = (e,index) => {\n        this.setState(state =>{\n            var currentContent = state.generatedContents[index];\n            return {currentContent};\n        });\n        \n        this.setState({currentPage: index});\n        this.setState(state =>{\n            var currentPage = index;\n            return {currentPage};\n            });\n\n        this.handleScrollToGen();\n\n        if(this.state.savedScheds.includes(this.state.generatedContents[index].key)){\n            this.setState({saveButtonLabel: \"Saved\"});\n            const styleChange = {margin: \"30px\", backgroundColor: \"white\", color: \"#16775D\"};\n            this.setState({saveButtonStyle: styleChange});\n        }else{\n            this.setState({saveButtonLabel: \"Save Schedule\"});\n            const styleChange = {margin: \"30px\", backgroundColor: \"#16775D\", color: \"white\"};\n            this.setState({saveButtonStyle: styleChange});\n        }\n    }\n\n    createTimeslot = (day, hour, minute) =>{\n        if(day == 'M'){\n            return new Date(2018, 5, 25, hour, minute);\n        }else if(day == 'T'){\n            return new Date(2018, 5, 26, hour, minute);\n        }else if(day == 'W'){\n            return new Date(2018, 5, 27, hour, minute);\n        }else if(day == 'H'){\n            return new Date(2018, 5, 28, hour, minute);\n        }else if(day == 'F'){\n            return new Date(2018, 5, 29, hour, minute);\n        }else if(day == 'S'){\n            return new Date(2018, 5, 30, hour, minute);\n        }\n    }\n\n    setSchedInfo = () => {\n        console.log(this.state.schedules)\n        var generatedContents = this.state.schedules.map((item, index) =>\n            <GenSchedInfo key={item.id} id={item.id} offerings={item.offerings} scheduleContent={item.scheduleContent} tableContent={item.tableContent} prefContent={item.prefContent} conflictsContent={item.conflictsContent} titleName={item.title} earliest={item.earliest} latest={item.latest} updateSchedTitle={this.updateSchedTitle}/>\n        );\n        this.setState({currentPage: 0})\n        this.setState({generatedContents});\n        this.setState({hideGenContent: false});\n        this.setState({pagesCount: generatedContents.length});\n        this.setState({currentContent: generatedContents[0]})\n\n        this.handleScrollToGen();\n    }\n\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled, checked) {\n        return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled, checked };\n    }\n\n    createSchedInfo = () =>{\n        if(!this.state.loading){\n            this.setState({loading: true});\n            this.setState({success: false});\n            this.toggleModalWait();\n            //modal popped out here\n          }else{\n            this.setState({success: true});\n            this.setState({loading: false});\n            this.toggleModalWait();\n        } \n        this.setState({savedScheds: [], hideGenContent: true, generatedContents: [], currentContent: \"\"});\n\n        this.setState({saveButtonLabel: \"Save Schedule\"});\n        const styleChange = {margin: \"30px\", backgroundColor: \"#16775D\", color: \"white\"};\n        this.setState({saveButtonStyle: styleChange});\n\n        const courseOfferings = []\n\n        this.state.highCourses.map(course => {\n            course.siteData.map(c => {\n                if(!c.checked){\n                    courseOfferings.push(c)\n                }\n            })\n        })\n\n        this.state.lowCourses.map(course => {\n            course.siteData.map(c => {\n                if(!c.checked){\n                    courseOfferings.push(c)\n                }\n            })\n        })\n\n        this.setState({courseOfferings:courseOfferings}, () => {\n            console.log(courseOfferings)\n            axios.post('https://animosched-backend-backup.herokuapp.com/api/generateschedule/',\n            {\n                highCourses: this.state.highCourses, \n                lowCourses: this.state.lowCourses,\n                user_id: localStorage.getItem('user_id'),\n                filterFull: this.state.filterFull,\n                courseOfferings: courseOfferings \n            })\n            .then(res => {\n                console.log(res)\n                const schedules = []\n                var schedCount = 0;\n                res.data.map(newSchedule =>{\n                    var count = 0;\n                    const scheduleContent = []\n                    const tableContent = []\n                    var earliest = 9\n                    var latest = 17\n\n\n                    newSchedule.offerings.map(offering=>{\n                        var startTime = offering.timeslot_begin.split(':');\n                        var endTime = offering.timeslot_end.split(':');\n                        const newContent = \n                        {\n                            id: count,\n                            title: offering.course + ' ' + offering.section,\n                            section: offering.section,\n                            startDate: this.createTimeslot(offering.day,startTime[0],startTime[1]),\n                            endDate: this.createTimeslot(offering.day,endTime[0],endTime[1]),\n                            priorityId: 3,\n                            location: offering.room,\n                            professor: offering.faculty,\n                            startTime: offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3),\n                            endTime: offering.timeslot_end.substring(0, offering.timeslot_end.length - 3),\n                            days: offering.day,\n                            classCode: offering.classnumber \n                        }\n                        if(earliest > Number(startTime[0])){\n                            earliest = Number(startTime[0])\n                        }\n                        if(latest < Number(endTime[0]) + 1){\n                            latest = Number(endTime[0]) + 1\n                        }\n                        scheduleContent.push(newContent);\n                        var day = ''\n                        var classnumber = ''\n                        var course = ''\n                        var section = ''\n                        var faculty = ''\n                        var timeslot_begin = ''\n                        var timeslot_end = ''\n                        var room = ''\n                        var max_enrolled = ''\n                        var current_enrolled = ''\n\n                        day = offering.day\n                        classnumber = offering.classnumber\n                        course = offering.course\n                        section = offering.section\n                        faculty = offering.faculty\n                        timeslot_begin = offering.timeslot_begin\n                        timeslot_end = offering.timeslot_end\n                        room = offering.room\n                        max_enrolled = offering.max_enrolled\n                        current_enrolled = offering.current_enrolled\n                        const newTableContent = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n                        // tableContent.push(newTableContent)\n                        count += 1;\n                    })\n                    schedCount += 1;\n                    schedules.push({\n                        id: schedCount,\n                        title: \"Schedule \"+schedCount.toString(),\n                        scheduleContent: scheduleContent,\n                        tableContent: tableContent,\n                        prefContent: [],\n                        prefContent: newSchedule.preferences,\n                        conflictsContent: newSchedule.information,\n                        earliest: earliest,\n                        latest: latest,\n                        offerings: newSchedule.offerings\n                    });\n                })\n                console.log(schedules)\n                if(!this.state.cancelled){\n                    localStorage.setItem('schedules', JSON.stringify(schedules))\n                    this.setState({schedules});\n                    this.setSchedInfo();\n                    this.setState({success: true});\n                    this.setState({loading: false});\n                    this.setState({openModalWait: false});\n                    this.setState({cancelled: false})\n                }\n                this.setState({cancelled: false})\n            }).catch(error => {\n                console.log(error.response)\n                this.setState({success: false});\n                this.setState({loading: false});\n                this.setState({openModalWait: false});\n            })\n        })\n\n\n    }\n\n    updateHighPriority(courseUpdate){\n        var newArray = [];\n        courseUpdate.map(course=>{\n            newArray.push(course);\n        })\n        this.setState({highCourses: newArray})\n    }\n\n    updateLowPriority(courseUpdate){\n        var newArray = [];\n        courseUpdate.map(course=>{\n            newArray.push(course);\n        })\n        this.setState({lowCourses: newArray})\n    }\n    \n    updateSchedTitle=(text)=>{\n         var newArray = [];\n         const currentContent = this.state.currentContent;\n        // var index = newArray.findIndex(this.state.currentContent);\n        const newContent = <GenSchedInfo key={currentContent.props.id} earliest={currentContent.props.earliest} latest={currentContent.props.latest} id={currentContent.props.id} offerings={currentContent.props.offerings} scheduleContent={currentContent.props.scheduleContent} tableContent={currentContent.props.tableContent} prefContent={currentContent.props.prefContent} conflictsContent={currentContent.props.conflictsContent} titleName={text} updateSchedTitle={this.updateSchedTitle}/>\n\n        this.state.generatedContents.map(value=>{\n            if(value.key == this.state.currentContent.key){\n                newArray.push(newContent)\n            }else{\n                newArray.push(value)\n            }\n        })\n\n        this.setState({generatedContents: newArray});\n        this.setState({currentContent: newContent});\n    }\n    \n    handleScrollToGen=()=>{\n        window.scrollTo({\n            top: this.generatedRef.current.offsetTop,\n            behavior: \"smooth\"\n        })\n    }\n\n    handleSaveChange=()=>{\n        if(this.state.savedScheds.includes(this.state.currentContent.key)){\n        }else{\n            this.setState({loading: true});\n            const courseOfferings = []\n            const user_id = localStorage.getItem('user_id')\n            console.log(this.state.currentContent)\n            this.state.currentContent.props.offerings.map(offering => {\n                courseOfferings.push(offering.id)\n            })\n            axios.post('https://animosched-backend-backup.herokuapp.com/api/schedules/',{\n                title: this.state.currentContent.props.titleName,\n                courseOfferings: courseOfferings,\n                user: user_id\n            }).then(res => {\n                // axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+user_id+'/')\n                // .then(res => {\n                //     const schedules = res.data.schedules;\n                //     schedules.push(sched_id);\n                //     axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+user_id+'/',{\n                //         schedules: schedules\n                //     }).then(res => {\n                //         console.log(res)\n                        \n                //     }).catch(err => {\n                //         console.log(err.response)\n                //     })\n                // })\n            }).catch(err => {\n                console.log(err.response)\n            })\n            this.setState(state=>{\n                const savedScheds = state.savedScheds.concat(state.currentContent.key);\n                return {savedScheds};\n            })\n            this.setState({loading: false});\n            this.setState({saveButtonLabel: \"Saved\"});\n            const styleChange = {margin: \"30px\", backgroundColor: \"white\", color: \"#16775D\", borderStyle: \"solid\", borderColor: \"#16775D\"};\n            this.setState({saveButtonStyle: styleChange});\n            this.setState({snackBar: true});\n        }\n    }\n\n    handleCloseSnackBar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        this.setState({snackBar: false});\n      }\n    \n    handleFilterFull = () => {\n        this.setState({filterFull: !this.state.filterFull});\n    }\n\n    handleCheckbox = (index) => {\n        this.setState(state =>{\n            const siteData  = state.siteData\n            siteData[index].checked = !siteData[index].checked\n            const undesirableClass = state.undesirableClass\n            undesirableClass[siteData[index].classNmbr] = siteData[index].checked\n            return{siteData, undesirableClass};\n        });\n        console.log(this.state.siteData[index]) \n    }\n    \n    handleAllCheckbox = () => {\n        this.setState(state =>{\n            const siteData = state.siteData\n            const undesirableClass = state.undesirableClass\n            siteData.map(c => {\n                if(this.state.allCheckBox){\n                    c.checked = false \n                }else{\n                    c.checked = true \n                }\n                undesirableClass[c.classNmbr] = c.checked\n            })\n            return{siteData, undesirableClass};\n        }, () => {\n            this.setState({allCheckBox: !this.state.allCheckBox})\n        });\n    }\n\n    handleCourseOfferingChange =(e, val)=>{\n        this.setState({courseOfferings: val});\n    }\n    \n    triggerModal=(courseName, siteData)=>{\n        this.setState({siteData})\n        this.setState({allCheckBox: false}, () => {\n            this.state.siteData.map(c => {\n                if(c.checked){\n                    this.setState({allCheckBox: true})\n                }\n            })\n        })\n        this.setState({openModalCourseOfferings: true});\n        this.setState({modalCourseName: courseName});\n    }\n\n    handleCloseModalCourseOfferings = ()=>{\n      this.setState({openModalCourseOfferings: false})\n    }\n  \n    handleOpenModalCourseOfferings = () =>{\n        this.setState({openModalCourseOfferings: true})\n    }\n  \n    toggleModal = () => {\n        var openModalVar = this.state.openModalCourseOfferings;\n        this.setState({openModalCourseOfferings: !openModalVar});\n    }\n    \n    handleSaveCourseOfferings = () =>{\n        console.log(\"Course Offerings changes saved\");\n        const classnumber = []\n        const delClassnumber = []\n        for (const [key, value] of Object.entries(this.state.undesirableClass)) {\n            if(!value){\n                classnumber.push((key))\n            }\n        }\n        console.log(classnumber)\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/removeundesirableclass/',{\n            user_id: localStorage.getItem('user_id')\n        }).then(res => {\n            axios.post('https://animosched-backend-backup.herokuapp.com/api/addundesirableclass/',{\n                classnumber: classnumber,\n                user_id: localStorage.getItem('user_id')\n            }).then(res => {\n                this.setState({openModalCourseOfferings: false});\n            })\n        })\n      } \n    \n    toggleModalWait = () => {\n        var openModalVar = this.state.openModalWait;\n        this.setState({openModalWait: !openModalVar});\n      }\n\n    onCancel = () => {\n        this.setState({openModalWait: false})\n        this.setState({loading: false})\n        this.setState({cancelled: true})\n    }\n    render() { \n        let search_field = this.props.search_field;\n        // const { currentPage } = this.state;\n        const { classes } = this.props;\n        \n        const StyledTableCell = withStyles(theme => ({\n            head: {\n              backgroundColor: '#006A4E',\n              color: theme.palette.common.white,\n            },\n            body: {\n              fontSize: 14,\n              borderBottom: \"1px solid white\",\n            },\n          }))(TableCell);\n\n          const StyledTableRow = withStyles(theme => ({\n            root: {\n              '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n              },\n            },\n          }))(TableRow);\n\n          const hints = [\n                    {\n                        element: '#launch',\n                        hint:\"Click here to filter out your classes!\",\n                        hintPosition: 'top-middle',\n                    }\n                ];\n\n        return (\n            <div>\n                {this.props.menu('generateSchedule')}\n                {this.state.dataReceived ?\n                <div>\n                    <Column flexGrow={1} style={{margin: \"40px\"}}>\n                        <div className=\"courseInputContainer\">\n                            <Row horizontal = 'center'>\n                                <h1>SECOND TRIMESTER, AY 2019 - 2020</h1>\n                            </Row>\n                            <Hints\n                                enabled={(localStorage.getItem('hints') == 'true')}\n                                hints={hints}\n                                onClose={() => {localStorage.setItem('hints',false)}}\n                            />\n                            <Row horizontal = 'center' style={{margin: \"20px\"}}>\n                                <div id=\"search_container\">\n                                    {/* <Input\n                                    type=\"search\"\n                                    name={search_field}\n                                    id=\"exampleSearch\"\n                                    placeholder=\"Enter Course Name...\"\n                                    value = {this.state.Input}\n                                    onKeyPress={this.handleKeyPress}\n                                    /> */}\n                                    <ComboBox\n                                    page={\"add\"}\n                                    disabled={this.state.loading}\n                                    onChange={this.handleAutoCompleteChange}\n                                    onKeyPress={this.handleAutoCompletePress}\n                                    value={this.state.AutoCompleteValue}\n                                    defaultValue={this.state.AutoCompleteValue}\n                                    />\n                                     \n                                </div>\n                                <div>\n                                    <Button\n                                        variant=\"contained\"\n                                        color = \"Primary\"\n                                        disabled={this.state.loading}\n                                        style={{backgroundColor: \"green\", color:\"white\", height:\"56px\"}}\n                                        data-hint=\"hello\"\n                                        onClick={this.handleAddCoursePriority}>\n                                        <AddIcon fontSize=\"medium\"/>  \n                                    </Button>\n\n                                </div>\n                            </Row>\n                            <Row horizontal='center' style={{margin: \"20px\"}}>\n                                <FormControlLabel\n                                control = {<GreenCheckbox disabled={this.state.loading} checked={this.state.filterFull} onChange={this.handleFilterFull} color=\"primary\"/>}label=\"Filter out closed classes\" />\n                            </Row>\n                            <div className={\"DnDContainer\"}>\n                                <Row vertical = 'center'>\n                                    <Column flexGrow={1} horizontal = 'center'>\n                                        <h3 className='priortyTitle'>Highest Priority</h3>\n                                        <CourseDnD idTag={this.state.highPriorityId} courses={this.state.highCourses} updateFunction={this.updateHighPriority} handleCourseDelete={this.handleCourseDelete} triggerModal={this.triggerModal} loading={this.state.loading}/>\n\n                                    </Column>\n                                    <Column flexGrow={1} horizontal = 'center'>\n                                        <h3 className='priortyTitle'>Lowest Priority</h3>\n                                        <CourseDnD idTag={this.state.lowPriorityId} courses={this.state.lowCourses} updateFunction={this.updateLowPriority} handleCourseDelete={this.handleCourseDelete} triggerModal={this.triggerModal} loading={this.state.loading}/>\n                                    </Column>\n                                </Row>\n                            </div>\n                            {/*============MODAL EXERPIMENT HERE======================*/}\n                            <Modal dialogClassName=\"modal-90w\" size=\"lg\" style={{maxWidth: '1600px', width: '80%'}} isOpen={this.state.openModalCourseOfferings} toggle={this.toggleModal} returnFocusAfterClose={false} backdrop=\"static\" data-keyboard=\"false\">\n                              <ModalHeader toggle={this.toggleModal}>Course Information</ModalHeader>\n\n                              <ModalBody>\n                                <h4>{this.state.modalCourseName}</h4>\n                                <br/>\n\n                                <TableContainer component={Paper}>\n                                    <Table aria-label=\"customized table\">\n                                      <TableHead>\n                                        <TableRow>\n                                            <StyledTableCell> <WhiteCheckbox onClick={() => this.handleAllCheckbox()} checked={this.state.allCheckBox}/> </StyledTableCell>\n                                          <StyledTableCell> Class Number </StyledTableCell>\n                                          <StyledTableCell> Course </StyledTableCell>\n                                          <StyledTableCell> Section </StyledTableCell>\n                                          <StyledTableCell> Faculty </StyledTableCell>\n                                          <StyledTableCell> Day </StyledTableCell>\n                                          <StyledTableCell> Time </StyledTableCell>\n                                          <StyledTableCell> Room </StyledTableCell>\n                                          <StyledTableCell> Capacity </StyledTableCell>\n                                          <StyledTableCell> Enrolled </StyledTableCell>\n                                        </TableRow>\n                                      </TableHead>\n                                      {this.state.loading ? \n                                      <TableBody>\n                                          {this.state.skeletons.map(skeleton =>(\n                                            <StyledTableRow>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                            </StyledTableRow>\n                                          ))}\n                                      </TableBody>\n                                      : \n                                      <TableBody>\n                                        {this.state.siteData.map((row, index) => (\n                                                \n                                          <StyledTableRow key={row.classNmbr} style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}>\n                                            <StyledTableCell> <GreenCheckbox onClick={() => this.handleCheckbox(index)} checked={row.checked}/></StyledTableCell>\n                                                    \n                                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.classNmbr} </StyledTableCell>\n                                            <StyledTableCell onClick={this.handleOpenModalCourseInfo} style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}} > {row.course} </StyledTableCell>\n                                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.section} </StyledTableCell>\n                                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.faculty} </StyledTableCell>\n                                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.day} </StyledTableCell>\n                                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.startTime} - {row.endTime} </StyledTableCell>\n                                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.room} </StyledTableCell>\n                                            <StyledTableCell align=\"right\" style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.capacity} </StyledTableCell>\n                                            <StyledTableCell align=\"right\" style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.enrolled} </StyledTableCell>\n                                          </StyledTableRow>\n                                        ))}\n                                      </TableBody>\n                                      }\n                                    </Table>\n                                  </TableContainer>\n\n                              </ModalBody>\n                                \n                                <ModalFooter>\n                                    <Button style={{color: \"gray\"}}onClick={this.toggleModal}>Cancel</Button>\n                                    <Button color=\"primary\" onClick={this.handleSaveCourseOfferings}>Save Changes</Button>{' '}\n                                  \n                                </ModalFooter>\n\n                          </Modal> \n                            \n                            {/* <Row horizontal='center' style={{margin: \"20px\"}}>\n                                <ComboBox page={\"edit\"} value={this.state.courseOfferings} onChange={this.handleCourseOfferingChange}></ComboBox>\n                            </Row> */}\n                            <Row horizontal = 'center' style={{margin: \"20px\"}}>\n                                <div className={classes.root}>\n                                    <div className={classes.wrapper} ref={this.generatedRef}> \n                                        <Button\n                                        variant=\"contained\"\n                                        className={classes.schedButton}\n                                        disabled={this.state.loading || this.state.highCourses.length + this.state.lowCourses.length <= 0}\n                                        onClick={()=>this.createSchedInfo()}\n                                         \n                                        // style={{backgroundColor: \"green\"}}\n                                        >\n                                        Generate Schedule\n                                        </Button>\n                                        {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                                    </div>\n                                </div>\n                                {/* <button className=\"schedButton\" onClick={()=>this.createSchedInfo()} style={{marginTop: \"20px\"}}>Generate Schedule</button> */}\n                            </Row>\n\n                            <Modal isOpen={this.state.openModalWait} toggle={this.toggleModalWait} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" centered={true}>\n                                <ModalHeader toggle={this.toggleModalWait}>\n                                    <center>\n                                        <br></br><p>Please wait...In the process of making your schedule</p>\n                                        <ReactLoading type={'spin'} color={'#9BCFB8'} height={'10%'} width={'10%'}/>\n                                    </center>\n                                    </ModalHeader>\n                                \n                                    <ModalFooter>\n                                        \n                                        <Button onClick={this.onCancel} style={{color: \"gray\"}}>Cancel</Button>\n                                    </ModalFooter>\n                                \n                            </Modal> \n                        </div>\n\n                        <div   className = \"genSchedInfoContainer\" style={this.state.hideGenContent ? {display: \"none\"} :  {margin: \"40px\"}}>\n                            <span>{this.state.currentContent}</span>\n                            {/* <FriendTable/> */}\n                        \n                            <div className = \"paginationContainer\">\n                                <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                                    <PaginationItem disabled={this.state.currentPage <= 0}>\n                                        <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPage - 1)}\n                                            previous/>\n                                    </PaginationItem>\n                                    {[...Array(this.state.pagesCount)].map((page, i) => \n                                        <PaginationItem active={i === this.state.currentPage} key={i} className={'paginationItemStyle'}>\n                                            <PaginationLink onClick={e => this.handlePageChange(e, i)} className={'paginationLinkStyle'}>\n                                            {i + 1}\n                                            </PaginationLink>\n                                        </PaginationItem>\n                                        )}\n                                    <PaginationItem disabled={this.state.currentPage >= this.state.generatedContents.length - 1}>\n                                        <PaginationLink\n                                            onClick={e => this.handlePageChange(e, this.state.currentPage + 1)}\n                                            next\n                                        />\n                                        \n                                        </PaginationItem>\n                                </Pagination>\n                            </div>\n                            <Row horizontal='center'>\n                                <div className={classes.root}>\n                                        <div className={classes.wrapper}> \n                                            <Button\n                                            variant=\"contained\"\n                                            className={classes.schedButton}\n                                            onClick={this.handleSaveChange}\n                                            style={this.state.saveButtonStyle}\n                                            >\n                                            {this.state.saveButtonLabel}\n                                            </Button>\n                                            {this.state.loading && <CircularProgress size={24} className={classes.buttonProgressSave}/>}\n                                        </div>\n                                        <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                                            <Alert onClose={this.handleCloseSnackBar} severity=\"success\">\n                                                Your schedule have been successfully saved! <a href=\"/\" style={{color:\"#D3D3D3\"}}>View in homepage</a>\n                                            </Alert>\n                                        </Snackbar>\n                                    </div>\n                                {/* <button className={\"schedButton\"} style={this.state.saveButtonStyle} onClick={this.handleSaveChange}>{this.state.saveButtonLabel}</button> */}\n                            </Row>  \n                        </div>\n                    </Column>\n                </div>\n                : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                </div> }\n            </div>  \n        );\n    }\n}\n\nGenerateSchedule.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(GenerateSchedule);","import React, {Component} from 'react';\nimport {Column, Row} from 'simple-flexbox';\nimport {Input} from 'reactstrap';\nimport Menu from '../components/Menu.jsx';\nimport CourseDnD from '../components/CourseDnD';\nimport '../css/GenerateSchedule.css';\nimport GenSchedInfo from '../components/GenSchedInfo';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { Pagination, PaginationItem, PaginationLink} from 'reactstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport ReactLoading from 'react-loading';\nimport ComboBox from '../components/ComboBox.jsx';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport groupArray from 'group-array'\n\nimport { Steps, Hints } from 'intro.js-react';\nimport 'intro.js/introjs.css';\nimport '../css/introjs-modern.css';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FriendTable from '../components/FriendTable.jsx';\nimport Link from '@material-ui/core/Link';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {Tabs, Tab } from 'react-bootstrap';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    buttonProgress: {\n    //   color: green[500],\n      position: 'absolute',\n      top: '65%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n    buttonProgressSave: {\n        //   color: green[500],\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          marginTop: -12,\n          marginLeft: -12,\n        },\n    schedButton:{\n        textTransform: \"none\",\n        borderRadius: \"25px\",\n        padding: \"10px\",\n        paddingLeft: \"30px\",\n        paddingRight: \"30px\",\n        backgroundColor: \"#16775D\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        marginTop: \"20px\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#16775D\"\n          },\n    }\n  });\n\n  const GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n     \n     const WhiteCheckbox = withStyles({\n    root: {\n        color: \"white\",\n      '&$checked': {\n        color: \"white\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nclass GenerateSchedule extends Component {\n\n    constructor(props) {\n        super(props);\n        // this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.generatedRef = React.createRef();\n        this.handleScrollToGen = this.handleScrollToGen.bind(this);\n        this.handleSaveChange = this.handleSaveChange.bind(this);\n      \n        // this.updateSchedTitle = this.updateSchedTitle.bind(this);\n        this.state = {\n            value: \"\",\n            courseList: [],\n            currentPage: 0,\n            currentContent: \"\",\n            currentCourse: \"\",\n            generatedContents: [],\n            // generatedContents : ['Hello', 'There', 'Josh'],\n            // currentContent: ['Hello'],\n            pagesCount: 1,\n            searchedCourse: \"\",\n            hideGenContent:true,\n            savedScheds: [],\n            saveButtonLabel: \"Save Schedule\",\n            saveButtonStyle: {margin: \"30px\"},\n            AutoCompleteValue: [],\n            schedules: [],\n            dataReceived: false,\n\n            snackBar: false,\n            loading: false,\n            success: false,\n            courseAdded: true,\n            filterFull: true,\n\n            courseOfferings: [],\n            \n            openModalCourseOfferings: false,\n            modalCourseName: \"\",\n            siteData: [],\n            siteDataArray: [],\n            allCheckBox: true,\n     \n            skeletons: [...Array(8).keys()],\n\n            openModalWait: false,\n            shareCode: '',\n            redirect: false,\n            copyLabel: \"Copy link to clipboard\",\n            friends: {},\n            friendKeys: []\n        };\n\n        if(localStorage.getItem('stepsFriends') == undefined){\n            localStorage.setItem('stepsFriends',true)\n        }\n\n    }\n\n    componentDidMount(){\n        const id = localStorage.getItem('user_id');\n        console.log(this.props)\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/getsharecode/'+this.props.params['id']+'/')\n        .then(res => {\n            console.log(res)\n            // this.setState({owner: res.data[0].owner}) \n            var friends = {}\n            var friendKeys = Object.keys(res.data)\n            friendKeys.map(key => {\n                console.log(key)\n                console.log(res.data[key])\n                var schedules = []\n                var schedCount = 0;\n                res.data[key].map(newSchedule => {\n                    this.setState({shareCode: newSchedule.shareCode}) \n                    console.log(newSchedule)\n                    var count = 0;\n                    var scheduleContent = []\n                    var tableContent = []\n                    var earliest = 9\n                    var latest = 17\n\n                    newSchedule.offerings.map(offering=>{\n                        var startTime = offering.timeslot_begin.split(':');\n                        var endTime = offering.timeslot_end.split(':');\n                        var newContent = \n                        {\n                            id: count,\n                            title: offering.course + ' ' + offering.section,\n                            section: offering.section,\n                            startDate: this.createTimeslot(offering.day,startTime[0],startTime[1]),\n                            endDate: this.createTimeslot(offering.day,endTime[0],endTime[1]),\n                            priorityId: 3,\n                            location: offering.room,\n                            professor: offering.faculty,\n                            startTime: offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3),\n                            endTime: offering.timeslot_end.substring(0, offering.timeslot_end.length - 3),\n                            days: offering.day,\n                            classCode: offering.classnumber \n                        }\n                        if(earliest > Number(startTime[0])){\n                            earliest = Number(startTime[0])\n                        }\n                        if(latest < Number(endTime[0]) + 1){\n                            latest = Number(endTime[0]) + 1\n                        }\n                        scheduleContent.push(newContent);\n                        var day = ''\n                        var classnumber = ''\n                        var course = ''\n                        var section = ''\n                        var faculty = ''\n                        var timeslot_begin = ''\n                        var timeslot_end = ''\n                        var room = ''\n                        var max_enrolled = ''\n                        var current_enrolled = ''\n\n                        day = offering.day\n                        classnumber = offering.classnumber\n                        course = offering.course\n                        section = offering.section\n                        faculty = offering.faculty\n                        timeslot_begin = offering.timeslot_begin\n                        timeslot_end = offering.timeslot_end\n                        room = offering.room\n                        max_enrolled = offering.max_enrolled\n                        current_enrolled = offering.current_enrolled\n                        var newTableContent = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n                        // tableContent.push(newTableContent)\n                        count += 1;\n                    })\n                    schedCount += 1;\n                    schedules.push({\n                        id: schedCount,\n                        title: \"Schedule \"+schedCount.toString(),\n                        scheduleContent: scheduleContent,\n                        tableContent: tableContent,\n                        prefContent: [],\n                        prefContent: newSchedule.preferences,\n                        prefFriendContent: newSchedule.friendPreferences,\n                        conflictsContent: newSchedule.information,\n                        earliest: earliest,\n                        latest: latest,\n                        offerings: newSchedule.offerings,\n                        key: key \n                    });\n                })\n                friends[key] = this.setSchedInfo(schedules);\n            })\n            console.log(friends)\n            console.log(friendKeys)\n            this.setState({friends: friends, friendKeys: friendKeys, currentContent: friends[friendKeys[0]][0], currentFriend: friendKeys[0]}, () => {\n                this.setState({success: true});\n                this.setState({loading: false});\n                this.setState({dataReceived: true});\n            })\n            this.toggleModalWait();\n        }).catch(error => {\n            console.log(error)\n            this.setState({success: false});\n            this.setState({loading: false});\n            this.toggleModalWait();\n        })\n    }\n    renderRedirect = () => {\n        return <Redirect to={'/coordinate_schedule/'+this.state.shareCode+'/'}/>\n    }\n    reload = () => {\n        window.location.reload()\n    }\n    saveCourses = () => {\n        // const priority = res.data.priority\n        // var newCourseList = []\n        // this.state.courseList.map(course =>{\n        //     if(course.id == res.data.courses){\n        //         if(priority){\n        //             var courses = this.state.highCourses;\n        //             courses.push(course.course_code)\n        //             this.setState({highCourses: courses})\n        //         }else{\n        //             var courses = this.state.lowCourses;\n        //             courses.push(course.course_code)\n        //             this.setState({lowCourses: courses})\n        //         }\n        //     }else{\n        //         newCourseList.push(course)\n        //     }\n        // })\n        // this.setState({courseList:newCourseList})\n    }\n\n    componentDidUpdate(prevProp, prevState){\n        if(prevState.generatedContents !== this.state.generatedContents){\n            this.handleScrollToGen();\n            prevState.generatedContents = this.state.generatedContents;\n        }\n       \n    }\n\n\n\n    createTimeslot = (day, hour, minute) =>{\n        if(day == 'M'){\n            return new Date(2018, 5, 25, hour, minute);\n        }else if(day == 'T'){\n            return new Date(2018, 5, 26, hour, minute);\n        }else if(day == 'W'){\n            return new Date(2018, 5, 27, hour, minute);\n        }else if(day == 'H'){\n            return new Date(2018, 5, 28, hour, minute);\n        }else if(day == 'F'){\n            return new Date(2018, 5, 29, hour, minute);\n        }else if(day == 'S'){\n            return new Date(2018, 5, 30, hour, minute);\n        }\n    }\n\n    setSchedInfo = (schedules) => {\n        var generatedContents = schedules.map((item, index) =>\n            <GenSchedInfo key={item.id} id={item.id} offerings={item.offerings} scheduleContent={item.scheduleContent} tableContent={item.tableContent} prefFriendContent={item.prefFriendContent} prefContent={item.prefContent} conflictsContent={item.conflictsContent} titleName={item.title} earliest={item.earliest} latest={item.latest} updateSchedTitle={this.updateSchedTitle}/>\n        );\n        this.setState({currentPage: 0})\n        this.setState({pagesCount: generatedContents.length});\n        // this.handleScrollToGen();\n        return generatedContents\n        // this.setState({generatedContents});\n        // this.setState({hideGenContent: false});\n        // this.setState({currentContent: generatedContents[0]})\n\n    }\n\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled, checked) {\n        return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled, checked };\n    }\n\n    updateSchedTitle=(text)=>{\n         var newArray = [];\n         const currentContent = this.state.currentContent;\n        // var index = newArray.findIndex(this.state.currentContent);\n        const newContent = <GenSchedInfo key={currentContent.props.id} earliest={currentContent.props.earliest} latest={currentContent.props.latest} id={currentContent.props.id} offerings={currentContent.props.offerings} scheduleContent={currentContent.props.scheduleContent} tableContent={currentContent.props.tableContent} prefContent={currentContent.props.prefContent} conflictsContent={currentContent.props.conflictsContent} titleName={text} updateSchedTitle={this.updateSchedTitle}/>\n\n        this.state.generatedContents.map(value=>{\n            if(value.key == this.state.currentContent.key){\n                newArray.push(newContent)\n            }else{\n                newArray.push(value)\n            }\n        })\n\n        this.setState({generatedContents: newArray});\n        this.setState({currentContent: newContent});\n    }\n    \n    handleScrollToGen=()=>{\n        // window.scrollTo({\n        //     top: this.generatedRef.current.offsetTop,\n        //     behavior: \"smooth\"\n        // })\n    }\n\n    handleSaveChange=()=>{\n        if(this.state.savedScheds.includes(this.state.currentContent.key)){\n        }else{\n            this.setState({loading: true});\n            const courseOfferings = []\n            const user_id = localStorage.getItem('user_id')\n            console.log(this.state.currentContent)\n            this.state.currentContent.props.offerings.map(offering => {\n                courseOfferings.push(offering.id)\n            })\n            axios.post('https://animosched-backend-backup.herokuapp.com/api/schedules/',{\n                title: this.state.currentContent.props.titleName,\n                courseOfferings: courseOfferings,\n                user: user_id\n            }).then(res => {\n                // axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+user_id+'/')\n                // .then(res => {\n                //     const schedules = res.data.schedules;\n                //     schedules.push(sched_id);\n                //     axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+user_id+'/',{\n                //         schedules: schedules\n                //     }).then(res => {\n                //         console.log(res)\n                        \n                //     }).catch(err => {\n                //         console.log(err.response)\n                //     })\n                // })\n            }).catch(err => {\n                console.log(err.response)\n\n            })\n            this.setState(state=>{\n                const savedScheds = state.savedScheds.concat(state.currentContent.key);\n                return {savedScheds};\n            })\n            this.setState({loading: false});\n            this.setState({saveButtonLabel: \"Saved\"});\n            const styleChange = {margin: \"30px\", backgroundColor: \"white\", color: \"#16775D\", borderStyle: \"solid\", borderColor: \"#16775D\"};\n            this.setState({saveButtonStyle: styleChange});\n            this.setState({snackBar: true});\n        }\n        \n\n    }\n\n    handleCloseSnackBar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        this.setState({snackBar: false});\n    }\n    \n    handleFilterFull = () => {\n        this.setState({filterFull: !this.state.filterFull});\n    }\n\n    handleCheckbox = (index) => {\n        this.setState(state =>{\n            const siteData  = state.siteData\n            siteData[index].checked = !siteData[index].checked\n            localStorage.setItem(siteData[index].classNmbr, siteData[index].checked)\n            return{siteData};\n        });\n        console.log(this.state.siteData[index]) \n    }\n    \n    handleAllCheckbox = () => {\n        this.setState(state =>{\n            const siteData = state.siteData\n            siteData.map(c => {\n                if(this.state.allCheckBox){\n                    c.checked = false \n                }else{\n                    c.checked = true \n                }\n                localStorage.setItem(c.classNmbr, c.checked)\n            })\n            return{siteData};\n        }, () => {\n            this.setState({allCheckBox: !this.state.allCheckBox})\n        });\n    }\n\n    handleCourseOfferingChange =(e, val)=>{\n        this.setState({courseOfferings: val});\n    }\n    \n    triggerModal=(courseName, siteData)=>{\n        this.setState({siteData})\n        this.setState({allCheckBox: false}, () => {\n            this.state.siteData.map(c => {\n                if(c.checked){\n                    this.setState({allCheckBox: true})\n                }\n            })\n        })\n        this.setState({openModalCourseOfferings: true});\n        this.setState({modalCourseName: courseName});\n    }\n\n    handleCloseModalCourseOfferings = ()=>{\n      this.setState({openModalCourseOfferings: false})\n    }\n  \n    handleOpenModalCourseOfferings = () =>{\n        this.setState({openModalCourseOfferings: true})\n    }\n  \n    toggleModal = () => {\n        var openModalVar = this.state.openModalCourseOfferings;\n        this.setState({openModalCourseOfferings: !openModalVar});\n    }\n    \n    handleSaveCourseOfferings = () =>{\n        console.log(\"Course Offerings changes saved\");\n        this.setState({openModalCourseOfferings: false});\n      } \n    \n    toggleModalWait = () => {\n        var openModalVar = this.state.openModalWait;\n        this.setState({openModalWait: !openModalVar});\n      }\n\n    onCopy = () => {\n        console.log(\"copied\")\n        this.setState({copyLabel: \"Copied!\"}, ()=>{\n            setTimeout(() => {  this.setState({copyLabel:  \"Copy link to clipboard\"}) }, 1000);\n        });\n        \n    }\n\n    handlePageChange = (e,index) => {\n        this.setState(state =>{\n            var currentContent = this.state.friends[this.state.currentFriend][index];\n            return {currentContent};\n        });\n        \n        this.setState({currentPage: index});\n        this.setState(state =>{\n            var currentPage = index;\n            return {currentPage};\n            });\n\n        this.handleScrollToGen();\n\n        if(this.state.savedScheds.includes(this.state.friends[this.state.currentFriend].key)){\n            this.setState({saveButtonLabel: \"Saved\"});\n            const styleChange = {margin: \"30px\", backgroundColor: \"white\", color: \"#16775D\"};\n            this.setState({saveButtonStyle: styleChange});\n        }else{\n            this.setState({saveButtonLabel: \"Save Schedule\"});\n            const styleChange = {margin: \"30px\", backgroundColor: \"#16775D\", color: \"white\"};\n            this.setState({saveButtonStyle: styleChange});\n        }\n    }\n\n    handleTab = (event, value) => {\n        // event.preventDefault();\n        if(this.state.currentFriend != value && value != undefined){\n            this.setState({currentFriend: value})\n            console.log(\"handle tab\")\n            console.log(value)\n            this.setState(state =>{\n                var currentContent = state.friends[value][this.state.currentPage];\n                return {currentContent};\n            });\n            this.handleScrollToGen();\n        }\n\n    }\n\n    tutorialDone = () => {\n        localStorage.setItem('stepsFriends',false)\n    }\n\n    render() { \n        let search_field = this.props.search_field;\n        // const { currentPage } = this.state;\n        const { classes } = this.props;\n        \n        const StyledTableCell = withStyles(theme => ({\n            head: {\n              backgroundColor: '#006A4E',\n              color: theme.palette.common.white,\n            },\n            body: {\n              fontSize: 14,\n              borderBottom: \"1px solid white\",\n            },\n          }))(TableCell);\n\n          const StyledTableRow = withStyles(theme => ({\n            root: {\n              '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.background.default,\n              },\n            },\n          }))(TableRow);\n            const steps = [\n            {\n                intro: 'Welcome to coordinate schedule! This is where you can find new schedules generated by the system.',\n            },\n            {\n                element: '#friendList',\n                intro: 'The generated schedules consider the preferences of the friends listed, and matched possible classes that can be taken by friends together.',\n            },\n            {\n                element: '#friendVariations',\n                intro: 'Here you can see what schedule each friend will have per schedule variation.',\n            },\n            {\n                element: '#multipleVariations',\n                intro: 'There are multiple schedule variations you can choose from.',\n                // position: 'right',\n                // tooltipClass: 'myTooltipClass',\n                // highlightClass: 'myHighlightClass',\n            },\n            {\n                element: '#save',\n                intro: 'Saving a schedule here will save it to your own saved schedules.',\n            },\n            {\n                element: '#copy',\n                intro: 'Here you can copy and share these coordinated schedules.',\n            },\n            {\n                // element: '',\n                // position: 'bottom-right-aligned',\n                intro: 'Decide on a schedule variation with your friends!',\n            },\n            ];\n        const linkShare = \"https://animosched.live/coordinate_schedule/\"+this.state.shareCode+\"/\"\n        return (\n            <div>\n\n                <div class=\"header\" style={{backgroundColor: \"#006A4E\", padding:\"10px\"}}>\n                    <a className=\"backBtn\" href=\"/view_friends\">\n                    <div className={\"backBtn\"} style={{marginTop: \"5px\"}}></div>\n                    <ArrowBackIosIcon fontSize=\"large\"className={classes.backBtn} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                    </a>\n                    <div style={{color:\"white\"}}>\n                        <center><h5 >FIRST TRIMESTER, AY 2020 - 2021</h5></center>\n                    </div>\n                    {/* <img class='img-responsive' id='lower' src={SidebarIMG}/> */}\n                </div>\n                {this.state.dataReceived ?\n                \n                <div>\n                    <Steps\n                    enabled={localStorage.getItem('stepsFriends') == 'true'}\n                    steps={steps}\n                    initialStep={0}\n                    onExit={this.tutorialDone}\n                    onComplete={this.tutorialDone}\n                    />\n\n                    <div>\n                        <Column flexGrow={1} style={{margin: \"40px\"}}>\n                            <center><h5>\n                                {/* {this.state.owner+'\\'s generated schedules: '}  */}\n                                Share with friends: \n                                <CopyToClipboard id=\"copy\" text={linkShare} onCopy={this.onCopy}>\n                                    <Button variant='outlined' startIcon={<FileCopyIcon/>} >{this.state.copyLabel}</Button>\n                                </CopyToClipboard>\n                            </h5></center>\n                <center><h6><span id=\"friendList\">\n                    Coordinated schedules of: {this.state.friendKeys.map((friend, index) => <span>{index+1 != this.state.friendKeys.length ? friend + \", \" : friend}</span>)} \n                {/* <Tooltip title=\"こんにちは！\" placement=\"bottom\">\n                    <HelpIcon />\n                </Tooltip> */}\n                </span>\n            \n                </h6>\n\n                <div style={{marginTop: \"30px\"}}>\n                <ToggleButtonGroup id=\"friendVariations\"\n                    value={this.state.currentFriend}\n                    exclusive\n                    onChange={this.handleTab}\n                    aria-label=\"text alignment\"\n                    >\n                    {this.state.friendKeys.map(friend => \n                    <ToggleButton value={friend} aria-label=\"centered\">\n                        {friend}\n                    </ToggleButton>\n                    )}\n                </ToggleButtonGroup>\n                </div>\n                </center>\n                            <div className = \"genSchedInfoContainer\" style={{margin: \"40px\"}}>\n                                <span>{this.state.currentContent}</span>\n                                {/* <FriendTable/> */}\n                            \n                                <div className = \"paginationContainer\">\n                                        \n                                    <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                                        <PaginationItem disabled={this.state.currentPage <= 0}>\n                                            <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPage - 1)}\n                                                previous/>\n                                        </PaginationItem>\n                                        {[...Array(this.state.pagesCount)].map((page, i) => \n                                            <PaginationItem id=\"multipleVariations\" active={i === this.state.currentPage} key={i} className={'paginationItemStyle'}>\n                                                <PaginationLink onClick={e => this.handlePageChange(e, i)} className={'paginationLinkStyle'}>\n                                                {i + 1}\n                                                </PaginationLink>\n                                            </PaginationItem>\n                                            )}\n                                        <PaginationItem disabled={this.state.currentPage >= this.state.friends[this.state.currentFriend].length - 1}>\n                                            <PaginationLink\n                                                onClick={e => this.handlePageChange(e, this.state.currentPage + 1)}\n                                                next\n                                            />\n                                            \n                                            </PaginationItem>\n                                    </Pagination>\n                                </div>\n                                <Row horizontal='center'>\n                                    <div className={classes.root}>\n                                            <div className={classes.wrapper}> \n                                                <Button id=\"save\"\n                                                variant=\"contained\"\n                                                className={classes.schedButton}\n                                                onClick={this.handleSaveChange}\n                                                style={this.state.saveButtonStyle}\n                                                >\n                                                {this.state.saveButtonLabel}\n                                                </Button>\n                                                {this.state.loading && <CircularProgress size={24} className={classes.buttonProgressSave}/>}\n                                            </div>\n                                            <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                                                <Alert onClose={this.handleCloseSnackBar} severity=\"success\">\n                                                    Your schedule have been successfully saved! <a href=\"/\" style={{color:\"#D3D3D3\"}}>View in homepage</a>\n                                                </Alert>\n                                            </Snackbar>\n                                        </div>\n                                    {/* <button className={\"schedButton\"} style={this.state.saveButtonStyle} onClick={this.handleSaveChange}>{this.state.saveButtonLabel}</button> */}\n                                </Row>  \n                            </div>\n                        </Column>\n                    </div>\n\n                </div>\n                : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                  <div className=\"courseInputContainer\">\n                      <Modal isOpen={!this.state.dataReceived} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" centered={true}>\n                          <ModalHeader>\n                              <center>\n                                  <br></br><p>Please wait...In the process of loading your schedules</p>\n                                  <ReactLoading type={'spin'} color={'#9BCFB8'} height={'10%'} width={'10%'}/>\n                              </center>\n                              </ModalHeader>\n                          \n                              <ModalFooter>\n                                  \n                                  <Button style={{color: \"gray\"}}>Cancel</Button>\n                              </ModalFooter>\n                          \n                      </Modal> \n                  </div>\n                </div> \n\n                }\n            </div>  \n        );\n    }\n}\n\nGenerateSchedule.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(GenerateSchedule);","import React, { Component } from \"react\";\nimport '../css/Preferences.css';\nimport axios from 'axios';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { DateTimePicker, KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardTimePicker } from \"@material-ui/pickers\";\n// import { IconButton, InputAdornment } from \"@material-ui/core\";\n// import DateFnsUtils from '@date-io/date-fns';\n\nimport { green, red } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport PropTypes from 'prop-types';\n\nimport ReactLoading from 'react-loading';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Row, Col } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    homeButton:{\n        color: \"green\", \n        marginLeft: \"10px\",\n        '&:hover': {\n            color: \"#79c879\"\n          },\n    },\n\n    iconStyle:{ \n        margin: \"10px\", \n          '&:hover': {\n            color: green[500],\n        },\n    },\n    buttonStyle:{\n        marginBottom: \"50px\",\n        textTransform: \"none\",\n        width: \"160px\",\n        borderRadius: \"25px\",\n        padding: \"10px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        backgroundColor: \"#16775D\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        marginTop: \"20px\",\n        justifyContent: 'center',\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#16775D\"\n        },\n    }\n});\n\nconst GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass Preferences extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            openModalHelp: false,\n            savedPrefBar: false,\n            earliest_class_time: '07:30',\n            latest_class_time: '21:00',\n            break_length: 15,\n            min_courses: 0, \n            max_courses: 10,\n            dataReceived: false,\n            dataSaved: false,\n            selectedProfs: [],\n            profList: [],\n            selectedSections: [],\n            sectionList: [\n                {\n                    id: 0,\n                    section_code: \"C\",\n                    college: \"College of Business\",\n                },\n                {\n                    id: 1,\n                    section_code: \"K\",\n                    college: \"College of Business\",\n                },\n                {\n                    id: 2,\n                    section_code: \"S\",\n                    college: \"College of Computer Studies\",\n                },\n                {\n                    id: 3,\n                    section_code: \"L\",\n                    college: \"College of Education\",\n                },\n                {\n                    id: 4,\n                    section_code: \"E\",\n                    college: \"College of Engineering\",\n                },\n                {\n                    id: 5,\n                    section_code: \"A\",\n                    college: \"College of Liberal Arts\",\n                },\n                {\n                    id: 6,\n                    section_code: \"N\",\n                    college: \"College of Science\",\n                },\n                {\n                    id: 11,\n                    section_code: \"M\",\n                    college: \"College of Science\",\n                },\n                {\n                    id: 8,\n                    section_code: \"M\",\n                    college: \"College of Education\",\n                },\n                {\n                    id: 7,\n                    section_code: \"V\",\n                    college: \"School of Economics\",\n                },\n                {\n                    id: 9,\n                    section_code: \"X\",\n                    college: \"STC Campus\",\n                },\n                {\n                    id: 10,\n                    section_code: \"G\",\n                    college: \"Graduate Sections\",\n                },\n            ],\n            \n            selectedDate: \"\",\n\n            daysList:[\n                {   id: 1,\n                    day_code: \"M\",\n                    day: \"Monday\",\n                    checked: false,},\n                { \n                    id: 2,\n                    day_code: \"T\",\n                    day: \"Tuesday\",\n                    checked: false,},\n                {\n                    id: 3,\n                    day_code: \"W\",\n                    day: \"Wednesday\",\n                    checked: false,},\n                {\n                    id: 4, \n                    day_code: \"H\",\n                    day: \"Thursday\",\n                    checked: false,},\n                {\n                    id: 5,\n                    day_code: \"F\",\n                    day: \"Friday\",\n                    checked: false,},\n                { \n                    id: 6,\n                    day_code: \"S\",\n                    day: \"Saturday\",\n                    checked: false,},\n\n                ],\n            \n            buildingList:[{   \n                id: 2,\n                bldg_code: \"LS\",\n                building: \"St. La Salle Hall\",\n                checked: false,},\n            { \n                id: 3,\n                bldg_code: \"Y\",\n                building: \"Enrique Yuchengco Hall\",\n                checked: false,},\n            {\n                id: 4,\n                bldg_code: \"J\",\n                building: \"St. Joseph Hall\",\n                checked: false,},\n            {\n                id: 5, \n                bldg_code: \"V\",\n                building: \"Velasco Hall\",\n                checked: false,},\n            {\n                id: 6,\n                bldg_code: \"M\",\n                building: \"St. Miguel Hall\",\n                checked: false,},\n            { \n                id: 7,\n                bldg_code: \"MU\",\n                building: \"St. Mutien Marie Hall\",\n                checked: false,},\n            {\n                id: 1,\n                bldg_code: \"GK\",\n                building: \"Gokongwei Hall\",\n                checked: false,},\n            { \n                id: 8,\n                bldg_code: \"A\",\n                building: \"Br. Andrew Gonzales Hall\",\n                checked: false,},],\n\n            \n            breakOptions: [\n                {\n                    option: \"08:00 - 09:00\",\n                    value: 15\n                },\n                {\n                    option: \"09:00 - 10:00\",\n                    value: 30\n                },\n                {\n                    option: \"10:00 - 11:00\",\n                    value: 45\n                },\n                {\n                    option: \"11:00 - 12:00\",\n                    value: 60\n                },\n                {\n                    option: \"12:00 - 13:00\",\n                    value: 120\n                },\n                {\n                    option: \"13:00 - 14:00\",\n                    value: 160\n                },\n                {\n                    option: \"14:00 - 15:00\",\n                    value: 180\n                },\n                {\n                    option: \"15:00 - 16:00\",\n                    value: 240\n                },\n                {\n                    option: \"16:00 - 17:00\",\n                    value: 300\n                },\n                {\n                    option: \"17:00 - 18:00\",\n                    value: 360\n                },\n            ]\n\n\n        }\n\n        \n    }\n\n    handleCloseModalHelp = ()=>{\n        this.setState({openModalHelp: false})\n    }\n\n    handleOpenModalHelp = ()=>{\n        this.setState({openModalHelp: true})\n    }\n\n    toggleModal = () => {\n        var openModalVar = this.state.openModalHelp;\n        this.setState({openModalHelp: !openModalVar});\n      }\n    \n    componentDidMount(){\n        const id = localStorage.getItem('user_id');\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/faculty/')\n        .then(res => {\n            res.data.map(faculty => {\n                var prof = {'id': faculty.id, 'profName': faculty.full_name} \n                this.setState(state =>{\n                    const profList = state.profList;\n                    profList.push(prof);\n                    return {profList}\n                })\n            })\n        });\n        // axios.get('https://animosched-backend-backup.herokuapp.com/api/sections/')\n        // .then(res => {\n        //     res.data.map(section => {\n        //         if(section.section_code.length == 1){\n        //             var section = {'id': section.id, 'sectionName': section.section_code + \" (All sections)\"} \n        //         }else{\n        //             var section = {'id': section.id, 'sectionName': section.section_code} \n        //         }\n        //         this.setState(state =>{\n        //             const sectionList = state.sectionList;\n        //             sectionList.push(section);\n        //             return {sectionList}\n        //         })\n        //     })\n        // });\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/preferencelist/'+id+'/')\n            .then(res => {\n                console.log(res.data)\n                res.data.map(preference =>{\n                    if(preference.earliest_class_time != null){\n                        this.setState({earliest_class_time:preference.earliest_class_time})\n                    }\n                    if(preference.latest_class_time != null){\n                        this.setState({latest_class_time:preference.latest_class_time})\n                    }\n                    if(preference.preferred_days != null){\n                        const newDaysList = [];\n                        this.state.daysList.map(day => {\n                            if(preference.preferred_days == day.id){\n                                newDaysList.push({'id':day.id, 'day_code':day.day_code, 'day':day.day, 'checked':true})\n                            }else{\n                                newDaysList.push(day);\n                            }\n                        })\n                        this.setState({daysList: newDaysList})\n                    }\n                    if(preference.break_length != null){\n                        this.setState({break_length:preference.break_length})\n                    }\n                    if(preference.min_courses != null){\n                        this.setState({min_courses:preference.min_courses})\n                    }\n                    if(preference.max_courses != null){\n                        this.setState({max_courses:preference.max_courses})\n                    }\n                    if(preference.preferred_faculty != null){\n                        const selectedProfs = this.state.selectedProfs;\n                        var prof = {'id': preference.preferred_faculty.id, 'profName': preference.preferred_faculty.full_name} \n                        selectedProfs.push(prof);\n                        this.setState({selectedProfs})\n                        const profList = [];\n                        this.state.profList.map(prof2 => {\n                            if(prof2.profName != prof.profName){\n                                profList.push(prof2);\n                            }\n                        })\n                        this.setState({profList})\n                    }\n                    if(preference.preferred_buildings != null){\n                        const newBuildingList = [];\n                        this.state.buildingList.map(bldg => {\n                            if(preference.preferred_buildings == bldg.id){\n                                newBuildingList.push({'id':bldg.id, 'bldg_code':bldg.bldg_code, 'building':bldg.building, 'checked':true})\n                            }else{\n                                newBuildingList.push(bldg);\n                            }\n                        })\n                        this.setState({buildingList: newBuildingList})\n                    }\n                    if(preference.preferred_sections != null){\n                        const selectedSections = this.state.selectedSections;\n                        var section = preference.preferred_sections \n                        const sectionList = [];\n                        this.state.sectionList.map(section2 => {\n                            if(section2.section_code == section){\n                                selectedSections.push(section2);\n                            }\n                        })\n                        this.setState({selectedSections})\n                    }\n                })\n                this.setState({dataReceived: true})\n            });\n    }\n\n    handleProfPrefChange = (e, val) =>{\n        const profList = this.state.profList\n        this.state.selectedProfs.map(prof => {\n            if(!(val.includes(prof))){\n                profList.push(prof)\n            }\n        })\n        this.setState({selectedProfs: val, profList: profList})\n    }\n\n    handleProfPrefPress = (e) => {\n        const val = this.state.selectedProfs;\n        if(e.key === 'Enter'){\n            const newProfList = [];\n\n            if(val != undefined){\n                this.state.profList.map(prof => {\n                    if(prof.id != val.id){\n                        newProfList.push(prof)\n                    }\n                })\n                this.setState({profList:newProfList})\n                console.log(e.target)\n            }\n        }\n    }\n\n    handleSectionPrefChange = (e, val) =>{\n        // const sectionList = this.state.sectionList\n        // // this.state.selectedSections.map(section => {\n        // //     // if(!(val.includes(section))){\n        // //     //     sectionList.push(section)\n        // //     // }\n        // // })\n        this.setState({selectedSections: val})\n      }\n    \n\n\n    handleSectionPrefPress = (e) => {\n        const val = this.state.selectedProfs;\n        if(e.key === 'Enter'){\n            const newProfList = [];\n\n            if(val != undefined){\n                this.state.profList.map(prof => {\n                    if(prof.id != val.id){\n                        newProfList.push(prof)\n                    }\n                })\n                this.setState({profList:newProfList})\n                console.log(e.target)\n            }\n        }\n    }\n\n    handleDateChange = (date) => {\n        this.setState({selectedDate: date})\n      };\n    \n    handleDayChange = (event) => {\n        var newDayList = [...this.state.daysList];\n        newDayList.map(value=>{\n            if(value.id === Number(event.target.id)){\n                value.checked = event.target.checked;\n            }\n        })\n        this.setState({daysList: newDayList});\n        // this.setState({[event.target.name]: event.target.checked });\n    };\n\n    handleBreakChange = (event) =>{\n        this.setState({break_length: event.target.value})\n    }\n    handleBuildingChange = (event) => {\n        var newBuildingList = [...this.state.buildingList];\n        newBuildingList.map(value=>{\n            if(value.id === Number(event.target.id)){\n                value.checked = event.target.checked;\n            }\n        })\n        this.setState({buildingList: newBuildingList});\n        // this.setState({[event.target.name]: event.target.checked });\n    };\n\n    handleEarliestChange = (event) => {\n        this.setState({earliest_class_time: event.target.value})\n        console.log(this.state)\n    }\n\n    handleLatestChange = (event) => {\n        this.setState({latest_class_time: event.target.value})\n    }\n\n    handleMinCourseChange = (event) => {\n        this.setState({min_courses: event.target.value})\n    }\n\n    handleMaxCourseChange = (event) => {\n        this.setState({max_courses: event.target.value})\n    }\n\n    handleSave = () => {\n        this.setState({dataSaved: true})\n        const id = localStorage.getItem('user_id');\n        axios.delete('https://animosched-backend-backup.herokuapp.com/api/preferencelist/'+id+'/')\n        .then(res => {\n            console.log(this.state.daysList)\n            this.state.daysList.map(day =>{\n                if(day.checked){\n                    axios.post('https://animosched-backend-backup.herokuapp.com/api/preferences/', {preferred_days: day.id, user: id},\n                    {\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    }).catch(err => {\n                        console.log(err.response)\n                    })\n                }\n            });\n            console.log(this.state.buildingList)\n            this.state.buildingList.map(bldg =>{\n                if(bldg.checked){\n                    axios.post('https://animosched-backend-backup.herokuapp.com/api/preferences/', {preferred_buildings: bldg.id, user: id},\n                    {\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    }).catch(err => {\n                        console.log(err.response)\n                    })\n                }\n            });\n            this.state.selectedProfs.map(prof =>{\n                console.log(prof)\n                axios.post('https://animosched-backend-backup.herokuapp.com/api/preferences/', {preferred_faculty: prof.id, user: id},\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).catch(err => {\n                    console.log(err.response)\n                })\n            });\n            this.state.selectedSections.map(section =>{\n                console.log(section)\n                axios.post('https://animosched-backend-backup.herokuapp.com/api/preferences/', {preferred_sections: section.section_code, user: id},\n                {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).catch(err => {\n                    console.log(err.response)\n                })\n            });\n            const data = {\n                earliest_class_time: this.state.earliest_class_time,\n                latest_class_time: this.state.latest_class_time,\n                break_length: this.state.break_length,\n                min_courses: this.state.min_courses,\n                max_courses: this.state.max_courses,\n                user: id\n            }\n            axios.post('https://animosched-backend-backup.herokuapp.com/api/preferences/', data,\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => {\n                this.setState({dataSaved: false})\n            }).catch(err => {\n                console.log(err.response)\n            })\n        }).catch(err => {\n            console.log(err.response)\n        });\n\n        this.setState({savedPrefBar: true});\n\n    }\n\n    handleCloseSaveBar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        this.setState({savedPrefBar: false});\n    }\n    \n    render() {\n        const { classes } = this.props;\n        const facultyOptions = this.state.profList.map((option) => {\n            const firstLetter = option.profName[0].toUpperCase();\n            return {\n              firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n              ...option,\n            };\n          });\n        const sectionOptions = this.state.sectionList.map((option) => {\n            const firstLetter = option.section_code.toUpperCase();\n            return {\n              firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n              ...option,\n            };\n          });\n      return (\n        <div>\n            {this.props.menu('preferences')}\n\n            {/* <HelpIcon className={classes.iconStyle} onClick={() => this.handleOpenModalHelp()}/> */}\n\n            <Modal isOpen={this.state.openModalHelp} toggle={this.toggleModal} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\">\n                <ModalHeader toggle={this.toggleModal}><h4>Preferences</h4></ModalHeader>\n                \n                <ModalBody>\n                    <p>Adding your preferences will help our system identify the schedules that best suit you among all possible schedules. Take note that this will not necessarily guarantee that all your preferences will be satisfied, as taking into account the courses you need is our upmost priority.</p>\n                </ModalBody>\n                \n            </Modal>\n\n            {/* <div class=\"prefIntro\"> */}\n                {/* <a href=\"/\"> */}\n                    {/* <HomeIcon className=\"homeIcon\" fontSize=\"large\" className={classes.homeButton}/> */}\n                    {/* <svg class=\"bi bi-house\" width=\"3em\" height=\"3em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M9.646 3.146a.5.5 0 01.708 0l6 6a.5.5 0 01.146.354v7a.5.5 0 01-.5.5h-4.5a.5.5 0 01-.5-.5v-4H9v4a.5.5 0 01-.5.5H4a.5.5 0 01-.5-.5v-7a.5.5 0 01.146-.354l6-6zM4.5 9.707V16H8v-4a.5.5 0 01.5-.5h3a.5.5 0 01.5.5v4h3.5V9.707l-5.5-5.5-5.5 5.5z\" clip-rule=\"evenodd\"></path>\n                        <path fill-rule=\"evenodd\" d=\"M15 4.5V8l-2-2V4.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5z\" clip-rule=\"evenodd\"></path>\n                    </svg> */}\n                {/* </a> */}\n\n                <Snackbar open={this.state.savedPrefBar} autoHideDuration={4000} onClose={this.handleCloseSaveBar}>\n                    <Alert onClose={this.handleCloseSaveBar} severity=\"success\">\n                    Your preferences have been successfully saved!\n                    </Alert>\n                </Snackbar>\n            {/* </div> */}\n\n            {/* <div class=\"prefIntro-main\"> */}\n                {this.state.dataReceived ? \n                // <div className=\"preference-category\">\n                <div className=\"preference-category\">\n\n                    {/* <Row xs=\"2\"> */}\n                        {/* <Col> */}\n                        <div>\n                        </div>\n                            <div className=\"timePreferences\">\n                                <h2>Time Preferences\n                                <IconButton aria-label=\"help\" onClick={() => this.handleOpenModalHelp()}>\n                                    <HelpIcon />\n                                </IconButton>\n                                </h2>\n                                <div className=\"preference-category-content\">\n                                    {/* Earliest Time\n                                    <br/> */}\n                                    \n                                    {/* <input value={this.state.earliest_class_time} type=\"time\"/><br/><br/> */}\n                                    {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n                                    \n                                        <KeyboardTimePicker\n                                            margin=\"normal\"\n                                            id=\"time-picker\"\n                                            label=\"Earliest Time\"\n                                            value={this.selectedDate}\n                                            onChange={this.handleDateChange}\n                                            KeyboardButtonProps={{\n                                                'aria-label': 'change time',\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider> */}\n                                        \n                                        {/* <KeyboardDateTimePicker\n                                            value={this.selectedDate}\n                                            onChange={this.handleDateChange}\n                                            label=\"Earliest Time\"\n                                            // onError={console.log}\n                                            // minDate={new Date(\"2020-01-01T00:00\")}\n                                            format=\"hh:mm a\"\n                                        /> */}\n                                    \n                                    <Row xs=\"2\">\n                                        <Col>\n                                            <form className={\"timeContainer\"} noValidate>\n                                                <TextField\n                                                    id=\"time\"\n                                                    label=\"No Classes Before\"\n                                                    type=\"time\"\n                                                    value={this.state.earliest_class_time}\n                                                    className={\"earliestTimeField\"}\n                                                    onChange={this.handleEarliestChange}\n                                                    InputLabelProps={{\n                                                    shrink: true,\n                                                    }}\n                                                    inputProps={{\n                                                    step: 900, // 5 min\n                                                    }}\n                                                    style={{width: 200}}\n                                                />\n                                            </form>\n                                        </Col>\n\n                                        <Col>\n                                            {/* Latest Time\n                                            <br/>\n                                            <input value={this.state.latest_class_time} type=\"time\"/><br/><br/> */}\n                                            \n                                            <form className={\"timeContainer\"} noValidate>\n                                                <TextField\n                                                    id=\"time\"\n                                                    label=\"No Classes After\"\n                                                    type=\"time\"\n                                                    value={this.state.latest_class_time}\n                                                    className={\"lastestTimeField\"}\n                                                    onChange={this.handleLatestChange}\n                                                    InputLabelProps={{\n                                                    shrink: true,\n                                                    }}\n                                                    inputProps={{\n                                                    step: 300, // 5 min\n                                                    }}\n                                                    style={{width: 200}}\n                                                />\n                                            </form>\n                                        </Col>\n                                    </Row>\n\n                                    <br/>\n                                    <div className={'days-preference'}>\n                                        <div className={'subheader'}>Preferred Days</div>\n                                        <FormGroup row>\n                                            <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.daysList[0].checked} onChange={this.handleDayChange} id={this.state.daysList[0].id} color=\"primary\"/>}label=\"M\" />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.daysList[1].checked} onChange={this.handleDayChange} id={this.state.daysList[1].id} color=\"primary\"/>}label=\"T\" />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.daysList[2].checked} onChange={this.handleDayChange} id={this.state.daysList[2].id} color=\"primary\"/>}label=\"W\" />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.daysList[3].checked} onChange={this.handleDayChange} id={this.state.daysList[3].id} color=\"primary\"/>}label=\"H\" />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.daysList[4].checked} onChange={this.handleDayChange} id={this.state.daysList[4].id} color=\"primary\"/>}label=\"F\" />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.daysList[5].checked} onChange={this.handleDayChange} id={this.state.daysList[5].id} color=\"primary\"/>}label=\"S\" />\n                                        </FormGroup>\n                                    </div>\n                                    <br/>\n\n                                    {/* Break Length */}\n                                    <div className={'break-preference'}>\n                                        <TextField\n                                            id=\"outlined-select-break\"\n                                            select\n                                            label=\"Preferred Break Time\"\n                                            onChange={this.handleBreakChange}\n                                            value = {this.state.break_length == null ? 120 : this.state.break_length}\n                                            helperText=\"Please select your preferred break time\"\n                                            variant=\"outlined\"\n                                            autoWidth= {true}\n                                            >\n                                            \n                                            {this.state.breakOptions.map((option) => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                {option.option}\n                                                </MenuItem>\n                                                    ))}\n                                        </TextField>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n\n                            <div className=\"workloadPreferences\">\n                                <h2>Workload Preferences\n                                <IconButton aria-label=\"help\" onClick={() => this.handleOpenModalHelp()}>\n                                    <HelpIcon />\n                                </IconButton>\n                                </h2>\n                                \n                                <div className=\"preference-category-content\">\n                                    {/* Minimum Courses per Day */}\n                                    <br/>\n                                    {/* <input type = \"number\" /><br/><br/> */}\n\n                                    <Row xs=\"2\">\n\n                                        <Col>\n                                            <TextField\n                                                className={'workload-field'}\n                                                id=\"min-courses\"\n                                                value={this.state.min_courses}\n                                                label=\"Minimum Courses per Day\"\n                                                onChange={this.handleMinCourseChange}\n                                                type=\"number\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                placeholder=\"0\"\n                                                size=\"medium\"\n                                                inputProps={{\n                                                    min: 0,\n                                                    max: 10,\n                                                }}\n                                            />\n                                        </Col>\n\n                                        <Col>\n                                            {/* <input type = \"number\" value={this.state.max_courses}/><br/><br/> */}\n                                            <TextField\n                                                className={'workload-field'}\n                                                id=\"max-courses\"\n                                                value={this.state.max_courses}\n                                                label=\"Maximum Courses per Day\"\n                                                onChange={this.handleMaxCourseChange}\n                                                type=\"number\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                placeholder=\"0\"\n                                                inputProps={{\n                                                    min: 0,\n                                                    max: 10,\n                                                }}\n                                            />\n                                        </Col>\n\n                                    </Row>\n\n                                    {/* <br/> */}\n                                    {/* Maximum Courses per Day */}\n                                    {/* <br/> */}\n                                    \n                                </div>\n                            </div>\n                        {/* </Col> */}\n\n                        {/* <Col>\n                            \n                        </Col> */}\n\n                        {/* <Col> */}\n                            <div className=\"classDetails\">\n                                <h2>Class Details\n                                <IconButton aria-label=\"help\" onClick={() => this.handleOpenModalHelp()}>\n                                    <HelpIcon />\n                                </IconButton>\n                                </h2>\n                                \n                                <div className=\"preference-category-content\">\n                                    <div className=\"professor-preference\">\n                                        <div className={'subheader'}>Faculty Preferences</div>\n                                        <Autocomplete\n                                            multiple\n                                            id=\"tags-outlined\"\n                                            options={facultyOptions.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                                            defaultValue={this.state.selectedProfs}\n                                            groupBy={(option) => option.firstLetter}\n                                            getOptionLabel={option => option.profName}\n                                            //   style={{ width: 500 }}\n                                            filterSelectedOptions\n                                            renderInput={params => <TextField {...params} variant=\"outlined\" />}\n                                            // renderInput={params => <TextField {...params} label=\"Faculty Preferences\" variant=\"outlined\" />}\n                                            onChange={this.handleProfPrefChange}\n                                            // onKeyPress={this.handleProfPrefress}\n                                            />\n                                    </div>\n\n\n                                \n                                    <div className={'building-preference'}>\n                                        <div className={'subheader'}>Building Preferences</div>\n                                        <Grid container spacing={6}>\n                                            <Grid item xs={6}>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.buildingList[0].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[0].id}  color=\"primary\"/>}label={this.state.buildingList[0].building} />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.buildingList[1].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[1].id} color=\"primary\"/>}label={this.state.buildingList[1].building} />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.buildingList[2].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[2].id} color=\"primary\"/>}label={this.state.buildingList[2].building}/>\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.buildingList[3].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[3].id} color=\"primary\"/>}label={this.state.buildingList[3].building} />\n                                            </FormGroup>\n                                            </Grid>\n\n                                            <Grid item xs={6}>\n                                            <FormGroup>\n                                            <FormControlLabel\n                                            control = {<GreenCheckbox checked={this.state.buildingList[4].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[4].id} color=\"primary\"/>}label={this.state.buildingList[4].building}/>\n                                            <FormControlLabel\n                                            control = {<GreenCheckbox checked={this.state.buildingList[5].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[5].id} color=\"primary\"/>}label={this.state.buildingList[5].building} />\n                                                <FormControlLabel\n                                            control = {<GreenCheckbox checked={this.state.buildingList[6].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[6].id} color=\"primary\"/>}label={this.state.buildingList[6].building}/>\n                                            <FormControlLabel\n                                            control = {<GreenCheckbox checked={this.state.buildingList[7].checked} onChange={this.handleBuildingChange} id={this.state.buildingList[7].id} color=\"primary\"/>}label={this.state.buildingList[7].building} />\n                                            </FormGroup>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                \n                                    {/* <FormGroup>\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[0].checked} onChange={this.handleBuildingChange} id = '1' color=\"primary\"/>}label={this.state.buildingList[0].building} />\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[1].checked} onChange={this.handleBuildingChange} id = '2' color=\"primary\"/>}label={this.state.buildingList[1].building} />\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[2].checked} onChange={this.handleBuildingChange} id = '3' color=\"primary\"/>}label={this.state.buildingList[2].building}/>\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[3].checked} onChange={this.handleBuildingChange} id = '4' color=\"primary\"/>}label={this.state.buildingList[3].building} />\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[4].checked} onChange={this.handleBuildingChange} id = '5' color=\"primary\"/>}label={this.state.buildingList[4].building}/>\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[5].checked} onChange={this.handleBuildingChange} id = '6' color=\"primary\"/>}label={this.state.buildingList[5].building} />\n                                            <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[6].checked} onChange={this.handleBuildingChange} id = '7' color=\"primary\"/>}label={this.state.buildingList[6].building}/>\n                                        <FormControlLabel\n                                        control = {<Checkbox checked={this.state.buildingList[7].checked} onChange={this.handleBuildingChange} id = '8' color=\"primary\"/>}label={this.state.buildingList[7].building} />\n                                                \n                                    </FormGroup> */}\n                                        \n                                    {/* <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> St. La Salle Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> Enrique Yuchengco Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> St. Joseph Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> Velasco Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> St. Miguel Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> St. Mutien Marie Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> Gokongwei Hall </label><br/>\n\n                                    <input className=\"checkbox-description\" type=\"checkbox\" id=\"\" name=\"\" value=\"\"/>\n                                    <label className=\"checkbox-description\" for=\"\"> Br. Andrew Gonzales Hall </label><br/><br/> */}\n\n                                    <div className=\"section-preference\">\n                                        <div className={'subheader'}>Section Preferences</div>\n                                          <Autocomplete\n                                            multiple\n                                            id=\"tags-outlined\"\n                                            options={this.state.sectionList}\n                                            // options={sectionOptions.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                                            defaultValue={this.state.selectedSections}\n                                            groupBy={(option) => option.college}\n                                            getOptionLabel={option => option.section_code}\n                                            //   style={{ width: 500 }}\n                                            filterSelectedOptions\n                                            renderInput={params => <TextField {...params} variant=\"outlined\" />}\n                                            // renderInput={params => <TextField {...params} label=\"Section Preferences\" variant=\"outlined\" />}\n                                            onChange={this.handleSectionPrefChange}\n                                            // onKeyPress={this.handleSectionPrefress}\n                                          />\n                                    </div>\n                                </div>\n                            </div>\n                        {/* </Col> */}\n\n                    {/* </Row> */}\n\n                </div>\n                : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"90vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                </div> }\n            {/* </div> */}\n\n            {this.state.dataSaved ?\n                \n                // <center><button onClick={this.handleSave} class=\"savePrefBtn\" disabled>Save Preferences</button></center>\n                <center><Button\n                    variant=\"contained\"\n                    className={classes.buttonStyle}\n                    onClick={this.handleSave}\n                    disabled>\n                    Save Preferences\n                </Button></center>\n                :\n                // <center><button onClick={this.handleSave} class=\"savePrefBtn\">Save Preferences</button></center>\n                <center><Button\n                    variant=\"contained\"\n                    className={classes.buttonStyle}\n                    onClick={this.handleSave}\n                    >\n                    Save Preferences\n                </Button></center>\n            }\n\n        </div>        \n      );\n    }\n  }\n\n  Preferences.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles)(Preferences);","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport '../css/SearchCourses.css';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ComboBox from '../components/ComboBox.jsx';\nimport axios from 'axios';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport groupArray from 'group-array';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport ReactLoading from 'react-loading';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport searchIMG from '../assets/search_engine.png';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    \n  },\n  wrapper: {\n    // margin: theme.spacing(1),\n    position: 'relative',\n    \n\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n    paddingTop: '5px',\n    paddingBottom: '5px',\n  },\n});\n\nconst GreenRadio = withStyles({\n  root: {\n    '&$checked': {\n      color: green[600],\n    },\n    // '&label': {\n    //   color: green[600],\n    // }\n  },\n  checked: {},\n  // label: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    // color: green[600],\n    '&$checked': {\n      color: green[600],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[600],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nclass SearchCourses extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        fields: {},\n        database: [],\n        siteData: [],\n        allSiteData: [],\n        selectedCourses: [],\n        loading: false,\n        radioVal: 'all',\n        dataReceived: false,\n        skeletons: [...Array(8).keys()],\n        rowStyle: \"\",\n        openModalCourseInfo: false,\n        showPlaceholder: true,\n        applyPreference: false,\n        noResults: false,\n        testGroupedData: [],\n        courseInfo: {}\n      }\n      this.radioRef = React.createRef()\n    }\n\n    componentDidMount(){\n        // axios.get('https://animosched-backend-backup.herokuapp.com/api/courses/')\n        // .then(res => {\n        //     res.data.map(course => {\n        //         var courses = this.state.courseList;\n        //         courses.push({'id':course.id, 'course_code':course.course_code})\n        //         this.setState({courseList: courses, dataReceived: true})\n        //     })\n        // })\n        var selectedCourses = JSON.parse(localStorage.getItem('selectedCourses'))\n        // console.log(selectedCourses)\n        if(selectedCourses != null){\n          this.setState({selectedCourses})\n        }\n        this.setState({dataReceived: true})\n    }\n\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n      return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n    }\n\n    handleChange = (field, e) => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({fields});\n    }\n\n    setFilter = () => {\n      let option = this.state.radioVal;\n      let filteredList = [];\n\n      if(option == \"all\"){\n        // console.log(\"all\");\n        filteredList = this.state.allSiteData;\n\n        // start of grouping\n        const togroupdata = filteredList;\n\n        const groupedSiteData = togroupdata.reduce((coursesSoFar, { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled }) => {\n          if(!coursesSoFar[course])\n            coursesSoFar[course] = [];\n          \n          coursesSoFar[course].push({ classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled });\n\n          return coursesSoFar;\n        }, {});\n\n\n        // const newGroupTest = [];\n        // for(var i=0; i < this.state.selectedCourses.length; i++){\n\n        //   newGroupTest.push([]);\n\n        //   for(var j=0; j < 3; j++){\n        //     newGroupTest[i].push(j);\n        //   }\n        // }\n\n        // end of grouping\n\n        this.setState({siteData: filteredList, testGroupedData: groupedSiteData},() => {\n        });\n\n        // console.log(filteredList);\n      }\n      else if(option == \"open\"){\n        // console.log(\"open\");\n\n        var i;\n        for(i = 0; i < this.state.allSiteData.length; i++) {\n          if(this.state.allSiteData[i].enrolled < this.state.allSiteData[i].capacity){\n            // console.log(this.state.database[i]);\n            filteredList.push(this.state.allSiteData[i]);\n          }\n        }\n\n        // start of grouping\n        const togroupdata = filteredList;\n\n        const groupedSiteData = togroupdata.reduce((coursesSoFar, { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled }) => {\n          if(!coursesSoFar[course])\n            coursesSoFar[course] = [];\n          \n          coursesSoFar[course].push({ classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled });\n\n          return coursesSoFar;\n        }, {});\n\n        console.log(\"GROUPED IN OPEN\");\n        console.log(groupedSiteData);\n        // end of grouping\n\n\n        this.setState({siteData: filteredList, testGroupedData: groupedSiteData});\n\n        // console.log(filteredList);\n      }\n      else{\n        // console.log(\"closed\");\n\n        var i;\n        for(i = 0; i < this.state.allSiteData.length; i++) {\n          if(this.state.allSiteData[i].enrolled >= this.state.allSiteData[i].capacity){\n            // console.log(this.state.database[i]);\n            filteredList.push(this.state.allSiteData[i]);\n          }\n        }\n\n        // console.log(filteredList);\n\n        // start of grouping\n        const togroupdata = filteredList;\n\n        const groupedSiteData = togroupdata.reduce((coursesSoFar, { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled }) => {\n          if(!coursesSoFar[course])\n            coursesSoFar[course] = [];\n          \n          coursesSoFar[course].push({ classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled });\n\n          return coursesSoFar;\n        }, {});\n\n        console.log(\"GROUPED IN CLOSED\");\n        console.log(groupedSiteData);\n        // end of grouping\n\n        this.setState({siteData: filteredList, testGroupedData: groupedSiteData});\n      }\n    }\n\n    handleFilter = (field, e) => {\n      this.setState({radioVal: e.target.value}, () => {\n        this.setFilter()\n      })\n    }\n\n    searchCourses = () =>{\n      //start loading\n\n      if(this.state.selectedCourses.length > 0){\n        this.setState({siteData: []})\n        this.setState({showPlaceholder: false},()=>{\n          this.setState({loading: true});\n        });\n      }\n      \n      const selectedCourses = []\n      this.state.selectedCourses.map(course => {\n        selectedCourses.push(course.id)\n        const courseInfo = this.state.courseInfo\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/courseinfo/'+course.id).then(res => {\n          courseInfo[course.course_code] = res.data\n          this.setState({courseInfo})\n        })\n      })\n\n      axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n        courses: selectedCourses,\n        applyPreference: this.state.applyPreference,\n        user_id: localStorage.getItem('user_id')\n      })\n      .then(res => {\n          const newSiteData = [];\n          // console.log(res.data)\n          res.data.map(bundle => {\n            var arranged = groupArray(bundle, 'classnumber');\n            // console.log(arranged)\n            for (let key in arranged) {\n              // console.log(key, arranged[key]);\n              var days = []\n              var day = ''\n              var classnumber = ''\n              var course = ''\n              var section = ''\n              var faculty = ''\n              var timeslot_begin = ''\n              var timeslot_end = ''\n              var room = ''\n              var max_enrolled = ''\n              var current_enrolled = ''\n              arranged[key].map(offering => {\n                days.push(offering.day)\n                classnumber = offering.classnumber\n                course = offering.course\n                section = offering.section\n                faculty = offering.faculty\n                timeslot_begin = offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3)\n                timeslot_end = offering.timeslot_end.substring(0, offering.timeslot_end.length - 3)\n                room = offering.room\n                max_enrolled = offering.max_enrolled\n                current_enrolled = offering.current_enrolled\n              })\n              days.map(day_code => {\n                day += day_code;\n              })\n              const offering = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n              newSiteData.push(offering);\n            }\n          })\n\n        this.setState({siteData: newSiteData, allSiteData: newSiteData},() => {\n          console.log(this.state.siteData);\n          this.setFilter();\n          this.setState({loading: false});\n        })\n\n        //Finish Loading\n      }).catch(err => {\n        console.log(err.response)\n      })\n    }\n\n    handleSearch = (e, val) =>{\n      this.state.selectedCourses = val;\n      localStorage.setItem('selectedCourses', JSON.stringify(val))\n    }\n    \n    handleSearchPress = (e) => {\n        const val = this.state.currentCourse;\n        if(e.key === 'Enter'){\n          this.searchCourses()\n        }\n    }\n\n    // handleKeyPress = () => {\n      // if(target.charCode==13) {\n        // console.log(\"Test?\")\n      // }  \n    // }\n\n    handleClick = (id, column) => {\n      return (event) => {\n        console.log(`You clicked on row with id ${id}, in column ${column}.`);\n      }\n    }\n\n    handleCloseModalCourseInfo = ()=>{\n      this.setState({openModalCourseInfo: false})\n    }\n  \n    handleOpenModalCourseInfo = (courseCode, courseName, courseUnits)=>{\n      this.setState({courseCode, courseName, courseUnits}, () => {\n        console.log(this.state.courseInfo[this.state.courseCode]['course_code'])\n      })\n      this.setState({openModalCourseInfo: true})\n    }\n\n    handleApplyPreference = () => {\n      this.setState({applyPreference: !this.state.applyPreference})\n    }\n  \n    toggleModal = () => {\n      var openModalVar = this.state.openModalCourseInfo;\n      this.setState({openModalCourseInfo: !openModalVar});\n    }\n\n    render() {\n      const { classes } = this.props;\n\n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 14,\n          borderBottom: \"1px solid white\",\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n          \"&:hover\": {\n            backgroundColor: \"#efefef\"\n          },\n        },\n      }))(TableRow);\n      \n      const loadedData = (index) => {\n        // console.log(this.state.testGroupedData[index])\n        // console.log(typeof(this.state.testGroupedData[index]))\n        // console.log(index)\n        // console.log(this.state.testGroupedData[index])\n        // console.log(this.state.testGroupedData[index][0])\n          if(this.state.siteData.length > 0 && this.state.testGroupedData[index] != undefined){\n            // console.log(this.state.testGroupedData[index])\n        // console.log(this.state.testGroupedData[index][0])\n            return(\n            <TableBody>\n              {this.state.testGroupedData[index].map(row => (\n                <Tooltip title=\"More Details\" placement=\"bottom\">\n                  <StyledTableRow key={row.classNmbr} onClick={() => this.handleOpenModalCourseInfo(row.course, \"\", \"3\")} style={{cursor: \"pointer\"}}>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.classNmbr} </StyledTableCell>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.course} </StyledTableCell>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.section} </StyledTableCell>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.faculty} </StyledTableCell>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.day} </StyledTableCell>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.startTime} - {row.endTime} </StyledTableCell>\n                    <StyledTableCell style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.room} </StyledTableCell>\n                    <StyledTableCell align=\"right\" style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.capacity} </StyledTableCell>\n                    <StyledTableCell align=\"right\" style={(row.capacity <= row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.enrolled} </StyledTableCell>\n                  </StyledTableRow>\n                </Tooltip>\n              ))}\n            </TableBody>\n            )\n          }else{\n            return(\n            <TableBody>\n              <StyledTableRow>\n                <StyledTableCell colSpan={9}>\n                  <center><p>\n                    No available course offerings.\n                  </p></center>\n                </StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n            )\n        }\n\n      };\n\n      return (\n          <div>\n            {this.props.menu('search_courses')}\n\n            {this.state.dataReceived ? \n            <div className=\"search-container\">\n\n                <div className=\"searchBar\">\n                  <h2>Search all your courses in one go!</h2>\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                    {/* <ComboBox style={{width: \"-webkit-fill-available\"}} page=\"search\" onChange={this.handleSearch}/> */}\n                      <div className=\"barArea\"><ComboBox style={{width: \"-webkit-fill-available\"}} page=\"search\" onChange={this.handleSearch} onKeyPress={this.handleSearchPress} defaultValue={this.state.selectedCourses}/></div>\n                      <div className={classes.root}>\n                          <div className={classes.wrapper} >\n                            <Button\n                                  variant=\"contained\"\n                                  color=\"Primary\"\n                                  disabled={this.state.loading}\n                                  style={{backgroundColor: \"green\", color:\"white\", height:\"55px\"}}\n                                  onClick={this.searchCourses}>\n                                  <SearchIcon/>  \n                            </Button>\n                            {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                          </div>\n                      </div>                    \n                    </div>\n                </div>                \n\n                <div className=\"filters\">\n                    <center>\n                      {/* <span className=\"filterLabel\">Filters:</span> */}\n                  <FormControl component=\"fieldset\">\n                    <RadioGroup ref={this.radioRef} row aria-label=\"filter\" name=\"filter\" onChange={this.handleFilter.bind(this, \"filter\")} value={this.state.radioVal}>\n                      <FormControlLabel value=\"all\" control={<GreenRadio />} label=\"All Sections\" />\n                      <FormControlLabel value=\"open\" control={<GreenRadio />} label=\"Open Sections\" />\n                      <FormControlLabel value=\"closed\" control={<GreenRadio />} label=\"Closed Sections\" />\n                    </RadioGroup>\n                  </FormControl>\n                    </center>\n                </div>\n                <div>\n                    <center>\n                      {/* <span className=\"filterLabel\">Filters:</span> */}\n                  <FormControl component=\"fieldset\">\n                    <FormControlLabel value=\"closed\" control={\n                      <GreenSwitch\n                      checked={this.state.applyPreference}\n                      onChange={this.handleApplyPreference}\n                      color=\"primary\"\n                      name=\"checkedB\"\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                      />\n                    } label=\"Apply Preferences\" />\n                  </FormControl>\n                    </center>\n                </div>\n                <div className=\"legend\">\n                    <div className=\"legendItems\">\n                        <center>\n                            <div>Open Sections - <Paper style={{backgroundColor:\"#006600\", height: \"15px\", width: \"15px\", display: \"inline-flex\"}}> </Paper> Green</div> \n                       </center>\n                    </div>\n                  \n                    <div className=\"legendItems\">\n                        <center>\n                            <div>Closed Sections - <Paper style={{backgroundColor:  \"#0099CC\", height: \"15px\", width: \"15px\", display: \"inline-flex\"}}> </Paper> Blue</div>\n                        </center>\n                    </div>\n                </div>\n                \n                {/* start of table */}\n                <div className=\"viewCourses\" style={!this.state.showPlaceholder ? {} : {display: \"none\"}}>\n                  <TableContainer>\n\n                    {this.state.selectedCourses.map(index => (\n                      <Table aria-label=\"customized table\" style={{marginBottom: 25}} component={Paper}>\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell> Class Number </StyledTableCell>\n                            <StyledTableCell> Course </StyledTableCell>\n                            <StyledTableCell> Section </StyledTableCell>\n                            <StyledTableCell> Faculty </StyledTableCell>\n                            <StyledTableCell> Day </StyledTableCell>\n                            <StyledTableCell> Time </StyledTableCell>\n                            <StyledTableCell> Room </StyledTableCell>\n                            <StyledTableCell> Capacity </StyledTableCell>\n                            <StyledTableCell> Enrolled </StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        {this.state.loading ? \n                        <TableBody>\n                            {this.state.skeletons.map(skeleton =>(\n                              <StyledTableRow>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                        </TableBody>\n                        : \n                        loadedData(index.course_code)\n                        }\n                      </Table>\n                    ))}\n\n                    {/* <Table aria-label=\"customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell> Class Number </StyledTableCell>\n                          <StyledTableCell> Course </StyledTableCell>\n                          <StyledTableCell> Section </StyledTableCell>\n                          <StyledTableCell> Faculty </StyledTableCell>\n                          <StyledTableCell> Day </StyledTableCell>\n                          <StyledTableCell> Time </StyledTableCell>\n                          <StyledTableCell> Room </StyledTableCell>\n                          <StyledTableCell> Capacity </StyledTableCell>\n                          <StyledTableCell> Enrolled </StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                        {this.state.loading ? \n                        <TableBody>\n                            {this.state.skeletons.map(skeleton =>(\n                              <StyledTableRow>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                                <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                        </TableBody>\n                        : \n                        loadedData()\n                        }\n                      </Table> */}\n                    </TableContainer>\n\n                    {this.state.openModalCourseInfo ?\n                    <Modal isOpen={this.state.openModalCourseInfo} toggle={this.toggleModal} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\">\n                        <ModalHeader toggle={this.toggleModal}><h4>Course Information</h4></ModalHeader>\n                        \n                        <ModalBody>\n                          <h4>{this.state.courseInfo[this.state.courseCode]['course_code']}</h4>\n                          <h5>{this.state.courseInfo[this.state.courseCode]['course_name']}</h5>\n                          <br/>\n\n                          <u><h5>Description</h5></u>\n                          <p>{this.state.courseInfo[this.state.courseCode]['course_desc']}</p>\n                          <br/>\n\n                          <u><h5>Pre-requisite/s</h5></u>\n                          <p>{this.state.courseInfo[this.state.courseCode]['prerequisite_to'].toString()}</p>\n                          <p>{this.state.courseInfo[this.state.courseCode]['soft_prerequisite_to'].toString()}</p>\n                          <br/>\n\n                          <u><h5>Co-requisite/s</h5></u>\n                          <p>{this.state.courseInfo[this.state.courseCode]['co_requisite'].toString()}</p>\n                          <br/>\n\n                          {/* <u><h5>Course Equivalent</h5></u>\n                          <p>{this.state.courseEq}</p>\n                          <br/> */}\n\n                          <u><h5>Number of Units</h5></u>\n                          <p>{this.state.courseInfo[this.state.courseCode]['units']}</p>\n                        </ModalBody>\n                        \n                    </Modal> \n                    : null}\n                  </div>                  \n                \n                <div className={\"noContent\"} style={this.state.showPlaceholder ? {} : {display: \"none\"}}>\n                  <center><img style={{width:\"30%\"}} src={searchIMG}/></center>\n                </div>\n\n            </div>\n                     \n            : \n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n              <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n            </div> }\n        </div>        \n      );\n    }\n  }\n\n  SearchCourses.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(SearchCourses);","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport '../css/SearchCourses.css';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ComboBox from '../components/ComboBox.jsx';\nimport axios from 'axios';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport groupArray from 'group-array';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport ReactLoading from 'react-loading';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport searchIMG from '../assets/search_engine.png';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    \n  },\n  wrapper: {\n    // margin: theme.spacing(1),\n    position: 'relative',\n    \n\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n    paddingTop: '5px',\n    paddingBottom: '5px',\n  },\n});\n\nconst GreenRadio = withStyles({\n  root: {\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    // color: green[600],\n    '&$checked': {\n      color: green[600],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[600],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nclass SearchCourses extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        fields: {},\n        database: [],\n        siteData: [],\n        allSiteData: [],\n        selectedCourses: [],\n        loading: false,\n        radioVal: 'all',\n        dataReceived: false,\n        skeletons: [...Array(8).keys()],\n        rowStyle: \"\",\n        openModalCourseInfo: false,\n        showPlaceholder: true,\n        applyPreference: false\n      }\n      this.radioRef = React.createRef()\n    }\n\n    componentDidMount(){\n        // axios.get('https://animosched-backend-backup.herokuapp.com/api/courses/')\n        // .then(res => {\n        //     res.data.map(course => {\n        //         var courses = this.state.courseList;\n        //         courses.push({'id':course.id, 'course_code':course.course_code})\n        //         this.setState({courseList: courses, dataReceived: true})\n        //     })\n        // })\n        this.setState({dataReceived: true})\n    }\n\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n      return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n    }\n\n    handleChange = (field, e) => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({fields});\n    }\n\n    setFilter = () => {\n      let option = this.state.radioVal;\n      let filteredList = [];\n\n      if(option == \"all\"){\n        console.log(\"all\");\n        filteredList = this.state.allSiteData;\n\n        this.setState({siteData: filteredList});\n\n        console.log(filteredList);\n      }\n      else if(option == \"open\"){\n        console.log(\"open\");\n\n        var i;\n        for(i = 0; i < this.state.allSiteData.length; i++) {\n          if(this.state.allSiteData[i].enrolled < this.state.allSiteData[i].capacity){\n            // console.log(this.state.database[i]);\n            filteredList.push(this.state.allSiteData[i]);\n          }\n        }\n\n        this.setState({siteData: filteredList});\n\n        console.log(filteredList);\n      }\n      else{\n        console.log(\"closed\");\n\n        var i;\n        for(i = 0; i < this.state.allSiteData.length; i++) {\n          if(this.state.allSiteData[i].enrolled >= this.state.allSiteData[i].capacity){\n            // console.log(this.state.database[i]);\n            filteredList.push(this.state.allSiteData[i]);\n          }\n        }\n\n        this.setState({siteData: filteredList});\n\n        console.log(filteredList);\n      }\n    }\n\n    handleFilter = (field, e) => {\n      this.setState({radioVal: e.target.value}, () => {\n        this.setFilter()\n      })\n    }\n\n    searchCourses = () =>{\n      //start loading\n\n      if(this.state.selectedCourses.length > 0){\n        this.setState({siteData: []})\n        this.setState({showPlaceholder: false},()=>{\n          this.setState({loading: true});\n        });\n      }\n\n      const selectedCourses = []\n      this.state.selectedCourses.map(course => {\n        selectedCourses.push(course.id)\n      })\n     \n      axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n        courses: selectedCourses,\n        applyPreference: this.state.applyPreference,\n        user_id: localStorage.getItem('user_id')\n      })\n      .then(res => {\n          const newSiteData = [];\n          console.log(res.data)\n          res.data.map(bundle => {\n            var arranged = groupArray(bundle, 'classnumber');\n            console.log(arranged)\n            for (let key in arranged) {\n              console.log(key, arranged[key]);\n              var days = []\n              var day = ''\n              var classnumber = ''\n              var course = ''\n              var section = ''\n              var faculty = ''\n              var timeslot_begin = ''\n              var timeslot_end = ''\n              var room = ''\n              var max_enrolled = ''\n              var current_enrolled = ''\n              arranged[key].map(offering => {\n                days.push(offering.day)\n                classnumber = offering.classnumber\n                course = offering.course\n                section = offering.section\n                faculty = offering.faculty\n                timeslot_begin = offering.timeslot_begin\n                timeslot_end = offering.timeslot_end\n                room = offering.room\n                max_enrolled = offering.max_enrolled\n                current_enrolled = offering.current_enrolled\n              })\n              days.map(day_code => {\n                day += day_code;\n              })\n              const offering = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n              newSiteData.push(offering);\n            }\n          })\n        this.setState({siteData: newSiteData, allSiteData: newSiteData},() => {\n          this.setFilter()\n          this.setState({loading: false});\n        })\n        //Finish Loading\n      }).catch(err => {\n        console.log(err.response)\n      })\n    }\n\n    handleSearch = (e, val) =>{\n      this.setState({selectedCourses: val})\n    }\n\n    handleClick = (id, column) => {\n      return (event) => {\n        console.log(`You clicked on row with id ${id}, in column ${column}.`);\n      }\n    }\n\n    handleCloseModalCourseInfo = ()=>{\n      this.setState({openModalCourseInfo: false})\n    }\n  \n    handleOpenModalCourseInfo = (courseCode, courseName, courseUnits)=>{\n      courseName = \"Lorem ipsum\"\n      var courseDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n      var coursePre = \"N/A\"\n      var courseCo = \"N/A\"\n      var courseEq = \"N/A\"\n      this.setState({courseCode, courseName, courseUnits})\n      this.setState({courseDesc, coursePre, courseCo, courseEq})\n      this.setState({openModalCourseInfo: true})\n    }\n\n    handleApplyPreference = () => {\n      this.setState({applyPreference: !this.state.applyPreference})\n    }\n  \n    toggleModal = () => {\n      var openModalVar = this.state.openModalCourseInfo;\n      this.setState({openModalCourseInfo: !openModalVar});\n    }\n\n    render() {\n      const { classes } = this.props;\n\n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 14,\n          borderBottom: \"1px solid white\",\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n        },\n      }))(TableRow);\n\n      return (\n          <div>\n            {this.props.menu('search_courses')}\n\n            {this.state.dataReceived ? \n            <div className=\"search-container\">\n\n                <div className=\"searchBar\">\n                  <h2>Search Course Offerings</h2>\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                      <ComboBox style={{width: \"-webkit-fill-available\"}} page=\"search_simple\" onChange={this.handleSearch}/>\n                      <div className={classes.root}>\n                          <div className={classes.wrapper} >\n                            <Button\n                                  variant=\"contained\"\n                                  color = \"Primary\"\n                                  disabled={this.state.loading}\n                                  style={{backgroundColor: \"green\", color:\"white\", height:\"55px\"}}\n                                  onClick={this.searchCourses}>\n                                  <SearchIcon/>  \n                            </Button>\n                            {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                          </div>\n                      </div>\n                      \n                    </div>\n                    \n                  \n                </div>\n\n                <div className=\"viewCourses\" style={!this.state.showPlaceholder ? {} : {display: \"none\"}}>\n                  <TableContainer component={Paper}>\n                    <Table aria-label=\"customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell> Class Number </StyledTableCell>\n                          <StyledTableCell> Course </StyledTableCell>\n                          <StyledTableCell> Section </StyledTableCell>\n                          <StyledTableCell> Faculty </StyledTableCell>\n                          <StyledTableCell> Day </StyledTableCell>\n                          <StyledTableCell> Time </StyledTableCell>\n                          <StyledTableCell> Room </StyledTableCell>\n                          <StyledTableCell> Capacity </StyledTableCell>\n                          <StyledTableCell> Enrolled </StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                      {this.state.loading ? \n                      <TableBody>\n                          {this.state.skeletons.map(skeleton =>(\n                            <StyledTableRow>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                      </TableBody>\n                      : \n                      <TableBody>\n                        {this.state.siteData.map(row => (\n                          <StyledTableRow key={row.classNmbr} style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.classNmbr} </StyledTableCell>\n                            <Tooltip title=\"More Details\" placement=\"left\"><StyledTableCell onClick={() => this.handleOpenModalCourseInfo(row.course, \"\", \"3\")} style={(row.capacity == row.enrolled) ? {color: \"#0099CC\", cursor: \"pointer\", textDecorationLine: 'underline'} : {color: \"#006600\", cursor: \"pointer\", textDecorationLine: 'underline'}} > {row.course} </StyledTableCell></Tooltip>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.section} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.faculty} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.day} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.startTime} - {row.endTime} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.room} </StyledTableCell>\n                            <StyledTableCell align=\"right\" style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.capacity} </StyledTableCell>\n                            <StyledTableCell align=\"right\" style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.enrolled} </StyledTableCell>\n                          </StyledTableRow>\n                        ))}\n                      </TableBody>\n                      }\n                    </Table>\n                  </TableContainer>\n\n                  <Modal isOpen={this.state.openModalCourseInfo} toggle={this.toggleModal} returnFocusAfterClose={false} backdrop=\"static\" data-keyboard=\"false\">\n                      <ModalHeader toggle={this.toggleModal}>Course Information</ModalHeader>\n                      \n                      <ModalBody>\n                        <h4>{this.state.courseCode}</h4>\n                        <h5>{this.state.courseName}</h5>\n                        <br/>\n\n                        <u><h5>Description</h5></u>\n                        <p>{this.state.courseDesc}</p>\n                        <br/>\n\n                        <u><h5>Pre-requisite/s</h5></u>\n                        <p>{this.state.coursePre}</p>\n                        <br/>\n\n                        <u><h5>Co-requisite/s</h5></u>\n                        <p>{this.state.courseCo}</p>\n                        <br/>\n\n                        <u><h5>Course Equivalent</h5></u>\n                        <p>{this.state.courseEq}</p>\n                        <br/>\n\n                        <u><h5>Number of Units</h5></u>\n                        <p>{this.state.courseUnits}</p>\n                      </ModalBody>\n                      \n                  </Modal> \n                </div>\n                \n                \n                <div className={\"noContent\"} style={this.state.showPlaceholder ? {} : {display: \"none\"}}>\n                    <center><img style={{width:\"30%\"}} src={searchIMG}/></center>\n                </div>\n            </div>\n                     \n            : \n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n              <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n            </div> }\n        </div>        \n      );\n    }\n  }\n\n  SearchCourses.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(SearchCourses);","import React, { Component } from \"react\";\nimport { Column, Row } from 'simple-flexbox';\nimport Menu from '../components/Menu.jsx';\nimport '../css/SearchCourses.css';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ComboBox from '../components/ComboBox.jsx';\nimport axios from 'axios';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport groupArray from 'group-array';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport ReactLoading from 'react-loading';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport searchIMG from '../assets/search_engine.png';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    \n  },\n  wrapper: {\n    // margin: theme.spacing(1),\n    position: 'relative',\n    \n\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n    paddingTop: '5px',\n    paddingBottom: '5px',\n  },\n});\n\nconst GreenRadio = withStyles({\n  root: {\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    // color: green[600],\n    '&$checked': {\n      color: green[600],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[600],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nclass SearchCourses extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        fields: {},\n        database: [],\n        siteData: [],\n        allSiteData: [],\n        selectedCourses: [],\n        loading: false,\n        radioVal: 'all',\n        dataReceived: false,\n        skeletons: [...Array(8).keys()],\n        rowStyle: \"\",\n        openModalCourseInfo: false,\n        showPlaceholder: true,\n        applyPreference: false\n      }\n      this.radioRef = React.createRef()\n    }\n\n    componentDidMount(){\n        // axios.get('https://animosched-backend-backup.herokuapp.com/api/courses/')\n        // .then(res => {\n        //     res.data.map(course => {\n        //         var courses = this.state.courseList;\n        //         courses.push({'id':course.id, 'course_code':course.course_code})\n        //         this.setState({courseList: courses, dataReceived: true})\n        //     })\n        // })\n        this.setState({dataReceived: true})\n    }\n\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n      return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n    }\n\n    handleChange = (field, e) => {\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({fields});\n    }\n\n    setFilter = () => {\n      let option = this.state.radioVal;\n      let filteredList = [];\n\n      if(option == \"all\"){\n        console.log(\"all\");\n        filteredList = this.state.allSiteData;\n\n        this.setState({siteData: filteredList});\n\n        console.log(filteredList);\n      }\n      else if(option == \"open\"){\n        console.log(\"open\");\n\n        var i;\n        for(i = 0; i < this.state.allSiteData.length; i++) {\n          if(this.state.allSiteData[i].enrolled < this.state.allSiteData[i].capacity){\n            // console.log(this.state.database[i]);\n            filteredList.push(this.state.allSiteData[i]);\n          }\n        }\n\n        this.setState({siteData: filteredList});\n\n        console.log(filteredList);\n      }\n      else{\n        console.log(\"closed\");\n\n        var i;\n        for(i = 0; i < this.state.allSiteData.length; i++) {\n          if(this.state.allSiteData[i].enrolled >= this.state.allSiteData[i].capacity){\n            // console.log(this.state.database[i]);\n            filteredList.push(this.state.allSiteData[i]);\n          }\n        }\n\n        this.setState({siteData: filteredList});\n\n        console.log(filteredList);\n      }\n    }\n\n    handleFilter = (field, e) => {\n      this.setState({radioVal: e.target.value}, () => {\n        this.setFilter()\n      })\n    }\n\n    searchCourses = () =>{\n      //start loading\n\n      if(this.state.selectedCourses.length > 0){\n        this.setState({siteData: []})\n        this.setState({showPlaceholder: false},()=>{\n          this.setState({loading: true});\n        });\n      }\n\n      const selectedCourses = []\n      this.state.selectedCourses.map(course => {\n        selectedCourses.push(course.id)\n      })\n     \n      axios.post('https://animosched-backend-backup.herokuapp.com/api/courseofferingslist/',{\n        courses: selectedCourses,\n        applyPreference: this.state.applyPreference,\n        user_id: localStorage.getItem('user_id')\n      })\n      .then(res => {\n          const newSiteData = [];\n          console.log(res.data)\n          res.data.map(bundle => {\n            var arranged = groupArray(bundle, 'classnumber');\n            console.log(arranged)\n            for (let key in arranged) {\n              console.log(key, arranged[key]);\n              var days = []\n              var day = ''\n              var classnumber = ''\n              var course = ''\n              var section = ''\n              var faculty = ''\n              var timeslot_begin = ''\n              var timeslot_end = ''\n              var room = ''\n              var max_enrolled = ''\n              var current_enrolled = ''\n              arranged[key].map(offering => {\n                days.push(offering.day)\n                classnumber = offering.classnumber\n                course = offering.course\n                section = offering.section\n                faculty = offering.faculty\n                timeslot_begin = offering.timeslot_begin\n                timeslot_end = offering.timeslot_end\n                room = offering.room\n                max_enrolled = offering.max_enrolled\n                current_enrolled = offering.current_enrolled\n              })\n              days.map(day_code => {\n                day += day_code;\n              })\n              const offering = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n              newSiteData.push(offering);\n            }\n          })\n        this.setState({siteData: newSiteData, allSiteData: newSiteData},() => {\n          this.setFilter()\n          this.setState({loading: false});\n        })\n        //Finish Loading\n      }).catch(err => {\n        console.log(err.response)\n      })\n    }\n\n    handleSearch = (e, val) =>{\n      this.setState({selectedCourses: val})\n    }\n\n    handleClick = (id, column) => {\n      return (event) => {\n        console.log(`You clicked on row with id ${id}, in column ${column}.`);\n      }\n    }\n\n    handleCloseModalCourseInfo = ()=>{\n      this.setState({openModalCourseInfo: false})\n    }\n  \n    handleOpenModalCourseInfo = (courseCode, courseName, courseUnits)=>{\n      courseName = \"Lorem ipsum\"\n      var courseDesc = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n      var coursePre = \"N/A\"\n      var courseCo = \"N/A\"\n      var courseEq = \"N/A\"\n      this.setState({courseCode, courseName, courseUnits})\n      this.setState({courseDesc, coursePre, courseCo, courseEq})\n      this.setState({openModalCourseInfo: true})\n    }\n\n    handleApplyPreference = () => {\n      this.setState({applyPreference: !this.state.applyPreference})\n    }\n  \n    toggleModal = () => {\n      var openModalVar = this.state.openModalCourseInfo;\n      this.setState({openModalCourseInfo: !openModalVar});\n    }\n\n    render() {\n      const { classes } = this.props;\n\n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: '#006A4E',\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 14,\n          borderBottom: \"1px solid white\",\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles(theme => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n          },\n        },\n      }))(TableRow);\n\n      return (\n          <div>\n            {this.props.menu('search_courses')}\n\n            {this.state.dataReceived ? \n            <div className=\"search-container\">\n\n                <div className=\"searchBar\">\n                  <h2>Search all your courses in one go!</h2>\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                      <ComboBox style={{width: \"-webkit-fill-available\"}} page=\"search\" onChange={this.handleSearch}/>\n                      <div className={classes.root}>\n                          <div className={classes.wrapper} >\n                            <Button\n                                  variant=\"contained\"\n                                  color = \"Primary\"\n                                  disabled={this.state.loading}\n                                  style={{backgroundColor: \"green\", color:\"white\", height:\"55px\"}}\n                                  onClick={this.searchCourses}>\n                                  <SearchIcon/>  \n                            </Button>\n                            {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                          </div>\n                      </div>\n                      \n                    </div>\n                    \n                  \n                </div>\n\n                <div className=\"filters\">\n                    <center>\n                      {/* <span className=\"filterLabel\">Filters:</span> */}\n                  <FormControl component=\"fieldset\">\n                    <RadioGroup ref={this.radioRef} row aria-label=\"filter\" name=\"filter\" onChange={this.handleFilter.bind(this, \"filter\")} value={this.state.radioVal}>\n                      <FormControlLabel value=\"all\" control={<GreenRadio />} label=\"All Sections\" />\n                      <FormControlLabel value=\"open\" control={<GreenRadio />} label=\"Open Sections\" />\n                      <FormControlLabel value=\"closed\" control={<GreenRadio />} label=\"Closed Sections\" />\n                    </RadioGroup>\n                  </FormControl>\n                    </center>\n                </div>\n                <div className=\"legend\">\n                    <div className=\"legendItems\">\n                        <center>\n                            <div>Open Sections - <Paper style={{backgroundColor:\"#006600\", height: \"15px\", width: \"15px\", display: \"inline-flex\"}}> </Paper> Green</div> \n                       </center>\n                    </div>\n                  \n                    <div  className=\"legendItems\">\n                        <center>\n                            <div>Closed Sections - <Paper style={{backgroundColor:  \"#0099CC\", height: \"15px\", width: \"15px\", display: \"inline-flex\"}}> </Paper> Blue</div>\n                        </center>\n                    </div>\n                </div>\n                \n                <div className=\"viewCourses\" style={!this.state.showPlaceholder ? {} : {display: \"none\"}}>\n                  <TableContainer component={Paper}>\n                    <Table aria-label=\"customized table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell> Class Number </StyledTableCell>\n                          <StyledTableCell> Course </StyledTableCell>\n                          <StyledTableCell> Section </StyledTableCell>\n                          <StyledTableCell> Faculty </StyledTableCell>\n                          <StyledTableCell> Day </StyledTableCell>\n                          <StyledTableCell> Time </StyledTableCell>\n                          <StyledTableCell> Room </StyledTableCell>\n                          <StyledTableCell> Capacity </StyledTableCell>\n                          <StyledTableCell> Enrolled </StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                      {this.state.loading ? \n                      <TableBody>\n                          {this.state.skeletons.map(skeleton =>(\n                            <StyledTableRow>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                              <StyledTableCell> <Skeleton width={'100%'} height={'100%'}></Skeleton> </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                      </TableBody>\n                      : \n                      <TableBody>\n                        {this.state.siteData.map(row => (\n                          <StyledTableRow key={row.classNmbr} style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.classNmbr} </StyledTableCell>\n                            <Tooltip title=\"More Details\" placement=\"left\"><StyledTableCell onClick={() => this.handleOpenModalCourseInfo(row.course, \"\", \"3\")} style={(row.capacity == row.enrolled) ? {color: \"#0099CC\", cursor: \"pointer\", textDecorationLine: 'underline'} : {color: \"#006600\", cursor: \"pointer\", textDecorationLine: 'underline'}} > {row.course} </StyledTableCell></Tooltip>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.section} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.faculty} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.day} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.startTime} - {row.endTime} </StyledTableCell>\n                            <StyledTableCell style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.room} </StyledTableCell>\n                            <StyledTableCell align=\"right\" style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.capacity} </StyledTableCell>\n                            <StyledTableCell align=\"right\" style={(row.capacity == row.enrolled) ? {color: \"#0099CC\"} : {color: \"#006600\"}}> {row.enrolled} </StyledTableCell>\n                          </StyledTableRow>\n                        ))}\n                      </TableBody>\n                      }\n                    </Table>\n                  </TableContainer>\n\n                  <Modal isOpen={this.state.openModalCourseInfo} toggle={this.toggleModal} returnFocusAfterClose={false} backdrop=\"static\" data-keyboard=\"false\">\n                      <ModalHeader toggle={this.toggleModal}>Course Information</ModalHeader>\n                      \n                      <ModalBody>\n                        <h4>{this.state.courseCode}</h4>\n                        <h5>{this.state.courseName}</h5>\n                        <br/>\n\n                        <u><h5>Description</h5></u>\n                        <p>{this.state.courseDesc}</p>\n                        <br/>\n\n                        <u><h5>Pre-requisite/s</h5></u>\n                        <p>{this.state.coursePre}</p>\n                        <br/>\n\n                        <u><h5>Co-requisite/s</h5></u>\n                        <p>{this.state.courseCo}</p>\n                        <br/>\n\n                        <u><h5>Course Equivalent</h5></u>\n                        <p>{this.state.courseEq}</p>\n                        <br/>\n\n                        <u><h5>Number of Units</h5></u>\n                        <p>{this.state.courseUnits}</p>\n                      </ModalBody>\n                      \n                  </Modal> \n                </div>\n                \n                \n                <div className={\"noContent\"} style={this.state.showPlaceholder ? {} : {display: \"none\"}}>\n                    <center><img style={{width:\"30%\"}} src={searchIMG}/></center>\n                </div>\n            </div>\n                     \n            : \n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n              <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n            </div> }\n        </div>        \n      );\n    }\n  }\n\n  SearchCourses.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(SearchCourses);","import React, { Component } from \"react\";\nimport '../css/FriendPage.css';\nimport { Row, Col, Tabs, Tab, DropdownButton, Dropdown } from 'react-bootstrap';\nimport SidebarIMG from '../images/FriendPage.svg';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport {\n    ListGroup,\n    ListGroupItem,\n    Table\n} from 'reactstrap';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Pagination, PaginationItem, PaginationLink} from 'reactstrap';\n\nimport SchedViewHome from '../components/SchedViewHome';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport axios from 'axios';\nimport groupArray from 'group-array'\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ReactLoading from 'react-loading';\n\nimport friendDef from '../assets/friend2.png';\nimport { Chip } from \"@material-ui/core\";\n\nimport calendarIMG from '../images/Register.svg';\nimport { Link } from 'react-router-dom'\n\nimport Avatar from 'react-avatar';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withRouter } from \"react-router\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport CompareIcon from '@material-ui/icons/Compare';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport {BrowserRouter as Router,Route,\n    Redirect,Switch} from 'react-router-dom';\n\nimport _ from 'underscore';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\nconst styles = theme => ({\n    pencilIcon:{ \n        marginLeft: \"10px\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"gray\"\n          },\n    },\n    checkIcon:{\n        color: \"green\", \n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#79c879\"\n          },\n    },\n\n    unfriendBtnStyle:{\n        textTransform: \"none\",\n        width: \"20px\",\n        borderRadius: \"100px\",\n        // padding: \"10px\",\n        // paddingLeft: \"10px\",\n        // paddingRight: \"10px\",\n        // backgroundColor: \"#16775D\",\n        // border: \"none\",\n        // color: \"white\",\n        // boxShadow: \"6px 5px #e8f4ea\",\n        border: \"2px solid #16775D\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        // marginTop: \"20px\",\n        justifyContent: 'center',\n        backgroundColor: \"white\",\n        color: \"#16775D\",\n        '&:hover:after': {\n           content: \"Unfriend\"\n          },\n    },\n\n    buttonStyle:{\n        textTransform: \"none\",\n        textDecoration: \"none\",\n        width: \"60%\",\n        fontSize: \"95%\",\n        borderRadius: \"10px\",\n        padding: \"10px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        backgroundColor: \"#16775D\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        marginTop: \"20px\",\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        justify: 'center',\n        marginBottom: \"1em\",\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#16775D\"\n          },\n    },\n  });\nconst GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nclass FriendPage extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            requests: [],\n            currentPage: 0,\n            // currentContent: \"\",\n            // generatedContents: [],\n            currentContent: \"\",\n            generatedContents: [],\n            pagesCount: 1,\n            dataReceived: false, //whole page\n            allowEdit: false,\n            openAlert: false,\n            selectedFriend: \"\",\n            selectedFriendId: \"\",\n            hasSelectedFriend: false, //right side\n            contentSelected: false,\n            fromModalIndex: \"\",\n            schedules: [],\n            profList: [],\n            dropdownOpen: false,\n            friendList: [],\n            openModalCompare: false,\n            friendListCompare: [],\n            openModalSuggest: false,\n            friendListSuggest: [],\n            copyBar: false,\n\n            compareList: [],\n            generateList: [],\n            doGenerate: false,\n            savedConfig: true,\n            prefConfig: true,\n            filterConfig: true,\n\n            daysList:[\n                {   id: 1,\n                    day_code: \"M\",\n                    day: \"Monday\",\n                    checked: false,},\n                { \n                    id: 2,\n                    day_code: \"T\",\n                    day: \"Tuesday\",\n                    checked: false,},\n                {\n                    id: 3,\n                    day_code: \"W\",\n                    day: \"Wednesday\",\n                    checked: false,},\n                {\n                    id: 4, \n                    day_code: \"H\",\n                    day: \"Thursday\",\n                    checked: false,},\n                {\n                    id: 5,\n                    day_code: \"F\",\n                    day: \"Friday\",\n                    checked: false,},\n                { \n                    id: 6,\n                    day_code: \"S\",\n                    day: \"Saturday\",\n                    checked: false,},\n\n                ],\n            \n            buildingList:[{   \n                id: 2,\n                bldg_code: \"LS\",\n                building: \"St. La Salle Hall\",\n                checked: false,},\n            { \n                id: 3,\n                bldg_code: \"Y\",\n                building: \"Enrique Yuchengco Hall\",\n                checked: false,},\n            {\n                id: 4,\n                bldg_code: \"J\",\n                building: \"St. Joseph Hall\",\n                checked: false,},\n            {\n                id: 5, \n                bldg_code: \"V\",\n                building: \"Velasco Hall\",\n                checked: false,},\n            {\n                id: 6,\n                bldg_code: \"M\",\n                building: \"St. Miguel Hall\",\n                checked: false,},\n            { \n                id: 7,\n                bldg_code: \"MU\",\n                building: \"St. Mutien Marie Hall\",\n                checked: false,},\n            {\n                id: 1,\n                bldg_code: \"GK\",\n                building: \"Gokongwei Hall\",\n                checked: false,},\n            { \n                id: 8,\n                bldg_code: \"A\",\n                building: \"Br. Andrew Gonzales Hall\",\n                checked: false,},],\n\n            college: '', \n            degree: '',\n            idnum: '',\n            earliest_class_time: '',\n            latest_class_time: '',\n            break_length: '',\n            firstName: '',\n            lastName: '',\n            searchQuery: '',\n\n            highList: [],\n            lowList: [],\n            coordinating: true,\n            snackBar: false,\n            snackBarText: '',\n            cancelled: false,\n\n        }\n\n        this.filterSearchFriendsThrottled = _.debounce(this.filterSearchFriends, 500)\n        console.log(props)\n\n    }\n    createTimeslot = (day, hour, minute) =>{\n        if(day == 'M'){\n            return new Date(2018, 5, 25, hour, minute);\n        }else if(day == 'T'){\n            return new Date(2018, 5, 26, hour, minute);\n        }else if(day == 'W'){\n            return new Date(2018, 5, 27, hour, minute);\n        }else if(day == 'H'){\n            return new Date(2018, 5, 28, hour, minute);\n        }else if(day == 'F'){\n            return new Date(2018, 5, 29, hour, minute);\n        }else if(day == 'S'){\n            return new Date(2018, 5, 30, hour, minute);\n        }\n    }\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled) {\n        return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled };\n    }\n    createRequests(firstName, lastName, status, id, college, degree, id_num) {\n        return { firstName, lastName, status, id, college, degree, id_num};\n    }\n\n    handlePageChange = (e,index) => {\n        this.setState(state =>{\n            var currentContent = state.generatedContents[index];\n            return {currentContent};\n        });\n        this.setState({currentPage: index});\n        this.setState(state =>{\n            var currentPage = index;\n            return {currentPage};\n        });\n        console.log(\"pressed page \" + index);\n        console.log(this.state.generatedContents[index]);\n        window.scrollTo({top: 0, behavior: 'smooth'});\n    }\n\n    setSchedInfo = () => {\n        console.log(this.state.schedules)\n        const palette = JSON.parse(localStorage.getItem('palette'))\n        var generatedContents = this.state.schedules.map((item, index) =>\n            <SchedViewHome key={item.id} id={item.id} offerings={item.offerings} tableContent={item.tableContent} scheduleContent={item.scheduleContent} titleName={item.title} allowEdit={this.state.allowEdit} palette={palette}/>\n        );\n        // this.setState({hideGenContent: false});\n        this.setState({generatedContents}, ()=>{\n            this.setState({currentContent: generatedContents[0]}, () => {\n                this.setState({pagesCount: generatedContents.length}, () => {\n                    this.setState({currentPage: 0}, () => {\n                        this.setState({hasSelectedFriend: true})\n                    })\n                });\n                \n            })\n        });\n    }\n\n    tempTest = () => {\n        this.setState({hasSelectedFriend: true})\n    }\n\n    handleClickOpenAlert = (friend) => {\n        this.setState({openAlert: true});\n        this.setState({selectedFriend: friend});\n    }\n     \n    handleCloseAlert = () => {\n        this.setState({openAlert: false});\n    }\n\n    handleClick = (e, i) => {\n        const requests = this.state.requests\n        this.setState({contentSelected: true})\n        this.setState({selectedFriendId: requests[i].id})\n        this.setState({hasSelectedFriend: false});\n        this.setState({friend: requests[i]})\n        this.setState({generateList: [requests[i].id]})\n        \n        axios.get('https://animosched-backend-backup.herokuapp.com/api/schedulelist/'+requests[i].id+'/')\n        .then(res => {\n            const schedules = []\n            res.data.map(newSchedule =>{\n                var count = 0;\n                const scheduleContent = []\n                const tableContent = []\n                var earliest = 9\n                var latest = 17\n                var arranged = groupArray(newSchedule.courseOfferings, 'classnumber');\n                for (let key in arranged) {\n                  var days = []\n                  var day = ''\n                  var classnumber = ''\n                  var course = ''\n                  var section = ''\n                  var faculty = ''\n                  var timeslot_begin = ''\n                  var timeslot_end = ''\n                  var room = ''\n                  var max_enrolled = ''\n                  var current_enrolled = ''\n                  arranged[key].map(offering => {\n                    days.push(offering.day)\n                    classnumber = offering.classnumber\n                    course = offering.course\n                    section = offering.section\n                    faculty = offering.faculty\n                    timeslot_begin = offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3)\n                    timeslot_end = offering.timeslot_end.substring(0, offering.timeslot_end.length - 3)\n                    room = offering.room\n                    max_enrolled = offering.max_enrolled\n                    current_enrolled = offering.current_enrolled\n                  })\n                  days.map(day_code => {\n                    day += day_code;\n                  })\n                  const newTableContent = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled);\n                  tableContent.push(newTableContent)\n                }\n                newSchedule.courseOfferings.map(offering=>{\n                    var startTime = offering.timeslot_begin.split(':');\n                    var endTime = offering.timeslot_end.split(':');\n                    const newContent = \n                    {\n                        id: count,\n                        title: offering.course + ' ' + offering.section,\n                        section: offering.section,\n                        startDate: this.createTimeslot(offering.day,startTime[0],startTime[1]),\n                        endDate: this.createTimeslot(offering.day,endTime[0],endTime[1]),\n                        location: offering.room,\n                        professor: offering.faculty,\n                        startTime: offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3),\n                        endTime: offering.timeslot_end.substring(0, offering.timeslot_end.length - 3),\n                        days: offering.day,\n                        classCode: offering.classnumber \n                    }\n                    if(earliest > Number(startTime[0])){\n                        earliest = Number(startTime[0])\n                    }\n                    if(latest < Number(endTime[0]) + 1){\n                        latest = Number(endTime[0]) + 1\n                    }\n                    scheduleContent.push(newContent);\n  \n                    count += 1;\n                })\n                schedules.push({\n                    id: newSchedule.id,\n                    title: newSchedule.title,\n                    scheduleContent: scheduleContent,\n                    tableContent: tableContent, \n                    prefContent: [],\n                    conflictsContent: newSchedule.information,\n                    earliest: earliest,\n                    latest: latest,\n                    offerings: newSchedule.courseOfferings\n                });\n            })\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/preferencelist/'+requests[i].id+'/')\n            .then(res => {\n                const profList = []\n                const sectionList = []\n                const daysList = []\n                const buildingList = []\n                console.log(res.data)\n                res.data.map(preference =>{\n                    if(preference.earliest_class_time != null){\n                        this.setState({earliest_class_time:preference.earliest_class_time})\n                    }\n                    if(preference.latest_class_time != null){\n                        this.setState({latest_class_time:preference.latest_class_time})\n                    }\n                    if(preference.preferred_days != null){\n                        this.state.daysList.map(day => {\n                            if(preference.preferred_days == day.id){\n                                daysList.push(day.day)\n                            }\n                        })\n                    }\n                    if(preference.break_length != null){\n                        this.setState({break_length:preference.break_length})\n                    }\n                    if(preference.min_courses != null){\n                        this.setState({min_courses:preference.min_courses})\n                    }\n                    if(preference.max_courses != null){\n                        this.setState({max_courses:preference.max_courses})\n                    }\n                    if(preference.preferred_faculty != null){\n                        var prof = preference.preferred_faculty\n                        profList.push(prof);\n                    }\n                    if(preference.preferred_buildings != null){\n                        this.state.buildingList.map(bldg => {\n                            if(preference.preferred_buildings == bldg.id){\n                                buildingList.push(bldg.building)\n                            }\n                        })\n                    }\n                    if(preference.preferred_sections != null){\n                        var section = preference.preferred_sections \n                        sectionList.push(section);\n                    }\n                })\n                console.log(profList);\n                var idnum = requests[i].id_num;\n                var idnumber = idnum.toString().slice(0, 3);\n                this.setState({firstName: requests[i].firstName, lastName: requests[i].lastName, sectionList, profList, buildingList, daysList, schedules, college: requests[i].college, degree: requests[i].degree, idnum: idnumber}, () => {\n                    this.setSchedInfo();\n                })\n                \n                // this.setState({hasSelectedFriend: true});\n            });\n            // this.setState({success: true});\n            // this.setState({loading: false});\n            // this.setState({dataReceived: true})\n        }).catch(error => {\n            console.log(error)\n            // this.setState({success: false});\n            // this.setState({loading: false});\n        })\n\n    }\n    \n    componentDidMount(){\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/friendlist/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            const requests = []\n            const friendList = []\n            const friendListCompare = []\n            res.data.map(friend => {\n                requests.push(this.createRequests(friend.first_name, friend.last_name, \"accept\", friend.id, friend.college, friend.degree, friend.id_num))\n                friendList.push(friend.id)\n                // friendListCompare.push({id: friend.id, checked: false})\n            })\n            this.setState({friendList})\n            // this.setState({friendListCompare})\n            this.setState({requests}, () => {\n                if(this.props.location.state != undefined){\n                    let selectedFriendId = this.props.location.state.selectedFriendId;\n                    if(selectedFriendId != -1){\n                        requests.map((friend,index) => {\n                            if(friend.id == selectedFriendId){\n                                this.handleClick(null, index)\n                            }\n                        })\n                    }\n                    const {location, history} = this.props;\n                    //use the state via location.state\n                    //and replace the state via\n                    location.state = undefined\n                    history.replace() \n                }\n                this.setState({dataReceived: true})\n            })\n//            if(this.state.fromModalIndex == \"\" && ){\n                // this.handleClick(\"clickaway\", this.props.location.state.index)\n//            }\n        })\n    }\n\n    componentWillReceiveProps(props){\n        this.setState({dataReceived: false})\n        if(props.location.state != undefined){\n            let selectedFriendId = props.location.state.selectedFriendId;\n            if(selectedFriendId != -1){\n                this.state.requests.map((friend,index) => {\n                    if(friend.id == selectedFriendId){\n                        this.handleClick(null, index)\n                    }\n                })\n            }else{\n                this.setState({selectedFriendId: '', contentSelected: false, hasSelectedFriend: false})\n            }\n            const {location, history} = props;\n            //use the state via location.state\n            //and replace the state via\n            location.state = undefined\n            history.replace() \n        }\n        this.setState({dataReceived: true})\n        //  if (this.props.number !== nextProps.number) {\n        //   this.handleClick(\"clickaway\", this.props.location.state.index)\n        // }\n      \n//        console.log(this.props.location.state.index);\n//            console.log(this.props.location.state.selectedFriend);\n//           this.handleClick(\"clickaway\", this.props.location.state.index)\n    }\n\n    toggleDrop = () => {\n        var dropdownOpen = this.state.dropdownOpen;\n        this.setState({dropdownOpen: !dropdownOpen});\n      }\n\n    handleSearchChange = (e) => {\n        this.filterSearchFriendsThrottled(e.target.value)\n    }\n\n    handleSearchCompare = (e) => {\n        this.filterSearchFriendsThrottled(e.target.value)\n    }\n\n    filterSearchFriends = (val) => {\n        this.setState({searchQuery: val})\n    }\n\n    deleteFriend = () => {\n        const friendList = []\n        this.state.friendList.map(friend => {\n            if(friend != this.state.selectedFriendId){\n                friendList.push(friend)\n            }\n        })\n        axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+localStorage.getItem('user_id')+'/',{\n            friends: friendList \n        }).catch(err => {\n            console.log(err.response)\n        })\n        window.location.reload()\n        this.setState({openAlert: false});\n    }\n\n    toggleModalCompare = () => {\n        var openModalVar = this.state.openModalCompare;\n        this.setState({openModalCompare: !openModalVar});\n      }\n    \n    handleCompareChange = (event) => {\n        var friendListCompare = [...this.state.friendListCompare];\n        friendListCompare.map(value=>{\n            if(value.id === Number(event.target.id)){\n                value.checked = event.target.checked;\n            }\n        })\n        this.setState({friendListCompare});\n        // this.setState({[event.target.name]: event.target.checked });\n    };\n\n    toggleModalSuggest = () => {\n        var openModalVar = this.state.openModalSuggest;\n        this.setState({openModalSuggest: !openModalVar});\n      }\n    \n    handleSuggestChange = (event) => {\n        var friendListSuggest = [...this.state.friendListSuggest];\n        friendListSuggest.map(value=>{\n            if(value.id === Number(event.target.id)){\n                value.checked = event.target.checked;\n            }\n        })\n        this.setState({friendListSuggest});\n        // this.setState({[event.target.name]: event.target.checked });\n    };\n\n    handleCopy = () => {\n        const courseOfferings = []\n        this.state.currentContent.props.offerings.map(o => {\n            courseOfferings.push(o.id)\n        })\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/schedules/',{\n            title: this.state.currentContent.props.titleName + ' ('+ this.state.firstName+')',\n            courseOfferings: courseOfferings,\n            user: localStorage.getItem('user_id') \n        }).then(res => {\n            console.log(res.data)\n            this.setState({copyBar: true});\n            // axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+user_id+'/')\n            // .then(res => {\n            //     const schedules = res.data.schedules;\n            //     schedules.push(sched_id);\n            //     axios.patch('https://animosched-backend-backup.herokuapp.com/api/users/'+user_id+'/',{\n            //         schedules: schedules\n            //     }).then(res => {\n            //         console.log(res)\n                    \n            //     }).catch(err => {\n            //         console.log(err.response)\n            //     })\n            // })\n        }).catch(err => {\n            console.log(err.response)\n        })\n    }\n    \n    handleCloseCopyBar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        this.setState({copyBar: false});\n    }\n\n    compareOnChange = (e, val) => {\n        const friends = []\n        val.map(f => {\n            friends.push(f.id)\n        })\n        this.setState({compareList: friends})\n        console.log(val)\n    }\n\n    generateOnChange = (e, val) => {\n        const friends = []\n        val.map(f => {\n            friends.push(f.id)\n        })\n        this.setState({generateList: friends})\n        console.log(val)\n    }\n\n    handleConfigChanges=(event, type)=>{\n        if(type==\"saved\"){\n            this.setState({savedConfig: event.target.checked})\n        }else if(type==\"pref\"){\n            this.setState({prefConfig:event.target.checked})\n        }else if(type==\"filter\"){\n            this.setState({filterConfig:event.target.checked})\n        }\n    }\n\n    handleCoordinate=()=>{\n        this.setState({coordinating: false})\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/generateschedulefriends/',\n        {\n            friends: this.state.generateList,\n            user_id: localStorage.getItem('user_id'),\n            filterFull: true\n        })\n        .then(res => {\n            // console.log(res)\n            // console.log(res.data)\n            this.setState({shareCode: res.data}, () => {\n                if(!this.state.cancelled){\n                    this.setState({doGenerate: true})\n                }else{\n                    this.setState({coordinating: true})\n                    console.log(\"cancelled\")\n                }\n                this.setState({cancelled: false})\n            })\n        }).catch(error => {\n            console.log(error.response)\n            this.setState({coordinating: true})\n            this.setState({snackBarText: 'Error occured while coordinating schedule.'})\n            this.setState({snackBar: true})\n            this.setState({cancelled: false})\n        })\n    }\n\n    onCancel = () => {\n        this.setState({cancelled: true})\n        this.setState({coordinating: true})\n    }\n\n\n    render() {\n        const friendList = [];\n        const { classes } = this.props;\n        const friendListCompare = [];\n\n        for(var i=0; i < this.state.requests.length; i++){\n            if(this.state.requests[i].status == \"accept\"){\n                var f = this.state.requests[i];\n                if(f.firstName.toLowerCase().includes(this.state.searchQuery.toLowerCase()) || f.lastName.toLowerCase().includes(this.state.searchQuery.toLowerCase())){\n                    friendList.push(this.state.requests[i]);\n                }\n            }\n        }\n\n        const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n            <a\n                ref={ref}\n              onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n              }}\n            >\n              {children}\n              <ArrowDropDownIcon fontSize=\"large\"/>\n              {/* &#x25bc; */}\n            </a>\n          ));\n    \n        return (\n            <div>\n                {this.props.menu()}\n                {this.state.dataReceived ? \n                <div>\n                {this.state.doGenerate &&\n                <Redirect to={{\n                            pathname: '/coordinate_schedule/'+this.state.shareCode+'/',\n                        }}\n                />\n                }\n                    <div class=\"friendMenu\">\n                        <div class=\"titleRow\">\n                            <center>\n                                <h1>FRIENDS</h1>\n                                <svg class=\"bi bi-people-fill\" width=\"75\" height=\"75\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fill-rule=\"evenodd\" d=\"M9 16s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H9zm4-6a3 3 0 100-6 3 3 0 000 6zm-5.784 6A2.238 2.238 0 017 15c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 007 11c-4 0-5 3-5 4s1 1 1 1h4.216zM6.5 10a2.5 2.5 0 100-5 2.5 2.5 0 000 5z\" clip-rule=\"evenodd\"></path>\n                                </svg>\n                            </center>\n                        </div>\n\n                        <div style={{height: \"100%\"}}>\n                        \n                            <div style={{justifyContent:\"center\", justify: \"center\", justifyItems: \"center\", margin: \"auto 10px\"}}>\n                                <TextField\n                                    key={\"friendPage_searchFriends\"}\n                                    id=\"friendPage_searchFriends\"\n                                    variant= \"outlined\"\n                                    // options={friendList}\n                                    // getOptionLabel={(option) => option.firstName + \" \" + option.lastName}\n                                    style={{ width: \"95%\", marginBottom: \"10%\", justifyContent: \"center\" }}\n                                    filterSelectedOptions\n                                    label=\"Search Friends\" \n                                    onChange={this.handleSearchChange}\n                                    /*renderInput={(params) => <TextField {...params} label=\"Search Friends\" variant=\"outlined\" placeholder=\"FirstName LastName\"/>}*/\n                                    />\n                                    {/* <input style={{marginBottom: \"10%\"}}></input> */}\n                            </div>\n\n                            <ListGroup flush style={{height: \"50%\", overflowX: \"hidden\"}}>\n                                {friendList.map((friend, index) => (\n                                    <ListGroupItem color={this.state.selectedFriendId == friend.id ? 'success' : ''} type=\"button\" tag=\"a\" onClick={(e) => this.handleClick(e, index)} action>\n                                        <Row>\n                                            <Col xs={6} md={1}>\n                                                <Avatar name={friend.firstName +\" \"+ friend.lastName} textSizeRatio={2.30} round={true} size=\"25\" style={{marginRight: \"5px\",}} />\n                                            </Col>\n                                            <Col xs={12} md={8}>\n                                                <span> {friend.firstName} {friend.lastName} </span>\n                                            </Col>\n\n                                            <Col xs={6} md={2}>\n                                                <div className={\"friend_btn\"}>\n                                                    {/* <Button\n                                                    variant=\"contained\"\n                                                    className={classes.buttonStyle}\n                                                    onClick={()=>this.handleClickOpenAlert(friend)}\n                                                    >\n\n                                                        <CheckIcon fontSize=\"small\"/>\n                                                    </Button> */}\n                                                    <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDrop}>\n                                                        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n                                                        <Dropdown.Menu right>\n                                                        <Dropdown.Item eventKey=\"1\" onClick={()=>this.handleClickOpenAlert(friend)}>Unfriend</Dropdown.Item>\n                                                        </Dropdown.Menu>\n                                                        </Dropdown.Toggle>\n                                                    </Dropdown>\n                                                     {/* <Tooltip title=\"Unfriend\">\n                                                    <svg onClick={()=>this.handleClickOpenAlert(friend)} class=\"bi bi-check-circle\" width=\"24\" height=\"24\" viewBox=\"0 0 16 16\" fill=\"#006A4E\" xmlns=\"http://www.w3.org/2000/svg\" className={\"svgUnfriend\"}>\n                                                        <path fill-rule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\" clip-rule=\"evenodd\"></path>\n                                                        <path fill-rule=\"evenodd\" d=\"M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z\" clip-rule=\"evenodd\"></path>\n                                                    </svg>\n                                                    </Tooltip> */}\n                                                </div>\n                                            </Col>\n                                        </Row>            \n                                    </ListGroupItem>\n                                ))}\n\n                                {friendList.length == 0 &&\n                                    <ListGroupItem>\n                                        <center>No Friends</center>\n                                    </ListGroupItem>\n                                }\n                            </ListGroup>\n                            <Dialog\n                                open={this.state.openAlert}\n                                onClose={this.handleCloseAlert}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogTitle id=\"alert-dialog-title\">{\"Remove From Friend List\"}</DialogTitle>\n                                <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    Do you want to unfriend \"{this.state.selectedFriend.firstName} {this.state.selectedFriend.lastName}\"?\n                                </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                <Button onClick={this.deleteFriend} color=\"primary\" autoFocus>\n                                    Unfriend\n                                </Button>\n                                <Button onClick={this.handleCloseAlert} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                \n                                </DialogActions>\n                            </Dialog>\n                        </div>\n                    </div>\n                    {this.state.contentSelected ? \n                        <div>\n                        {this.state.hasSelectedFriend ?\n                        <div class=\"sidemenu-main\" >\n                            <Tabs defaultActiveKey=\"schedule\" id=\"uncontrolled-tab-example\">\n                                <Tab eventKey=\"details\" title=\"Details\">\n                                    <div className=\"friendName\">\n                                        <Typography gutterBottom variant=\"h4\" align=\"center\" style={{color:\"black\"}}>\n                                            {this.state.firstName} {this.state.lastName}\n                                        </Typography>\n                                        {/* <center><h1> Name </h1></center> */}\n                                    </div>\n\n                                    <div className=\"friendDetails\">\n                                        <div class=\"column\" style={{float: \"left\", width: \"65%\"}}>\n                                            <div>\n                                                <Typography gutterBottom variant=\"h5\" align=\"left\" style={{color:\"black\"}}>\n                                                    Details\n                                                </Typography>\n                                                {/* <h3> Details </h3> */}\n                                                <Table responsive size=\"sm\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <th scope=\"row\">College</th>\n                                                            <td>{this.state.college}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <th scope=\"row\">Degree</th>\n                                                            <td>{this.state.degree}</td>\n                                                        </tr>\n                                                        <tr>\n                                                            <th scope=\"row\">ID Number</th>\n                                                            <td>{this.state.idnum}</td>\n                                                        </tr>\n                                                    </tbody>\n                                                </Table>\n                                            </div>\n\n                                        <div>\n                                            <Typography gutterBottom variant=\"h5\" align=\"left\" style={{color:\"black\"}}>\n                                                Preferences\n                                            </Typography>\n                                            {/* <h3> Preferences </h3> */}\n                                            <Table responsive size=\"sm\" style={{overflow:\"hidden\"}}>\n                                                <tbody>\n                                                    <tr>\n                                                        <th scope=\"row\">Earliest Time</th>\n                                                        <td>{this.state.earliest_class_time}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Latest Time</th>\n                                                        <td>{this.state.latest_class_time}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Break Length</th>\n                                                        <td>{this.state.break_length}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Minimum Courses</th>\n                                                        <td>{this.state.min_courses}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Maximum Courses</th>\n                                                        <td>{this.state.max_courses}</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Faculty</th>\n                                                        <td>\n                                                        {this.state.profList.map(prof => (\n                                                            <Chip label={prof.full_name}></Chip>\n                                                        ))}\n                                                        {/* <Autocomplete\n                                                            multiple\n                                                            disabled\n                                                            id=\"combo-box-demo\"\n                                                            options={this.state.profList}\n                                                            getOptionLabel={option => option.full_name}\n                                                            style={{ width: 400 }}\n                                                            renderInput={params => <TextField {...params} label=\"\" variant=\"outlined\" />}\n                                                            value={this.state.profList}\n                                                        /> */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Section</th>\n                                                        <td>\n                                                        {this.state.sectionList.map(section => (\n                                                            <Chip label={section.section_code}></Chip>\n                                                        ))}\n                                                        {/* <Autocomplete\n                                                            multiple\n                                                            disabled\n                                                            id=\"combo-box-demo\"\n                                                            options={this.state.sectionList}\n                                                            getOptionLabel={option => option.section_code}\n                                                            style={{ width: 400 }}\n                                                            renderInput={params => <TextField {...params} label=\"\" variant=\"outlined\" />}\n                                                            value={this.state.sectionList}\n                                                        /> */}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Days</th>\n                                                        <td>\n                                                        {this.state.daysList.map(day => (\n                                                            <Chip label={day}></Chip>\n                                                        ))}\n                                                        </td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Buildings</th>\n                                                        <td>\n                                                        {this.state.buildingList.map(building => (\n                                                            <Chip label={building}></Chip>\n                                                        ))}\n                                                        </td>\n\n                                                    </tr>\n                                                   <tr>\n                                                        <th scope=\"row\">High Priority Courses</th>\n                                                        <td>\n                                                        {this.state.highList.map(c => (\n                                                            <Chip label={c}></Chip>\n                                                        ))}\n                                                        </td>\n\n                                                    </tr>\n                                                   <tr>\n                                                        <th scope=\"row\">Low Priority Courses</th>\n                                                        <td>\n                                                        {this.state.lowList.map(c => (\n                                                            <Chip label={c}></Chip>\n                                                        ))}\n                                                        </td>\n\n                                                    </tr>\n                                                </tbody>\n                                            </Table>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"columnn\" style={{float: \"left\", width: \"35%\"}}>\n                                            <center><img id='loweeer' src={SidebarIMG}/></center>\n                                        </div>\n                                    </div>\n                                </Tab>\n\n                                <Tab eventKey=\"schedule\" title=\"Schedule\">\n                                <div className={\"hasSchedules\"} style={(this.state.generatedContents.length > 0) ? {} : {display: \"none\"}}>\n                                    <Grid container >\n                                        <Grid item xs={12}>\n                                            <br></br>\n                                                <Typography gutterBottom variant=\"h3\" align=\"center\" style={{color:\"black\"}}>\n                                                SECOND TRIMESTER, AY 2019 - 2020\n                                                </Typography>\n                                        </Grid>\n\n                                        <Grid item xs={4} justify=\"center\" alignItems=\"center\" justifyContent=\"center\" alignContent=\"center\">\n                                            <center>\n                                          \n                                            <Button\n                                            variant=\"contained\"\n                                            className={classes.buttonStyle}\n                                            startIcon={<FileCopyIcon/>}\n                                            onClick={this.handleCopy}\n                                            >\n                                                Copy Schedule\n                                            </Button>\n                                           \n                                            </center>\n                                        </Grid>\n                                        <Snackbar open={this.state.copyBar} autoHideDuration={4000} onClose={this.handleCloseCopyBar}>\n                                            <Alert onClose={this.handleCloseCopyBar} severity=\"success\">\n                                            New schedule has been copied and saved! <a href=\"/\" style={{color:\"#D3D3D3\"}}>View in homepage</a>\n                                            </Alert>\n                                        </Snackbar>\n                                        \n                                        <Grid item xs={4} justify=\"center\" alignItems=\"center\" justifyContent=\"center\" alignContent=\"center\">\n                                            <center>\n                                            <Link to={'/compare_schedule/'+this.state.selectedFriendId}>\n                                                    <Button\n                                                    variant=\"contained\"\n                                                    className={classes.buttonStyle}\n                                                    startIcon={<CompareIcon/>}\n                                                    onClick={this.toggleModalCompare}\n                                                    >\n                                                        Compare Schedules\n                                                    </Button>\n                                            </Link>\n                                            </center>\n                                            <Modal isOpen={this.state.openModalCompare} toggle={this.toggleModalCompare} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" >\n                                                <ModalHeader toggle={this.toggleModalCompare}><h4>Compare Multiple Schedules</h4></ModalHeader>\n                                                <ModalBody>\n                                                    <h5>Who do you want to compare schedules with?</h5>\n                                                    <p>Maximum of 4 friends</p>\n                                                    <div style={{justifyContent:\"center\", justify: \"center\", justifyItems: \"center\", margin: \"auto 10px\"}}>\n                                                        <Autocomplete\n                                                            multiple\n                                                            id=\"checkboxes-tags-demo\"\n                                                            options={friendList}\n                                                            disableCloseOnSelect\n                                                            getOptionLabel={(option) => option.firstName + ' ' + option.lastName}\n                                                            defaultValue={[friendList[0]]}\n                                                            renderOption={(option, { selected }) => (\n                                                                <React.Fragment>\n                                                                <Checkbox\n                                                                    icon={icon}\n                                                                    checkedIcon={checkedIcon}\n                                                                    style={{ marginRight: 8 }}\n                                                                    checked={selected}\n                                                                />\n                                                                {option.firstName + ' ' + option.lastName}\n                                                                </React.Fragment>\n                                                            )}\n                                                            // style={{ width: 500 }}\n                                                            renderInput={(params) => (\n                                                                <TextField {...params} variant=\"outlined\" label=\"Checkboxes\" placeholder=\"Favorites\" />\n                                                            )}\n                                                            onChange={this.compareOnChange}\n                                                        />\n                                                    </div>\n                                                </ModalBody>\n                                                <ModalFooter>\n                                                    <Button style={{color: \"gray\"}} onClick={this.toggleModalCompare}>Cancel</Button>\n                                                    <Button color=\"primary\">Done</Button>\n                                                    \n                                                </ModalFooter>\n                                            </Modal>  \n                                        </Grid>\n\n                                        <Grid item xs={4} justify=\"center\" alignItems=\"center\" justifyContent=\"center\" alignContent=\"center\">\n                                            <center>\n    \n                                                    <Button\n                                                    variant=\"contained\"\n                                                    className={classes.buttonStyle}\n                                                    startIcon={<EventAvailableIcon/>}\n                                                    onClick={this.toggleModalSuggest}\n                                                    >\n                                                        Coordinate Schedules\n                                                    </Button>\n                                            </center>\n                                            <Modal isOpen={this.state.openModalSuggest} toggle={this.toggleModalSuggest} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" >\n                                                <ModalHeader toggle={this.toggleModalSuggest}><h4>Generate Suggested Friend Schedules</h4></ModalHeader>\n                                                <ModalBody>\n                                                    <h5>Generate possible schedules you can share with your friends \n                                                        <Tooltip title=\"The schedules generated will try to assign everyone possible same classes and leave certain time-slots empty in the schedule for the consideration of your friends' dissimilar courses\" placement=\"right\">\n                                                            <HelpIcon />\n                                                        </Tooltip>\n                                                      \n                                                    </h5>\n                                                    <p>Who do you want to create a schedule with?</p>\n                                                    <div style={{justifyContent:\"center\", justify: \"center\", justifyItems: \"center\", margin: \"auto 10px\"}}>\n                                                        <Autocomplete\n                                                            multiple\n                                                            id=\"checkboxes-tags-demo\"\n                                                            options={friendList}\n                                                            disableCloseOnSelect\n                                                            getOptionLabel={(option) => option.firstName + ' ' + option.lastName}\n                                                            defaultValue={[this.state.friend]}\n                                                            renderOption={(option, { selected }) => (\n                                                                <React.Fragment>\n                                                                <Checkbox\n                                                                    icon={icon}\n                                                                    checkedIcon={checkedIcon}\n                                                                    style={{ marginRight: 8 }}\n                                                                    checked={selected}\n                                                                />\n                                                                {option.firstName + ' ' + option.lastName}\n                                                                </React.Fragment>\n                                                            )}\n                                                            // style={{ width: 500 }}\n                                                            renderInput={(params) => (\n                                                                <TextField {...params} variant=\"outlined\" label=\"Friends\" />\n                                                            )}\n                                                            onChange={this.generateOnChange}\n                                                        />\n                                                    </div>\n                                                    <br></br>\n                                                    {/* <h6>Schedule Generation Configurations</h6>\n\n                                                    <Row horizontal='center' style={{margin: \"20px\"}}>\n                                                        <FormGroup>\n                                                            <FormControlLabel\n                                                                control = {<GreenCheckbox disabled checked={true} onChange={(e)=>this.handleConfigChanges(e, \"filter\")} color=\"primary\"/>}label=\"Filter out closed classes\" />\n                                                            <FormControlLabel\n                                                                control = {<GreenCheckbox disabled checked={true} onChange={(e)=>this.handleConfigChanges(e, \"saved\")} id={\"savedconfig\"} color=\"primary\"/>}label=\"Generate based on your saved schedules and classes\" />\n                                                            <FormControlLabel\n                                                                control = {<GreenCheckbox disabled checked={true} onChange={(e)=>this.handleConfigChanges(e, \"pref\")} id={\"prefconfig\"} color=\"primary\"/>}label=\"Generate based on your preferences\" />\n                                    \n                                                        </FormGroup>\n                                                    </Row> */}\n                                                    \n                                                </ModalBody>\n                                                <ModalFooter>\n                                                    <Button style={{color: \"gray\"}} onClick={this.toggleModalSuggest}>Cancel</Button>\n                                                    <Button onClick={this.handleCoordinate} color=\"primary\">Done</Button>\n                                                </ModalFooter>\n                                            </Modal>  \n                                        <div className=\"courseInputContainer\">\n                                            <Modal isOpen={!this.state.coordinating} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" centered={true}>\n                                                <ModalHeader>\n                                                    <center>\n                                                        <br></br><p>Please wait...In the process of loading your schedules</p>\n                                                        <ReactLoading type={'spin'} color={'#9BCFB8'} height={'10%'} width={'10%'}/>\n                                                    </center>\n                                                    </ModalHeader>\n                                                \n                                                    <ModalFooter>\n                                                        \n                                                        <Button onClick={this.onCancel}style={{color: \"gray\"}}>Cancel</Button>\n                                                    </ModalFooter>\n                                                \n                                            </Modal> \n                                        </div>\n                                        </Grid>\n\n                                        \n\n                                        <Grid item xs={12} className={'gridSavedContent'}>\n                                            <div id='savedContent' className='savedContent' style={{height: \"80em\", color:\"black\"}}>\n                                                <span>{this.state.currentContent}</span>\n                                            </div>\n                                        </Grid>\n\n                                        <Grid item xs={12} justify=\"center\" alignItems=\"center\" justifyContent=\"center\" alignContent=\"center\">\n                                            <div className = \"paginationContainer\" style={(this.state.generatedContents != null) ? {} : {display: \"none\"}}>\n                                                    <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                                                        <PaginationItem disabled={this.state.currentPage <= 0}>\n                                                            <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPage - 1)}\n                                                                previous/>\n                                                        </PaginationItem>\n                                                        {[...Array(this.state.pagesCount)].map((page, i) => \n                                                            <PaginationItem active={i === this.state.currentPage} key={i} className={'paginationItemStyle'}>\n                                                                <PaginationLink onClick={e => this.handlePageChange(e, i)} className={'paginationLinkStyle'}>\n                                                                {i + 1}\n                                                                </PaginationLink>\n                                                            </PaginationItem>\n                                                            )}\n                                                        <PaginationItem disabled={this.state.currentPage >= this.state.generatedContents.length - 1}>\n                                                            <PaginationLink\n                                                                onClick={e => this.handlePageChange(e, this.state.currentPage + 1)}\n                                                                next\n                                                            />\n\n                                                            </PaginationItem>\n                                                    </Pagination>\n                                            </div>\n                                        </Grid>\n                                        \n                                    </Grid>\n                                </div>\n                                <div className={\"noSchedules\"} style={((this.state.generatedContents.length <= 0) && this.state.hasSelectedFriend) ? {justifyContent: \"center\"} : {display: \"none\"}}>\n                                        <div className={\"sidemenu-main\"} style={{justifyContent: \"center\", alignItems: \"center\"}}>\n                                         \n                                            <center><img src={calendarIMG} style={{height: \"10em\", display:\"block\", whiteSpace: \"pre\", marginTop:\"10em\"}}/></center>\n                                            <br></br>\n                                            <center><h3>Your friend has not made any schedules yet</h3></center>\n                                            \n                                        </div>\n                                </div>\n                                </Tab>\n                            </Tabs>\n                              <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                                <Alert onClose={this.handleCloseSnackBar} severity=\"error\">\n                                  {this.state.snackBarText}\n                                </Alert>\n                              </Snackbar>\n                        </div>\n                        \n                        : \n                        <div className={\"sidemenu-main\"} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"90vh\"}}>\n                            <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                        </div>}\n                    </div>\n                    :\n                    <div className={\"sidemenu-main\"} /*style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"90vh\"}}*/>\n                        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                            <img src={friendDef} style={{height: \"10em\", display:\"block\", whiteSpace: \"pre\", marginTop:\"10em\"}}/>\n                        </div >\n                        <br></br>\n                        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", }}>\n                        <h3>Select a friend to see their schedule!</h3>\n                        </div>\n                    </div>\n                    }\n                </div>\n                : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                </div>}\n            </div>     \n        );\n    }\n}\n\n  FriendPage.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n\n  export default withStyles(styles)(withRouter(FriendPage));","import React, { Component } from \"react\";\nimport '../css/Preferences.css';\nimport axios from 'axios';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { DateTimePicker, KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardTimePicker } from \"@material-ui/pickers\";\n// import { IconButton, InputAdornment } from \"@material-ui/core\";\n// import DateFnsUtils from '@date-io/date-fns';\n\nimport { green, red } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport PropTypes from 'prop-types';\n\nimport ReactLoading from 'react-loading';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Row, Col } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport _ from 'underscore';\nimport { Redirect } from \"react-router\";\n\nconst GreenRadio = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n      // '&label': {\n      //   color: green[600],\n      // }\n    },\n    checked: {},\n    // label: {},\n  })((props) => <Radio color=\"default\" {...props} />)\n\n  const PrettoSlider = withStyles({\n    root: {\n      color: '#52af77',\n      height: 8,\n    },\n    thumb: {\n      height: 12,\n      width: 12,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 4,\n    },\n  })(Slider);\n\nconst styles = theme => ({\n    homeButton:{\n        color: \"green\", \n        marginLeft: \"10px\",\n        '&:hover': {\n            color: \"#79c879\"\n          },\n    },\n\n    iconStyle:{ \n        margin: \"10px\", \n          '&:hover': {\n            color: green[500],\n        },\n    },\n    buttonStyle:{\n        marginBottom: \"50px\",\n        textTransform: \"none\",\n        width: \"160px\",\n        borderRadius: \"25px\",\n        padding: \"10px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        backgroundColor: \"#16775D\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        marginTop: \"20px\",\n        justifyContent: 'center',\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#16775D\"\n        },\n    \n        formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n        },\n        selectEmpty: {\n        marginTop: theme.spacing(2),\n        },\n    }\n});\n\nconst GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nclass Survey extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n            selectedValue: 0,\n            dataReceived: true,\n            currentWords: [],\n            words: ['Accessible', 'Effortless', 'Ordinary', 'Advanced', 'Empowering', 'Organised', 'Ambiguous', 'Energetic', 'Overwhelming', 'Annoying', 'Engaging', 'Patronising', 'Appealing', 'Entertaining', 'Poor quality', 'Approachable', 'Exciting', 'Powerful', 'Attractive', 'Expected', 'Predictable', 'Awkward', 'Familiar', 'Professional', 'Boring', 'Fast', 'Relevant', 'Bright', 'Faulty', 'Reliable', 'Business-like', 'Flexible', 'Responsive', 'Busy', 'Fresh', 'Rigid', 'Clean', 'Friendly', 'Satisfying', 'Clear', 'Frustrating', 'Secure', 'Cluttered', 'Fun', 'Simple', 'Compelling', 'Hard to Use', 'Simplistic', 'Complex', 'High quality', 'Slow', 'Comprehensive', 'Illogical', 'Sophisticated', 'Confusing', 'Impressive', 'Stable', 'Consistent', 'Inadequate', 'Stimulating', 'Contradictory', 'Incomprehensible', 'Straightforward', 'Controllable', 'Inconsistent', 'Stressful', 'Convenient', 'Ineffective', 'System-oriented', 'Counter-intuitive', 'Innovative', 'Time-consuming', 'Creative', 'Insecure', 'Time-saving', 'Credible', 'Intimidating', 'Too technical', 'Cutting edge', 'Intuitive', 'Trustworthy', 'Dated', 'Irrelevant', 'Unattractive', 'Desirable', 'Meaningful', 'Unconventional', 'Difficult', 'Misleading', 'Understandable', 'Distracting', 'Motivating', 'Unpredictable', 'Dull', 'New', 'Unrefined', 'Easy to use', 'Non-standard', 'Usable', 'Effective', 'Obscure', 'Useful', 'Efficient', 'Old', 'Vague'],\n            wordList : [],\n            susResult: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,] /*[{question: \"I think I would like to use this system frequently\", value: \"4\"}]*/,\n            ueqResult: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,] /*[{question: \"annoying/enjoyable\", value:\"3\"}]*/,\n            nasaResult: [0, 0, 0, 0, 0, 0,] /*[{question: \"demand\", value:\"3\"}]*/,\n            smeqResult: 0,\n            panasResult: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,] /*[{question: \"interested\", value: \"2\"}]*/,\n            stressResult: [0,0,0,0,0] /*[{question: \"I find creating schedules for myself to be stressful\", value: \"1\"}]*/,\n            wordResult: []/*[{word: \"Accessible\", value: \"5\"}, {word: \"Appealing\", value: \"1\"}]*/,\n            cognitiveResult: [0,0,0,0,0,0,0,0,0,0,0,0,0,],\n            decisionResult: [0,0,0,0,0,0,],\n            groupResult: [0,0,0,0,0,0,0,0,0,],\n            comments: \"\",\n            stressComments: \"\",\n            cognitiveComments: \"\",\n            decisionComments: \"\",\n            groupComments: \"\",\n            name: \"\",\n            groupno: \"\",\n            method: \"\",\n            snackBarText: \"\",\n            snackBar: false,\n            redirect: false\n        }\n    }\n\n    componentDidMount(){\n        var id = 1;\n        const wordList = []\n        this.state.words.sort().map(word => {\n            wordList.push(\n                {\n                    id: id,\n                    word: word,\n                    checked: false\n                }\n            )\n            id += 1\n        })\n        this.setState({wordList})\n    }\n\n    checkEmptyFields = () => {\n        if(this.state.smeqResult == 0 || this.state.name.trim() == \"\" || this.state.groupno.trim() == \"\" || this.state.method.trim() == \"\"){\n            return false\n        }\n        if(this.state.susResult.includes(0)){\n            return false\n        }\n        if(this.state.ueqResult.includes(0)){\n            return false\n        }\n        if(this.state.nasaResult.includes(0)){\n            return false\n        }\n        if(this.state.panasResult.includes(0)){\n            return false\n        }\n        if(this.state.stressResult.includes(0)){\n            return false\n        }\n        if(this.state.cognitiveResult.includes(0)){\n            return false\n        }\n        if(this.state.decisionResult.includes(0)){\n            return false\n        }\n        if(this.state.groupResult.includes(0)){\n            return false\n        }\n        return true\n\n    }\n\n    handleChange = (e) => {\n        this.setState({selectedValue: e.target.value})\n    }\n\n//     handleWordChange = (event) => {\n//       var newWordList = this.state.wordList;\n//       var newCurrentWords = [];\n//       newWordList[event.target.id - 1].checked = event.target.checked;\n//       if(event.target.checked){\n//         newCurrentWords = this.state.currentWords;\n//         newCurrentWords.push(newWordList[event.target.id - 1]);\n//       }else{\n//         this.state.currentWords.map(word => {\n//             if(event.target.id != word.id){\n//                 newCurrentWords.push(word)\n//             }\n//         })\n//       }\n//       this.setState({wordList: newWordList, currentWords: newCurrentWords});\n//    };\n        susScale = (statement, id) => {\n            return (\n            <div className=\"scale\">\n                <span className={\"survey-statements\"}>{statement}</span>\n                <RadioGroup row aria-label=\"position\" name={\"sus\"+id}  onChange={(event)=>this.handleRadioChange(event, \"sus\", id)}>\n                    <span >Strongly Disagree</span>\n                    <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio/>}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"2\"\n                    control={<GreenRadio/>}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"3\"\n                    control={<GreenRadio/>}\n                    label=\"3\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"4\"\n                    control={<GreenRadio/>}\n                    label=\"4\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"5\"\n                    control={<GreenRadio/>}\n                    label=\"5\"\n                    labelPlacement=\"top\"\n                    />\n                <span>Strongly Agree</span>\n                </RadioGroup>\n            </div>\n            )\n        }\n\n        stressScale = (statement, id) => {\n            return (\n            <div className=\"scale\">\n                <span className={\"survey-statements\"}>{statement}</span>\n                <RadioGroup row aria-label=\"position\" name=\"position\" onChange={(event)=>this.handleRadioChange(event, \"stress\", id)}>\n                    <span >Strongly Disagree</span>\n                    <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio/>}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"2\"\n                    control={<GreenRadio/>}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"3\"\n                    control={<GreenRadio/>}\n                    label=\"3\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"4\"\n                    control={<GreenRadio/>}\n                    label=\"4\"\n                    labelPlacement=\"top\"\n                    />\n                <span>Strongly Agree</span>\n                </RadioGroup>\n            </div>\n            )\n        }\n\n        ueqScale = (left, right, type, id) => {\n            if(type){\n                return (\n                // <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                <div className=\"scale\" style={{placeItems: \"center\", justify: \"center\"}}>\n                    <RadioGroup row aria-label=\"position\" name={\"ueq\"+id}  onChange={(event)=>this.handleRadioChange(event, \"ueq\", id)}>\n                        <Grid container spacing={1}>\n                                            \n                            <Grid item xs={2}>\n                            <span>{left}</span>\n                            </Grid>\n\n                            <Grid item xs={8}>\n                            <FormControlLabel\n                            value=\"-3\"\n                            control={<GreenRadio/>}\n                            label=\"1\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"-2\"\n                            control={<GreenRadio/>}\n                            label=\"2\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"-1\"\n                            control={<GreenRadio/>}\n                            label=\"3\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"0\"\n                            control={<GreenRadio/>}\n                            label=\"4\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"1\"\n                            control={<GreenRadio/>}\n                            label=\"5\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"2\"\n                            control={<GreenRadio/>}\n                            label=\"6\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"3\"\n                            control={<GreenRadio/>}\n                            label=\"7\"\n                            labelPlacement=\"top\"\n                            />\n                            </Grid>\n                        <Grid item xs={2}>\n                        <span>{right}</span>\n                        </Grid>\n                    </Grid>\n                    </RadioGroup>\n                </div>\n                // </Row>\n                )\n            }else{\n                return (\n                // <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                <div className=\"scale\">\n                    <RadioGroup row aria-label=\"position\" name={\"ueq\"+id}  onChange={(event)=>this.handleRadioChange(event, \"ueq\", id)}>\n                    <Grid container spacing={1}>\n                                            \n                        <Grid item xs={2}>\n                        <span>{left}</span>\n                        </Grid>\n\n                        <Grid item xs={8}>\n                        <FormControlLabel\n                        value=\"3\"\n                        control={<GreenRadio/>}\n                        label=\"1\"\n                        labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                        value=\"2\"\n                        control={<GreenRadio/>}\n                        label=\"2\"\n                        labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                        value=\"1\"\n                        control={<GreenRadio/>}\n                        label=\"3\"\n                        labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                        value=\"0\"\n                        control={<GreenRadio/>}\n                        label=\"4\"\n                        labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                       value=\"-1\"\n                        control={<GreenRadio/>}\n                        label=\"5\"\n                        labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                        value=\"-2\"\n                        control={<GreenRadio/>}\n                        label=\"6\"\n                        labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                        value=\"-3\"\n                        control={<GreenRadio/>}\n                        label=\"7\"\n                        labelPlacement=\"top\"\n                        />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <span>{right}</span>\n                        </Grid>\n                    </Grid>\n                    </RadioGroup>\n                </div>\n                // </Row>\n                )\n            }\n\n        }\n\n        basicScale = (statement, id, type) => {\n            return (\n            <div className=\"scale\">\n                <span className={\"survey-statements\"}>{statement}</span>\n                <RadioGroup row aria-label=\"position\" name={type+id}  onChange={(event)=>this.handleRadioChange(event, type, id)}>\n                    <span >Very Difficult</span>\n                    <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio/>}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"2\"\n                    control={<GreenRadio/>}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"3\"\n                    control={<GreenRadio/>}\n                    label=\"3\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"4\"\n                    control={<GreenRadio/>}\n                    label=\"4\"\n                    labelPlacement=\"top\"\n                    />\n                <span>Very Easy</span>\n                </RadioGroup>\n                \n            </div>\n            )\n        }\n\n        panasScale = (statement, id) => {\n            return (\n            <div className=\"scale\">\n                <span className={\"survey-statements\"}>{statement}</span>\n                <RadioGroup row aria-label=\"position\" name={\"panas\"+id}  onChange={(event)=>this.handleRadioChange(event, \"panas\", id)}>\n                    <span >Very slightly or not at all</span>\n                    <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio/>}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"2\"\n                    control={<GreenRadio/>}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"3\"\n                    control={<GreenRadio/>}\n                    label=\"3\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"4\"\n                    control={<GreenRadio/>}\n                    label=\"4\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"5\"\n                    control={<GreenRadio/>}\n                    label=\"5\"\n                    labelPlacement=\"top\"\n                    />\n                <span>Extremely</span>\n                </RadioGroup>\n                \n            </div>\n            )\n        }\n\n        nasaScale = (type, statement, id) => {\n            return (\n            <div className=\"scale\">\n                 <h5>{type}</h5>\n                <span className={\"survey-statements\"}>{statement}</span>\n                <RadioGroup row aria-label=\"position\" name={\"nasa\"+id}  onChange={(event)=>this.handleRadioChange(event, \"nasa\", id)}>\n                   \n                    <span >Very Low</span>\n                    <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio/>}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"2\"\n                    control={<GreenRadio/>}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"3\"\n                    control={<GreenRadio/>}\n                    label=\"3\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"4\"\n                    control={<GreenRadio/>}\n                    label=\"4\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"5\"\n                    control={<GreenRadio/>}\n                    label=\"5\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"6\"\n                    control={<GreenRadio/>}\n                    label=\"6\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"7\"\n                    control={<GreenRadio/>}\n                    label=\"7\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"8\"\n                    control={<GreenRadio/>}\n                    label=\"8\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"9\"\n                    control={<GreenRadio/>}\n                    label=\"9\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"10\"\n                    control={<GreenRadio/>}\n                    label=\"10\"\n                    labelPlacement=\"top\"\n                    />\n                <span>Very High</span>\n                </RadioGroup>\n            </div>\n            )\n        }\n\n \n    handleRadioChange = (event, type, index) => {\n        // console.log(event.target.value);\n        console.log(type);\n        // console.log(index);\n        if(type == \"smeq\"){\n            this.state.smeqResult = event;\n        }else{\n            var score = event.target.value;\n        }\n        if(type == \"sus\"){\n            var susResult = this.state.susResult;\n            susResult.splice(index, 1, score);\n            console.log(susResult);\n            console.log(this.state.susResult);\n        }else if(type == \"ueq\"){\n            var ueqResult = this.state.ueqResult;\n            ueqResult.splice(index, 1, score);\n            console.log(ueqResult);\n            console.log(this.state.ueqResult);\n        }else if (type == \"nasa\"){\n            var nasaResult = this.state.nasaResult;\n            nasaResult.splice(index, 1, score);\n            console.log(nasaResult);\n            console.log(this.state.nasaResult);\n        }else if (type == \"panas\"){\n            var panasResult = this.state.panasResult;\n            panasResult.splice(index, 1, score);\n            console.log(panasResult);\n            console.log(this.state.panasResult);\n        }else if (type == \"stress\"){\n            var stressResult = this.state.stressResult;\n            stressResult.splice(index, 1, score);\n            console.log(stressResult);\n            console.log(this.state.stressResult);\n        }else if (type == \"cognitive\"){\n            var cognitiveResult = this.state.cognitiveResult;\n            cognitiveResult.splice(index, 1, score);\n            console.log(cognitiveResult);\n            console.log(this.state.cognitiveResult);\n        }else if (type == \"decision\"){\n            var decisionResult = this.state.decisionResult;\n            decisionResult.splice(index, 1, score);\n            console.log(decisionResult);\n            console.log(this.state.decisionResult);\n        }else if (type == \"group\"){\n            var groupResult = this.state.groupResult;\n            groupResult.splice(index, 1, score);\n            console.log(groupResult);\n            console.log(this.state.groupResult);\n        }\n\n        \n        }\n    \n    handleName=(event)=>{\n        this.setState({name: event.target.value});\n    }\n    handleField=(event, type)=>{\n        var explanation = event.target.value;\n        this.handleFieldChange(event, type)\n    }\n    handleFieldChange = (event, type) => {\n        var explanation = event.target.value;\n        if(type == \"name\"){\n            this.state.name = explanation;\n            console.log(this.state.name)\n            // this.setState({name: explanation});\n        }else if (type == \"groupno\"){\n            this.state.groupno = explanation;\n            // this.setState({groupno: explanation});\n        }else if(type == \"method\"){\n            this.state.method = explanation;\n            // this.setState({method: explanation});\n        }else if (type == \"cogntive\"){\n            // var cognitiveExplanation = this.state.cognitiveExplanation;\n            // cognitiveExplanation.splice(index, 1, explanation);\n            // console.log(cognitiveExplanation);\n            // console.log(this.state.cognitiveExplanation);\n\n        }else if (type == \"decision\"){\n            // var decisionExplanation = this.state.decisionExplanation;\n            // decisionExplanation.splice(index, 1, explanation);\n            // console.log(decisionExplanation);\n            // console.log(this.state.decisionExplanation);\n\n        }else if (type == \"group\"){\n            // var groupExplanation = this.state.groupExplanation;\n            // groupExplanation.splice(index, 1, explanation);\n            // console.log(groupExplanation);\n            // console.log(this.state.groupExplanation);\n\n        }else if (type == \"comments\"){\n            this.state.comments = explanation;\n\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"submit pressed\")\n        if(this.checkEmptyFields()){\n            var results = {\n                susResult: this.state.susResult,\n                ueqResult: this.state.ueqResult,\n                nasaResult: this.state.nasaResult,\n                smeqResult: this.state.smeqResult,\n                panasResult: this.state.panasResult,\n                stressResult: this.state.stressResult,\n                cognitiveResult: this.state.cognitiveResult,\n                decisionResult: this.state.decisionResult,\n                groupResult: this.state.groupResult,\n                comments: this.state.comments,\n                name: this.state.name,\n                groupno: this.state.groupno,\n                method: this.state.method\n            }\n            console.log(JSON.stringify(results).length)\n            axios.post('https://animosched-backend-backup.herokuapp.com/api/surveys/',{\n                data: JSON.stringify(results)\n            })\n            .then(res => {\n                this.setState({redirect: true})\n            }).catch(err => {\n                this.setState({snackBarText: \"Error in submitting form.\", snackBar: true})\n            })\n        }else{\n            this.setState({snackBarText: \"You have unanswered questions.\", snackBar: true})\n        }\n\n        // if (value === 'best') {\n        //   setHelperText('You got it!');\n        //   setError(false);\n        // } else if (value === 'worst') {\n        //   setHelperText('Sorry, wrong answer!');\n        //   setError(true);\n        // } else {\n        //   setHelperText('Please select an option.');\n        //   setError(true);\n        // }\n        \n      };\n\n      handleCloseSnackBar = () => {\n          this.setState({snackBar: false})\n      }\n\n\n    render() {\n        const { classes } = this.props;\n        const valuetext = \"1\";\n        const marks = [\n            {\n              value: 1.367578,\n              label: 'Not at all hard to do',\n            },\n            {\n              value: 11.62609,\n              label: 'Not very hard to do',\n            },\n            {\n              value: 25.53207,\n              label: 'A bit hard to do',\n            },\n            {\n              value: 36.47449,\n              label: 'Fairly hard to do',\n            },\n            {\n              value: 56.30762,\n              label: 'Rather hard to do',\n            },\n            {\n              value: 70.66954,\n              label: 'Pretty hard to do',\n            },\n            {\n              value: 85.03146,\n              label: 'Very hard to do',\n            },\n            {\n              value: 101.4450,\n              label: 'Very very hard to do',\n            },\n            {\n              value: 113.4133,\n              label: 'Tremendously hard to do',\n            },\n          ];\n        const susStatements = [\n            'I think I would like to use this system frequently',\n            'I found the system unnecessarily complex',\n            'I thought the system was easy to use',\n            'I think that I would need the support of a technical person to be able to use this system',\n            'I found the various functions in this system well integrated',\n            'I thought there was too much inconsistency in this system',\n            'I would imagine that most people will learn to use this system very quickly',\n            'I found the system very cumbersome (difficult/awkward) to use the system very quickly',\n            'I felt very confident using the system',\n            'I needed to learn a lot of things before I could get going with this system',\n        ]\n\n        const cognitiveStatements = [\n            'Overall, the task of creating a schedule for yourself was?',\n            'Keeping track of the classes I like was?',\n            'Keeping track of the classes I dislike was?',\n            'Keeping track of all the necessary information I need to create my schedule was?',\n            \"Keeping track of the classes I can't get (full or unavailable) was?\",\n            \"Keeping track of what I want in a schedule was?\",\n            \"Organizing my choices and options was?\",\n            \"Visualizing my schedule was?\",\n            'Resolving course conflicts was?',\n            'Creating different schedule possibilities was?',\n            \"Keeping track of the different schedule possibilities was?\",\n            \"Keeping track of the schedule I want was?\",\n            'Adjusting my schedule based on changes was?',\n           \n        ]\n\n        const decisionStatements = [\n            'Overall, making decisions while creating a schedule was?',\n            'Efficiently weighing my choices and options was?',\n            'Picking my classes was?',\n            'Picking a final schedule was?',\n            'Picking between equally good choices was?',\n            'Picking between equally bad choices was?',\n        ]\n\n        const collabStatements = [\n            'Overall, the task of creating a schedule with your friends was?',\n            'Coordinating with my friends to create a schedule was?',\n            'Coordinating possible similar classes with all of my friends was?',\n            \"Factoring in my friends' preferences in my schedule was?\",\n            \"Keeping track and resolving possible conflicts between our schedules was?\",\n            \"Creating multiple possible schedules with my friends was?\",\n            \"Adjusting my schedule due to sudden changes with my friends was?\",\n            \"Comparing my schedule with my friends' schedule was?\",\n            'Picking a schedule my friends and I are happy with',\n        ]\n\n        const panasStatements =[\n            // 'Interested',\n            // 'Distressed',\n            // 'Excited',\n            'Upset',\n            // 'Strong',\n            // 'Guilty',\n            // 'Scared',\n            'Hostile',\n            // 'Enthusiastic',\n            // 'Proud',\n            // 'Irritable',\n            'Alert',\n            'Ashamed',\n            'Inspired',\n            'Nervous',\n            'Determined',\n            'Attentive',\n            // 'Jittery',\n            'Active', \n            'Afraid'\n        ]\n\n        const ueqStatements = [\n            ['annoying', 'enjoyable', true],\n            ['not understandable', 'understandable', true],\n            ['creative', 'dull', false],\n            ['easy to learn', 'difficult to learn', false],\n            ['valuable', 'inferior', false],\n            ['boring', 'exciting',true],\n            ['not interesting', 'interesting', true],\n            ['unpredictable', 'predictable', true],\n            ['fast', 'slow', false],\n            ['inventive', 'conventional', false],\n            ['obstructive', 'supportive', true],\n            ['good', 'bad', false],\n            ['complicated', 'easy', true],\n            ['unlikable', 'pleasing', true],\n            ['usual', 'leading edge', false],\n            ['unpleasant', 'pleasant', true],\n            ['secure', 'not secure', false],\n            ['motivating', 'demotivating', false],\n            ['meets expectations', 'does not meet expectations', false],\n            ['inefficient', 'efficient', true],\n            ['clear', 'confusing', false],\n            ['impractical', 'practical', true],\n            ['organized', 'cluttered', false],\n            ['attractive', 'unattractive', false],\n            ['friendly', 'unfriendly', false],\n            ['conservative', 'innovative', true]\n        ]\n\n        const nasaStatements = [\n            ['Mental Demand', 'How mentally demanding was the task?'],\n            ['Physical Demand', 'How physically demanding was the task?'],\n            ['Temporal Demand', 'How hurried or rushed was the pace of the task?'],\n            ['Performance', 'How successful were you in accomplishing what you were asked to do?'],\n            ['Effort', 'How hard did you have to work to accomplish your level of performance?'],\n            ['Frustration', 'How insecure, discouraged, irritated, stressed, and annoyed were you?'],\n        ]\n\n        const stressStatements = [\n            'I find creating schedules for myself to be stressful',\n            'I think coordinating class schedules with my friends is stressful',\n            'I find it stressful to re-adjust just my schedule because of sudden changes',\n            'I find it stressful to re-adjust my schedule with my friends after sudden changes',\n            'It is stressful to keep track of a lot of things for creating my/our schedule',\n            \n        ]\n\n\n      return (\n        <div>\n            {this.props.menu('preferences')}\n\n                {this.state.dataReceived ? \n                <div className=\"survey-category\">\n                   <div>\n                    {this.state.redirect ?\n                    <Redirect to=\"/surveythanks\"></Redirect>\n                    : null}\n                   <form onSubmit={this.handleSubmit}>\n                    <h1 style={{marginTop: \"20px\"}}>Survey</h1>\n                    <span>Please make sure to answer all the questions in the questionnaires below, you're not allowed to skip any questions. All of these questions are related to the method you used for the experiment and your experience with it. Thank you!</span>\n                    <div>\n                    <br></br>\n                    \n                    <h3>Participant Details</h3>\n                    <TextField id=\"outlined-basic\" label=\"Last Name, First Name\"  name=\"fullName\" placeholder=\"Velasco, John\" style={{marginRight: \"25\", width: \"750\"}} onChange={(event)=>this.handleField(event, \"name\")}></TextField>\n                    <br></br>\n                    <br></br>\n                    <TextField id=\"outlined-basic\" label=\"Group Number\"  name=\"Group Number\" placeholder=\"A1\" style={{marginRight: \"25\", width: \"750\"}} onChange={(event)=>this.handleField(event, \"groupno\")}></TextField>\n                    <br></br>\n                    <br></br>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">Method Used</InputLabel>\n                        <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        style={{width: \"230px\"}}\n                        onChange={(event)=>this.handleField(event, \"method\")}\n                        >\n                        <MenuItem value={\"Traditional Method\"}>Your own usual method</MenuItem>\n                        <MenuItem value={\"AnimoSched Method\"}>AnimoSched method</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </div>\n                        <div>\n                        </div>\n                            <div className=\"timePreferences\">\n                                <h2>SUS Survey\n                                </h2>\n                                <p>Please accomplish all the questions with the first answer you think of. All of these questions pertain to the method you used for the experiment.\n                                    Feel free to ask for clarifications if you do not understand the question. Thank you!</p>\n                                <p>*note: System refers to the method or process you use to create a schedule in this experiment.</p>\n                                \n                                <div className=\"preference-category-content\">\n                                    {susStatements.map((statement, index)=> \n                                        this.susScale(statement, index)\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"ueq-survey\">\n                                <h2>User Experience Questionnaire\n                                </h2>\n                                <p>For the assessment of the method or process you used for this experiment, please fill out the following questionnaire.\n                                    The questionnaire consists of pairs of contrasting attributes that may apply to\n                                    the process. The circles between the attributes represent gradations between\n                                    the opposites. You can express your agreement with the attributes by ticking\n                                    the circle that most closely reflects your impression</p>\n                                <p>Please decide spontaneously. Don’t think too long about your decision to\n                                    make sure that you convey your original impression.</p>\n                                <p>Sometimes you may not be completely sure about your agreement with a\n                                    particular attribute or you may find that the attribute does not apply completely\n                                    to the particular process. Nevertheless, please tick a circle in every line.</p>\n                                <p>It is your personal opinion that counts. Please remember: there is no wrong or\n                                    right answer!</p>\n                                <div className=\"preference-category-content\">\n                                <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                                    <div style={{placeItems: \"center\"}}>\n                                        {ueqStatements.map((statement, index )=> \n                                        this.ueqScale(statement[0], statement[1], statement[2], index)\n                                    )}</div>\n                                </Row>\n                                </div>\n                            </div>\n\n                            <div className=\"nasa-survey\">\n                                <h2>NASA TLX\n                                </h2>\n                                <span>This questionnaire assesses the work load you've experienced with the tasks.</span>\n                                <div className=\"preference-category-content\">\n                                        {nasaStatements.map((statement, index )=> \n                                        this.nasaScale(statement[0], statement[1], index)\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"workloadPreferences\">\n                                <h2>Subjective Mental Effort Questionnaire (SMEQ)\n                                </h2>\n                                <span>To assess mental effort you exerted in the tasks, use the slider that goes from 0-150 to specify the difficulty. The levels of difficulty are also found in the slider.</span>\n                                <div className=\"preference-category-content\" >\n                                \n                                <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                                <div className=\"scale\" style={{height: 500, placeItems: \"center\"}}>\n                                <PrettoSlider\n                                valueLabelDisplay=\"auto\"\n                                orientation=\"vertical\"\n                                // getAriaValueText={valuetext}\n                                defaultValue={0}\n                                aria-labelledby=\"vertical-slider\"\n                                marks={marks}\n                                max={150}\n                                onChange={(event, value)=>this.handleRadioChange(value , \"smeq\", \"none\")}\n                                />\n                                </div>\n                                </Row>\n                                </div>\n                            </div>\n\n                            <div className=\"panas-survey\">\n                                <h2>PANAS\n                                </h2>\n                                <span>This questionnaire contains 10-items of emotions. Please answer them based on all the emotions you've felt throughout the tasks.</span>\n                                <div className=\"preference-category-content\">\n                                        {panasStatements.map((statement, index) => \n                                        this.panasScale(statement, index)\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"stress-survey\">\n                                <h2>Stress\n                                </h2>\n                                <p>We want to understand which specific parts of the process makes you feel stressed. Please answer the scale and explain your answer so we may understand what your logic and thought process was behind it.</p>\n                                <div className=\"preference-category-content\">\n                                    {stressStatements.map((statement, index) => \n                                        this.stressScale(statement, index)\n                                    )}\n                                     \n                                </div>\n                            </div>\n\n                            {/* <div className=\"classDetails\">\n                                <h2>Word List</h2>\n                                \n                                <div className=\"preference-category-content\">\n                                \n                                    <div className={'wordlist-survey'}>\n                                        <div className={'subheader'}>Word List</div>\n                                        <p>Step 1: Read over the following list of words. Considering the method you have just used, tick those\n                                        words that best describe your experience with it. You can choose as many words as you wish. </p>\n                                        <Grid container spacing={1}> */}\n                                            {/* <Grid item xs={12}>\n                                            <Grid item xs={4}>\n                                            \n                                            <FormGroup>\n                                              {this.state.wordList.filter(word => word.id < 36).map((filteredWord)=>{\n                                                  return <FormControlLabel control = {<GreenCheckbox checked={filteredWord.checked} onChange={this.handleWordChange} id={filteredWord.id}  color=\"primary\"/>}label={filteredWord.word} />;\n                                                })}\n                                            \n                                            </FormGroup>\n                                            </Grid>\n\n                                            <Grid item xs={4}>\n                                            <FormGroup>\n                                                {this.state.wordList.filter(word => word.id >= 36 && word.id <= 70).map((filteredWord)=>{\n                                                  return <FormControlLabel control = {<GreenCheckbox checked={filteredWord.checked} onChange={this.handleWordChange} id={filteredWord.id}  color=\"primary\"/> } label={filteredWord.word} />;\n                                                })}\n                                                {/* <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[0].checked} onChange={this.handleWordChange} id={this.state.wordList[0].id}  color=\"primary\"/>}label={this.state.wordList[0].word} />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[1].checked} onChange={this.handleWordChange} id={this.state.wordList[1].id} color=\"primary\"/>}label={this.state.wordList[1].word} />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[2].checked} onChange={this.handleWordChange} id={this.state.wordList[2].id} color=\"primary\"/>}label={this.state.wordList[2].word}/>\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[3].checked} onChange={this.handleWordChange} id={this.state.wordList[3].id} color=\"primary\"/>}label={this.state.wordList[3].word} /> */}\n                                            {/* </FormGroup>\n                                            </Grid>\n\n                                            <Grid item xs={4}>\n                                            <FormGroup>\n                                                {this.state.wordList.filter(word => word.id > 70 && word.id <= 105).map((filteredWord)=>{\n                                                  return <FormControlLabel control = {<GreenCheckbox checked={filteredWord.checked} onChange={this.handleWordChange} id={filteredWord.id}  color=\"primary\"/>}label={filteredWord.word} />;\n                                                })} */}\n                                                {/* <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[0].checked} onChange={this.handleWordChange} id={this.state.wordList[0].id}  color=\"primary\"/>}label={this.state.wordList[0].word} />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[1].checked} onChange={this.handleWordChange} id={this.state.wordList[1].id} color=\"primary\"/>}label={this.state.wordList[1].word} />\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[2].checked} onChange={this.handleWordChange} id={this.state.wordList[2].id} color=\"primary\"/>}label={this.state.wordList[2].word}/>\n                                                <FormControlLabel\n                                                control = {<GreenCheckbox checked={this.state.wordList[3].checked} onChange={this.handleWordChange} id={this.state.wordList[3].id} color=\"primary\"/>}label={this.state.wordList[3].word} /> */}\n                                            {/* </FormGroup>\n                                            </Grid>\n                                        </Grid>\n\n                                        \n                                        <p>Step 2: Now look at the words you have ticked. Input five of these words in the box below that you think are most\n                                    descriptive of the product. </p>\n                                        <Autocomplete\n                                            multiple\n                                            id=\"tags-outlined\"\n                                            options={this.state.currentWords}\n                                            getOptionLabel={(option) => option.word}\n                                            // defaultValue={}\n                                            filterSelectedOptions\n                                            renderInput={(params) => (\n                                            <TextField\n                                                {...params}\n                                                variant=\"outlined\"\n                                                label=\"\"\n                                                // placeholder=\"\"\n                                            />\n                                            )} */}\n                                        {/* /> */}\n                                        {/* </Grid> */}\n                                    {/*</div>\n                                  </div>\n                                </div> */}\n\n\n                            \n                          \n                            <div className=\"cognitive-survey\">\n                                <h2>Cognitive Load & Decision-making\n                                </h2>\n                                <p>\n                                We want to understand which specific parts of the process makes you feel overwhelmed (cognitive load) and your thoughts on decision-making. \n                                </p>\n                                <div className=\"preference-category-content\">\n                                    {cognitiveStatements.map((statement, index )=> \n                                        this.basicScale(statement, index, \"cognitive\")\n                                    )}\n                                   \n                                    {decisionStatements.map((statement, index )=> \n                                        this.basicScale(statement, index, \"decision\")\n                                    )}\n                                 \n                                    {collabStatements.map((statement, index) => \n                                        this.basicScale(statement, index, \"group\")\n                                    )}\n                             \n                                </div>\n                                     \n                            </div>\n\n                            {/* <div className=\"decision-survey\">\n                                <h2>Decision-Making\n                                </h2>\n                                <p>\n                                We want to understand your thoughts in decision-making when creating schedules with the given method or process. Please answer the scale and explain your answer so we may understand what your logic and thought process was behind it.\n                                </p>\n                                <div className=\"preference-category-content\">\n                                    {decisionStatements.map((statement, index )=> \n                                        this.basicScale(statement, index, \"decision\")\n                                    )}\n                                     <div>\n                                     <h5>Please include any other insights you had about decision-making and your explanation for how you answered the questions above.</h5>\n                                        <TextField\n                                        id=\"standard-full-width\"\n                                        label=\"Explain your answer above here including the thought process you had related to it\"\n                                        style={{ margin: 8 }}\n                                        placeholder=\"Answer here\"\n                                        fullWidth\n                                        margin=\"normal\"\n                                        onChange={(event)=>this.handleField(event, \"decision\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"collab-survey\">\n                                <h2>Group Schedule Coordination\n                                </h2>\n                                <p>\n                                We want to understand your thoughts in coordinating with your friends when creating schedules with the given method or process. Please answer the scale and explain your answer so we may understand what your logic and thought process was behind it.\n                                </p>\n                                <div className=\"preference-category-content\">\n                                    {collabStatements.map((statement, index) => \n                                        this.basicScale(statement, index, \"group\")\n                                    )}\n                                     <div>\n                                     <h5>Please include any other insights you had about group schedule coordination and your explanation for how you answered the questions above.</h5>\n                                        <TextField\n                                        id=\"standard-full-width\"\n                                        label=\"Explain your answer above here including the thought process you had related to it\"\n                                        style={{ margin: 8 }}\n                                        placeholder=\"Answer here\"\n                                        fullWidth\n                                        margin=\"normal\"\n                                        onChange={(event)=>this.handleField(event, \"group\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div> */}\n                            \n                            <div className=\"comments-survey\">\n                                <h2>Comments\n                                </h2>\n                                <p>Feel free to leave any interesting comments and insights here if it was not covered in any of the questions above.</p>\n                                <div className=\"preference-category-content\">\n                                    <TextField\n                                    id=\"standard-full-width\"\n                                    label=\"Comments, insights, realizations\"\n                                    style={{ margin: 8 }}\n                                    placeholder=\"Answer here\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    onChange={(event) => this.handleField(event, \"comments\")}\n                                    // InputLabelProps={{\n                                    //     shrink: true,\n                                    // }}\n                                    />\n                                </div>\n                            </div>\n\n                            <center><Button\n                                variant=\"contained\"\n                                className={classes.buttonStyle}\n                                onClick={this.handleSave}\n                                type=\"submit\"\n                                >\n                                SUBMIT\n                            </Button></center>\n                    </form>\n                    </div>             \n                              <Snackbar open={this.state.snackBar} autoHideDuration={4000} onClose={this.handleCloseSnackBar}>\n                                <Alert onClose={this.handleCloseSnackBar} severity=\"error\">\n                                  {this.state.snackBarText}\n                                </Alert>\n                              </Snackbar>\n                </div>\n                : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"90vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                </div> }\n            {/* </div> */}\n\n        </div>        \n      );\n    }\n  }\n\n  Survey.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles)(Survey);","import React, { Component } from \"react\";\nimport axios from 'axios'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass Admin extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            rows: [],\n            enlists: [],\n            addIdnum: '',\n            dataReceived: false\n        }\n    }\n\n    createData(course, section, classnumber, idnum, name, enrolled, capacity) {\n        return { course, section, classnumber, idnum, name, enrolled, capacity};\n    }\n\n    createEnlistData(id, idnum, allowed){\n        return { id, idnum, allowed};\n    }\n\n    componentDidMount(){\n        this.setState({dataReceived: false})\n        const rows = []\n        const enlists = []\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/carts/').then(res => {\n            res.data.map(cart => {\n                axios.get('https://animosched-backend-backup.herokuapp.com/api/getclass/'+cart.classnumber).then(res => {\n                    var data = res.data[0][0]\n                    if(data != undefined){\n                        rows.push(this.createData(data.course, data.section, data.classnumber, cart.idnum, cart.name, data.current_enrolled, data.max_enrolled))\n                        this.setState({rows})\n                    }\n                })\n            })\n        })\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/enlists/').then(res => {\n            console.log(res.data)\n            res.data.map(enlist => {\n                enlists.push(this.createEnlistData(enlist.id, enlist.idnum, enlist.allowed))\n                this.setState({enlists})\n            })\n        })\n        this.setState({dataReceived: true})\n    }\n\n    handleSimul = () => {\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/enlist/').then(res => {\n            window.location.reload()\n        })\n    }\n\n    handleEmptyAll = () => {\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/empty/').then(res => {\n            window.location.reload()\n        })\n    }\n\n    handleFull = (classnumber) => {\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/modifyoffering/', {\n            classnumber,\n            action: 'full'\n        }).then(res => {\n            window.location.reload()\n        })\n    }\n\n    handleEmpty = (classnumber) => {\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/modifyoffering/', {\n            classnumber,\n            action: 'empty'\n        }).then(res => {\n            window.location.reload()\n        })\n    }\n\n    handleAllow = (id) => {\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/enlists/', {\n            idnum: id,\n            allowed: true\n        }).then(res => {\n            window.location.reload()\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({addIdnum: e.target.value})\n    }\n\n    handleAddEnlist = () => {\n        axios.post('https://animosched-backend-backup.herokuapp.com/api/enlists/', {\n            idnum: this.state.addIdnum,\n            allowed: true\n        }).then(res => {\n            window.location.reload()\n        })\n    }\n    handleDeleteEnlist = (id) => {\n        axios.delete('https://animosched-backend-backup.herokuapp.com/api/enlists/'+id).then(res => {\n            window.location.reload()\n        })\n    }\n    render() {\n      return (\n        <div>\n            {this.state.dataReceived ?\n            <div>\n            <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell>Action</TableCell>\n                    <TableCell>Course</TableCell>\n                    <TableCell align=\"right\">Classnumber</TableCell>\n                    <TableCell align=\"right\">ID Number</TableCell>\n                    <TableCell align=\"right\">Name</TableCell>\n                    <TableCell align=\"right\">Enrolled</TableCell>\n                    <TableCell align=\"right\">Capacity</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {this.state.rows.map((row) => (\n                    <TableRow key={row.course}>\n                    <TableCell><Button variant=\"contained\" onClick={() => this.handleFull(row.classnumber)}>Full</Button>\n                    <Button variant=\"contained\" onClick={() => this.handleEmpty(row.classnumber)}>Empty</Button>\n                    <Button variant=\"contained\" onClick={() => this.handleAllow(row.idnum)}>Allow</Button></TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {row.course + ' ' + row.section}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.classnumber}</TableCell>\n                    <TableCell align=\"right\">{row.idnum}</TableCell>\n                    <TableCell align=\"right\">{row.name}</TableCell>\n                    <TableCell align=\"right\">{row.enrolled}</TableCell>\n                    <TableCell align=\"right\">{row.capacity}</TableCell>\n                    </TableRow>\n                ))}\n                </TableBody>\n            </Table>\n            </TableContainer>\n            <Divider>\n\n            </Divider>\n\n            <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell>Actions</TableCell>\n                    <TableCell>ID Number</TableCell>\n                    <TableCell>Allowed</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {this.state.enlists.map((row) => (\n                    <TableRow key={row.idnum}>\n                    <TableCell>\n                        <Button variant=\"contained\" onClick={() => this.handleDeleteEnlist(row.id)}>Delete</Button>\n\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {row.idnum}\n                    </TableCell>\n                    <TableCell>{row.allowed ? 'true' : 'false'}</TableCell>\n                    </TableRow>\n                ))}\n                </TableBody>\n            </Table>\n            </TableContainer>\n\n            <span>\n                <Button variant=\"contained\" onClick={this.handleSimul}>Simulate Enlistment</Button>\n                <Button variant=\"contained\" onClick={this.handleEmptyAll}>Empty course offerings</Button>\n            </span>\n            <span>\n                <TextField onChange={this.handleChange}></TextField>\n                <Button variant=\"contained\" onClick={this.handleAddEnlist}>Add allowed</Button>\n            </span>\n            </div>\n            :\n            null}\n\n        </div>        \n      );\n    }\n  }\n\n  Admin.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\nexport default (Admin);","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport '../css/CompareSchedule.css';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { Pagination, PaginationItem, PaginationLink} from 'reactstrap';\n\nimport SchedViewHome from '../components/SchedViewHome';\nimport axios from 'axios';\nimport groupArray from 'group-array'\nimport ReactLoading from 'react-loading';\n\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n    backBtn:{\n      color: \"white\",\n      /*marginLeft: \"5px\",*/\n    '&:hover': {\n        color: \"#d3d3d3\"\n      },\n    },\n  });\n\nclass CompareSchedule extends Component {\n     constructor(props){\n        super(props);\n\n        this.state = {\n            currentPageUser: 0,\n            currentContentUser: \"\",\n            generatedContentsUser: [],\n            pagesCountUser: 1,\n            currentPageFriend: 0,\n            currentContentFriend: \"\",\n            generatedContentsFriend: [],\n            pagesCountFriend: 1,\n            schedulesUser: [],\n            schedulesFriend: [],\n            dataReceived: false,\n            friendName: \"\",\n            matched: [],\n            matchPalette: ['#ee4035', '#f37736', '#fdf498', '#7bc043', '#0392cf', '#d11141', '#00b159', '#00aedb', '#f37735', '#ffc425'],\n            matchPalCount: 0,\n        }\n    }\n\n    createTimeslot = (day, hour, minute) =>{\n        if(day == 'M'){\n            return new Date(2018, 5, 25, hour, minute);\n        }else if(day == 'T'){\n            return new Date(2018, 5, 26, hour, minute);\n        }else if(day == 'W'){\n            return new Date(2018, 5, 27, hour, minute);\n        }else if(day == 'H'){\n            return new Date(2018, 5, 28, hour, minute);\n        }else if(day == 'F'){\n            return new Date(2018, 5, 29, hour, minute);\n        }else if(day == 'S'){\n            return new Date(2018, 5, 30, hour, minute);\n        }\n    }\n\n    createData(classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled, compareMatch) {\n      return { classNmbr, course, section, faculty, day, startTime, endTime, room, capacity, enrolled, compareMatch };\n    }\n\n    checkCompare(){\n        var user = this.state.generatedContentsUser;\n        var friend = this.state.generatedContentsFriend;\n        for(var i = 0 ; i < user.length ; i++){\n          for(var j = 0 ; j < friend.length ; j++){\n            console.log(user)\n            console.log(friend)\n            var userContent = user[i].props.tableContent\n            var friendContent = friend[j].props.tableContent\n            var newMatched = [];\n            for(var k = 0 ; k < userContent.length ; k++){\n              for(var l = 0 ; l < friendContent.length ; l++){\n                if(userContent[k].classNmbr == friendContent[l].classNmbr){\n                  user[i].props.tableContent[k].compareMatch = true\n                  friend[j].props.tableContent[l].compareMatch = true\n                  newMatched.push(user[i].title);\n                  \n                  this.setState({generatedContentsUser: user})\n                  this.setState({generatedContentsFriend: friend})\n                  console.log(user)\n                  console.log(friend)\n                }else{\n                  // user[i].props.tableContent.compareMatch = false\n                  // friend[i].props.tableContent.compareMatch = false\n                  // this.setState({generatedContentsUser: user})\n                  // this.setState({generatedContentsFriend: friend})\n                  // console.log(\"no hit\")\n                }\n              }\n            }\n          }\n        }\n        console.log(newMatched);\n        this.setState({matched: newMatched});\n        // this.state.currentContentUser.props = newMatched;\n        // this.state.currentContentFriend.props = newMatched;\n        // console.log(this.state.matched);\n    }\n\n    componentDidMount(){\n      if(!this.state.dataReceived){\n        axios.get('https://animosched-backend-backup.herokuapp.com/api/schedulelist/'+localStorage.getItem('user_id')+'/')\n        .then(res => {\n            const schedules = []\n            res.data.map(newSchedule =>{\n                var count = 0;\n                const scheduleContent = []\n                const tableContent = []\n                var matched = []\n                var earliest = 9\n                var latest = 17\n                var arranged = groupArray(newSchedule.courseOfferings, 'classnumber');\n                for (let key in arranged) {\n                  var days = []\n                  var day = ''\n                  var classnumber = ''\n                  var course = ''\n                  var section = ''\n                  var faculty = ''\n                  var timeslot_begin = ''\n                  var timeslot_end = ''\n                  var room = ''\n                  var max_enrolled = ''\n                  var current_enrolled = ''\n                  arranged[key].map(offering => {\n                    days.push(offering.day)\n                    classnumber = offering.classnumber\n                    course = offering.course\n                    section = offering.section\n                    faculty = offering.faculty\n                    timeslot_begin = offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3)\n                    timeslot_end = offering.timeslot_end.substring(0, offering.timeslot_end.length - 3)\n                    room = offering.room\n                    max_enrolled = offering.max_enrolled\n                    current_enrolled = offering.current_enrolled\n                  })\n                  days.map(day_code => {\n                    day += day_code;\n                  })\n                  const newTableContent = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled, false);\n                  tableContent.push(newTableContent)\n                }\n                newSchedule.courseOfferings.map(offering=>{\n                    var startTime = offering.timeslot_begin.split(':');\n                    var endTime = offering.timeslot_end.split(':');\n                    const newContent = \n                    {\n                        id: count,\n                        title: offering.course + ' ' + offering.section,\n                        section: offering.section,\n                        startDate: this.createTimeslot(offering.day,startTime[0],startTime[1]),\n                        endDate: this.createTimeslot(offering.day,endTime[0],endTime[1]),\n                        location: offering.room,\n                        professor: offering.faculty,\n                        startTime: offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3),\n                        endTime: offering.timeslot_end.substring(0, offering.timeslot_end.length - 3),\n                        days: offering.day,\n                        classCode: offering.classnumber \n                    }\n                    if(earliest > Number(startTime[0])){\n                        earliest = Number(startTime[0])\n                    }\n                    if(latest < Number(endTime[0]) + 1){\n                        latest = Number(endTime[0]) + 1\n                    }\n                    scheduleContent.push(newContent);\n\n                    count += 1;\n                })\n                schedules.unshift({\n                    id: newSchedule.id,\n                    title: newSchedule.title,\n                    scheduleContent: scheduleContent,\n                    tableContent: tableContent, \n                    prefContent: [],\n                    conflictsContent: newSchedule.information,\n                    earliest: earliest,\n                    latest: latest,\n                    offerings: newSchedule.courseOfferings\n                });\n            })\n            console.log(schedules)\n            this.setState({schedulesUser: schedules});\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/schedulelist/'+this.props.params.id+'/')\n            .then(res => {\n                const schedules = []\n                res.data.map(newSchedule =>{\n                    var count = 0;\n                    const scheduleContent = []\n                    const tableContent = []\n                    var earliest = 9\n                    var latest = 17\n                    var arranged = groupArray(newSchedule.courseOfferings, 'classnumber');\n                    for (let key in arranged) {\n                      var days = []\n                      var day = ''\n                      var classnumber = ''\n                      var course = ''\n                      var section = ''\n                      var faculty = ''\n                      var timeslot_begin = ''\n                      var timeslot_end = ''\n                      var room = ''\n                      var max_enrolled = ''\n                      var current_enrolled = ''\n                      arranged[key].map(offering => {\n                        days.push(offering.day)\n                        classnumber = offering.classnumber\n                        course = offering.course\n                        section = offering.section\n                        faculty = offering.faculty\n                        timeslot_begin = offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3)\n                        timeslot_end = offering.timeslot_end.substring(0, offering.timeslot_end.length - 3)\n                        room = offering.room\n                        max_enrolled = offering.max_enrolled\n                        current_enrolled = offering.current_enrolled\n                      })\n                      days.map(day_code => {\n                        day += day_code;\n                      })\n                      const newTableContent = this.createData(classnumber, course, section, faculty, day, timeslot_begin, timeslot_end, room, max_enrolled, current_enrolled, false);\n                      tableContent.push(newTableContent)\n                    }\n                    newSchedule.courseOfferings.map(offering=>{\n                        var startTime = offering.timeslot_begin.split(':');\n                        var endTime = offering.timeslot_end.split(':');\n                        const newContent = \n                        {\n                            id: count,\n                            title: offering.course + ' ' + offering.section,\n                            section: offering.section,\n                            startDate: this.createTimeslot(offering.day,startTime[0],startTime[1]),\n                            endDate: this.createTimeslot(offering.day,endTime[0],endTime[1]),\n                            location: offering.room,\n                            professor: offering.faculty,\n                            startTime: offering.timeslot_begin.substring(0, offering.timeslot_begin.length - 3),\n                            endTime: offering.timeslot_end.substring(0, offering.timeslot_end.length - 3),\n                            days: offering.day,\n                            classCode: offering.classnumber \n                        }\n                        if(earliest > Number(startTime[0])){\n                            earliest = Number(startTime[0])\n                        }\n                        if(latest < Number(endTime[0]) + 1){\n                            latest = Number(endTime[0]) + 1\n                        }\n                        scheduleContent.push(newContent);\n\n                        count += 1;\n                    })\n                    schedules.unshift({\n                        id: newSchedule.id,\n                        title: newSchedule.title,\n                        scheduleContent: scheduleContent,\n                        tableContent: tableContent, \n                        prefContent: [],\n                        conflictsContent: newSchedule.information,\n                        earliest: earliest,\n                        latest: latest,\n                        offerings: newSchedule.courseOfferings\n                    });\n                })\n                console.log(schedules)\n                this.setState({schedulesFriend: schedules});\n                this.setSchedInfo();\n                this.setState({success: true});\n                this.setState({loading: false});\n                this.setState({dataReceived: true})\n            }).catch(error => {\n                console.log(error)\n            })\n            axios.get('https://animosched-backend-backup.herokuapp.com/api/users/'+this.props.params.id+'/')\n            .then(res => {\n                this.setState({friendName: res.data.first_name})\n            }).catch(error => {\n                console.log(error)\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n\n      }\n\n      const friends = []\n      friends.push(this.props.params.id)\n      axios.post('https://animosched-backend-backup.herokuapp.com/api/generateschedulefriends/',{\n        user_id: localStorage.getItem('user_id'),\n        filterFull: true,\n        friends: friends\n      }).then(res => {\n        console.log(res.data)\n      }).catch(err => {\n        console.log(err.response)\n      })\n    }\n    \n    handlePageChange = (e,index, type) => {\n        this.setState({dataReceived: false}, () => {\n          if(type == \"user\"){\n              var user = this.state.generatedContentsUser[index];\n              var friend = this.state.currentContentFriend;\n              var userContent = user.props.tableContent\n              var friendContent = friend.props.tableContent\n              user.props.matched.length = 0;\n              friend.props.matched.length = 0; \n              for(var k = 0 ; k < userContent.length ; k++){\n                for(var l = 0 ; l < friendContent.length ; l++){\n                  user.props.tableContent[k].compareMatch = false\n                  friend.props.tableContent[l].compareMatch = false \n                }\n              }\n              for(var k = 0 ; k < userContent.length ; k++){\n                for(var l = 0 ; l < friendContent.length ; l++){\n                  if(userContent[k].classNmbr == friendContent[l].classNmbr){\n                    user.props.tableContent[k].compareMatch = true\n                    friend.props.tableContent[l].compareMatch = true\n                    // user[i].props.matched\n                    // friend[j].props.matched\n                    user.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n                    friend.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n                  }else{\n                \n                    // console.log(\"no hit\")\n                  }\n                }\n              }\n              this.setState({currentContentUser: user})\n              this.setState({currentContentFriend: friend})\n              this.setState({currentPageUser: index})\n              this.setState({currentPageFriend: this.state.currentPageFriend})\n              this.setState({dataReceived: true})\n              console.log(\"pressed page \" + index);\n          }else if (type == \"friend\"){\n              var user = this.state.currentContentUser;\n              var friend = this.state.generatedContentsFriend[index];\n              var userContent = user.props.tableContent\n              var friendContent = friend.props.tableContent\n              user.props.matched.length = 0;\n              friend.props.matched.length = 0;\n              for(var k = 0 ; k < userContent.length ; k++){\n                for(var l = 0 ; l < friendContent.length ; l++){\n                  user.props.tableContent[k].compareMatch = false\n                  friend.props.tableContent[l].compareMatch = false \n                }\n              }\n              for(var k = 0 ; k < userContent.length ; k++){\n                for(var l = 0 ; l < friendContent.length ; l++){\n                  if(userContent[k].classNmbr == friendContent[l].classNmbr){\n                    user.props.tableContent[k].compareMatch = true\n                    friend.props.tableContent[l].compareMatch = true\n                    // user[i].props.matched\n                    // friend[j].props.matched\n                    user.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n                    friend.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n                  }else{\n                \n                    // console.log(\"no hit\")\n                  }\n                }\n              }\n              this.setState({currentContentUser: user})\n              this.setState({currentContentFriend: friend})\n              this.setState({currentPageUser: this.state.currentPageUser})\n              this.setState({currentPageFriend: index})\n              this.setState({dataReceived: true})\n              console.log(\"pressed page \" + index);\n              \n          }\n        })\n\n\n\n        // var newMatched = [];\n        // for(var i = 0 ; i < user.length ; i++){\n        //   for(var j = 0 ; j < friend.length ; j++){\n        //     console.log(user)\n        //     console.log(friend)\n        //     var userContent = user[i].props.tableContent\n        //     var friendContent = friend[j].props.tableContent\n        //     var newMatched = [];\n        //     for(var k = 0 ; k < userContent.length ; k++){\n        //       for(var l = 0 ; l < friendContent.length ; l++){\n        //         if(userContent[k].classNmbr == friendContent[l].classNmbr){\n        //           user[i].props.tableContent[k].compareMatch = true\n        //           friend[j].props.tableContent[l].compareMatch = true\n        //           // user[i].props.matched\n        //           // friend[j].props.matched\n        //           user[i].props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n        //           friend[j].props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n        //           console.log(user)\n        //           console.log(friend)\n                 \n        //         }else{\n        //           // user[i].props.tableContent.compareMatch = false\n        //           // friend[i].props.tableContent.compareMatch = false\n        //           // this.setState({generatedContentsUser: user})\n        //           // this.setState({generatedContentsFriend: friend})\n        //           // console.log(\"no hit\")\n        //         }\n        //       }\n        //     }\n        //   }\n        // }\n        // this.setState({generatedContentsUser: user})\n        // this.setState({generatedContentsFriend: friend})\n\n        \n        //           console.log(user)\n        //           console.log(friend)\n        //           var userContent = user.props.tableContent\n        //           var friendContent = friend.props.tableContent\n        //           for(var k = 0 ; k < userContent.length ; k++){\n        //             for(var l = 0 ; l < friendContent.length ; l++){\n        //               if(userContent[k].classNmbr == friendContent[l].classNmbr){\n        //                 user.props.tableContent[k].compareMatch = true\n        //                 friend.props.tableContent[l].compareMatch = true\n        //                 // user[i].props.matched\n        //                 // friend[j].props.matched\n        //                 user.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n        //                 friend.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n        //                 console.log(user)\n        //                 console.log(friend)\n        //                 }else{\n                      \n        //                   // console.log(\"no hit\")\n        //                 }\n        //               }\n        //             }\n\n        // this.setState({currentContentUser: user}, ()=>{\n        //   this.setState({currentContentFriend: friend})\n        // })\n        \n        \n\n  }\n    \ncomponentWillMount(){\n    this.setState({pagesCountUser: this.state.generatedContentsUser.length});\n    this.setState({pagesCountFriend: this.state.generatedContentsFriend.length});\n    this.setState({currentContentUser: this.state.generatedContentsUser[this.state.currentPageUser]}, () => {\n    });\n    this.setState({currentContentFriend: this.state.generatedContentsFriend[this.state.currentPageFriend]}, () => {\n    });\n}\n\nsetSchedInfo = () => {\n    const palette = JSON.parse(localStorage.getItem('palette'))\n    const paletteOne = ['#1161c6','#136cdd','#1d79ec','#3587ee','#4d95f0','#64a3f2','#7cb1f4']\n    const paletteTwo = ['#c61a11','#dd1e13','#ec291d','#ee3f35','#f0554d','#f26c64','#f4827c']\n    \n        console.log(this.state.schedulesUser)\n         var generatedContentsUser = this.state.schedulesUser.map((item, index) =>\n        <SchedViewHome key={item.id} id={item.id} offerings={item.offerings} tableContent={item.tableContent} scheduleContent={item.scheduleContent} titleName={item.title} allowEdit={this.state.allowEdit} earliest={7} latest={18} palette={paletteOne} matched={[]}/>\n        );\n        // this.setState({hideGenContent: false});\n\n        console.log(this.state.schedulesFriend)\n         var generatedContentsFriend = this.state.schedulesFriend.map((item, index) =>\n        <SchedViewHome key={item.id} id={item.id} offerings={item.offerings} tableContent={item.tableContent} scheduleContent={item.scheduleContent} titleName={item.title} allowEdit={this.state.allowEdit} earliest={7} latest={18} palette={paletteTwo} matched={[]}/>\n        );\n        // this.setState({hideGenContent: false});\n        this.setState({generatedContentsFriend}, ()=>{\n            this.setState({currentContentFriend: generatedContentsFriend[0]}, () => {\n//                this.setState({hasSelectedFriend: true})\n              console.log(this.state.currentContentFriend)\n              this.setState({generatedContentsUser}, ()=>{\n                  this.setState({currentContentUser: generatedContentsUser[0]}, () => {\n      //                this.setState({hasSelectedFriend: true})\n                    console.log(this.state.currentContentUser)\n                      var user = this.state.currentContentUser;\n                      var friend = this.state.currentContentFriend;\n                      console.log(user)\n                      console.log(friend)\n                      var userContent = user.props.tableContent\n                      var friendContent = friend.props.tableContent\n                      for(var k = 0 ; k < userContent.length ; k++){\n                        for(var l = 0 ; l < friendContent.length ; l++){\n                          if(userContent[k].classNmbr == friendContent[l].classNmbr){\n                            user.props.tableContent[k].compareMatch = true\n                            friend.props.tableContent[l].compareMatch = true\n                            // user[i].props.matched\n                            // friend[j].props.matched\n                            user.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n                            friend.props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n                            console.log(user)\n                            console.log(friend)\n                          }else{\n                        \n                            // console.log(\"no hit\")\n                          }\n                        }\n                      }\n                      this.setState({currentContentUser: user})\n                      this.setState({currentContentFriend: friend})\n                  })\n                  this.setState({pagesCountUser: generatedContentsUser.length});\n                  this.setState({currentPageUser: 0})\n              });\n            })\n            this.setState({pagesCountFriend: generatedContentsFriend.length});\n            this.setState({currentPageFriend: 0})\n         });\n        // var user = this.state.generatedContentsUser;\n        // var friend = this.state.generatedContentsFriend;\n        // var newMatched = [];\n        // for(var i = 0 ; i < user.length ; i++){\n        //   for(var j = 0 ; j < friend.length ; j++){\n        //     console.log(user)\n        //     console.log(friend)\n        //     var userContent = user[i].props.tableContent\n        //     var friendContent = friend[j].props.tableContent\n        //     var newMatched = [];\n        //     for(var k = 0 ; k < userContent.length ; k++){\n        //       for(var l = 0 ; l < friendContent.length ; l++){\n        //         if(userContent[k].classNmbr == friendContent[l].classNmbr){\n        //           user[i].props.tableContent[k].compareMatch = true\n        //           friend[j].props.tableContent[l].compareMatch = true\n        //           // user[i].props.matched\n        //           // friend[j].props.matched\n        //           user[i].props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n        //           friend[j].props.matched.push(userContent[k].course + ' ' + userContent[k].section);\n        //           console.log(user)\n        //           console.log(friend)\n         \n\n\n\n  }\n    \n    render() {\n\n        \n        const { classes } = this.props; \n        return (  \n            <div>\n                <div class=\"header\" style={{backgroundColor: \"#006A4E\", padding:\"10px\"}}>\n                    <a className=\"backBtn\" href=\"/view_friends\">\n                    <div className={\"backBtn\"} style={{marginTop: \"5px\"}}></div>\n                    <ArrowBackIosIcon fontSize=\"large\"className={classes.backBtn} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                    </a>\n                    <div style={{color:\"white\"}}>\n                        <center><h5 >SECOND TRIMESTER, AY 2019 - 2020</h5></center>\n                    </div>\n                    {/* <img class='img-responsive' id='lower' src={SidebarIMG}/> */}\n                </div>\n\n                {this.state.dataReceived ?\n                <div>\n                     <Grid container style={{marginTop: \"30px\"}}>\n                     <Grid item xs={12} justify=\"center\" alignItems=\"center\" justifyContent=\"center\" alignContent=\"center\">\n                        {/* <center>\n\n                                <Button\n                                variant=\"contained\"\n                                className={classes.buttonStyle}\n                                startIcon={<EventAvailableIcon/>}\n                                onClick={this.toggleModalSuggest}\n                                >\n                                    Coordinate Schedules\n                                </Button>\n                        </center>\n                              <Modal isOpen={this.state.openModalSuggest} toggle={this.toggleModalSuggest} returnFocusAfterClose={false} backdrop={true} data-keyboard=\"false\" >\n                                  <ModalHeader toggle={this.toggleModalSuggest}><h4>Generate Suggested Friend Schedules</h4></ModalHeader>\n                                  <ModalBody>\n                                      <h5>Generate possible schedules you can share with your friends. Who do you want to create a schedule with?</h5>\n                                      <p>Maximum of 4 friends</p>\n                                      <div style={{justifyContent:\"center\", justify: \"center\", justifyItems: \"center\", margin: \"auto 10px\"}}>\n                                          <TextField\n                                              key={\"friendPage_searchFriends\"}\n                                              id=\"friendPage_searchFriends\"\n                                              variant= \"outlined\"\n                                              \n                                              style={{ width: \"95%\", marginBottom: \"10%\", justifyContent: \"center\" }}\n                                              filterSelectedOptions\n                                              label=\"Search Friends\" \n                                              onChange={this.handleSearchChange}\n                                             \n                                              />\n                                             \n                                      </div>\n\n                                      <ListGroup flush style={{height: \"50%\", overflowX: \"hidden\"}}>\n                                          \n                                          {friendList.map((friend, index) => (\n                                              <ListGroupItem action>\n                                                  <Row>\n                            \n                                                      <Col xs={12} md={8}>\n                                                      <FormControlLabel\n                                                          control = {<GreenCheckbox checked={this.state.friendListSuggest[index].checked} onChange={this.handleSuggestChange} id={index} color=\"primary\"/>}label={friend.firstName + \" \" + friend.lastName} />\n                                                         \n                                                      </Col>\n\n                                                      \n                                                  </Row>            \n                                              </ListGroupItem>\n                                          ))}\n\n                                          {friendList.length == 0 &&\n                                              <ListGroupItem>\n                                                  <center>No Friends</center>\n                                              </ListGroupItem>\n                                          }\n                                      </ListGroup>\n                                  </ModalBody>\n                                  <ModalFooter>\n                                      <Link to={'/compare_schedule/'+this.state.selectedFriendId}> \n                                      <Button color=\"primary\">Done</Button>\n                                      </Link>\n                                      <Button style={{color: \"gray\"}} onClick={this.toggleModalSuggest}>Cancel</Button>\n                                  </ModalFooter>\n                              </Modal>   */}\n                          </Grid>\n                          <Grid item xs={6}>\n\n                           <center><h6>Your Schedule</h6></center>\n                            <div className={\"scheduleContent\"}>\n                                  <center><span>{this.state.currentContentUser}</span></center>\n                                  <div className = \"paginationContainer\" style={(this.state.generatedContentsUser != null) ? {} : {display: \"none\"}}>\n                                      <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                                          <PaginationItem disabled={this.state.currentPageUser <= 0}>\n                                              <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPageUser - 1, \"user\")}\n                                                  previous/>\n                                          </PaginationItem>\n                                          {[...Array(this.state.pagesCountUser)].map((page, i) => \n                                              <PaginationItem active={i === this.state.currentPageUser} key={i} className={'paginationItemStyle'}>\n                                                  <PaginationLink onClick={e => this.handlePageChange(e, i, \"user\")} className={'paginationLinkStyle'}>\n                                                  {i + 1}\n                                                  </PaginationLink>\n                                              </PaginationItem>\n                                              )}\n                                          <PaginationItem disabled={this.state.currentPageUser >= this.state.generatedContentsUser.length - 1}>\n                                              <PaginationLink\n                                                  onClick={e => this.handlePageChange(e, this.state.currentPageUser + 1, \"user\")}\n                                                  next\n                                              />\n\n                                              </PaginationItem>\n                                      </Pagination>\n                                  </div>\n                            </div>\n\n                          </Grid>\n                          <Grid item xs={6}>\n  \n                            <center><h6>{this.state.friendName}'s Schedule</h6></center>\n                            <div className={\"scheduleContent\"}>\n                                <center><span>{this.state.currentContentFriend}</span></center>\n                                <div className = \"paginationContainer\" style={(this.state.generatedContentsFriend != null) ? {} : {display: \"none\"}}>\n                                  <Pagination aria-label=\"Page navigation example\" style={{justifyContent: \"center\"}}>\n                                      <PaginationItem disabled={this.state.currentPageFriend <= 0}>\n                                          <PaginationLink onClick={e => this.handlePageChange(e, this.state.currentPageFriend - 1, \"friend\")}\n                                              previous/>\n                                      </PaginationItem>\n                                      {[...Array(this.state.pagesCountFriend)].map((page, i) => \n                                          <PaginationItem active={i === this.state.currentPageFriend} key={i} className={'paginationItemStyle'}>\n                                              <PaginationLink onClick={e => this.handlePageChange(e, i, \"friend\")} className={'paginationLinkStyle'}>\n                                              {i + 1}\n                                              </PaginationLink>\n                                          </PaginationItem>\n                                          )}\n                                      <PaginationItem disabled={this.state.currentPageFriend >= this.state.generatedContentsFriend.length - 1}>\n                                          <PaginationLink\n                                              onClick={e => this.handlePageChange(e, this.state.currentPageFriend + 1, \"friend\")}\n                                              next\n                                          />\n\n                                          </PaginationItem>\n                                  </Pagination>\n                                </div>\n                            </div>\n                          </Grid>\n                      </Grid>\n                </div>\n                : \n                  <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"80vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                  </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nCompareSchedule.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(CompareSchedule);","import React, { Component } from \"react\";\nimport '../css/Forms.css';\nimport SidebarIMG from '../images/Login.svg';\nimport { Redirect } from \"react-router-dom\";\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\n\nimport { Container, Row, Col, Jumbotron, Card, CardBody } from \"reactstrap\";\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    buttonLogin: {\n          fontSize: \"100%\",\n          width: \"110%\",\n          alignItems: 'center',\n          justifyContent: 'center',\n          textTransform: \"none\",\n          borderRadius: \"30px\",\n          padding: \"10px\",\n          paddingLeft: \"30px\",\n          paddingRight: \"30px\",\n          backgroundColor: \"green\",\n          border: \"none\",\n          color: \"white\",\n          boxShadow: \"6px 5px #e8f4ea\",\n          borderStyle: \"solid\",\n          borderColor: \"green\",\n          '&:hover': {\n              color: \"green\",\n              backgroundColor: \"#FFFFFF\",\n            },\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n    backBtn:{\n      color: \"white\", \n      marginLeft: \"5px\",\n    '&:hover': {\n        color: \"#d3d3d3\"\n      },\n    },\n  });\n  \n  var sectionStyle = {\n    // width: \"100%\",\n    minHeight: \"100vh\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    overflow: \"hidden\",\n    backgroundImage: \"linear-gradient(#086e53, #579d8b)\"\n  \n  };\n\nclass EmailVerificationComplete extends Component {\n    constructor(props) {\n        super();\n    }\n\n    render() {\n      const { classes } = this.props;\n      return (\n            <div style={sectionStyle}>\n                <div className={\"backBtn\"}>\n                <a className=\"backBtn\" href=\"/\">\n                <ArrowBackIosIcon fontSize=\"large\"className={classes.backBtn} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n                    </a>\n                </div>\n            \n\n                <div style={{textAlign: 'center'}}>\n                    <Row>\n                        <Col />\n                        <Col lg=\"8\">\n                        <h1 style={{color: \"white\"}}>\n                            <img\n                            alt=\"\"\n                            src=\"/logo.svg\"\n                            width=\"40\"\n                            height=\"40\"\n                            className=\"d-inline-block align-top\"/> \n                        AnimoSched</h1>\n                        <Jumbotron style={{padding: 32, backgroundColor: \"white\", marginLeft: \"15%\", marginRight: \"15%\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n                            <h3>\n                            Your email has been verified!\n                            </h3>\n\n                            <a href=\"/login\">\n                            <Row horizontal = 'center' style={{justifyContent: \"center\"}}>\n                                <div className={classes.root}>\n                                <div className={classes.wrapper}> \n                                    <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.buttonLogin}\n                \n\n                                    style={{}}\n                                    >\n                                    Login here\n                                    </Button>\n                                  \n                                </div>\n                                </div>\n                            </Row>\n                            </a>\n\n\n                        </Jumbotron>\n                        </Col>\n                        <Col />\n                    </Row>\n                </div>\n        </div>    \n      )\n    \n            // <div>\n            //     <Redirect to=\"/login\"></Redirect>\n            //     <div class=\"sidenav\">\n            //         <a className=\"backBtn\" href=\"/\">\n            //             <div className={\"backBtn\"}></div>\n            //             <ArrowBackIosIcon fontSize=\"large\" style={{color: \"white\", marginLeft: \"5px\"}} viewBox=\"0 0 1 24\"/> <span className=\"backBtn\">Back</span>\n            //         </a>\n            //         <img class='img-responsive' id='lower' src={SidebarIMG}/>\n            //     </div>\n\n            //     <div class=\"sidenav-main\">\n            //         <br/>\n            //         <div id=\"reset-message\">\n            //             <h5>Your email has been verified!</h5><br />\n            //             <h3><a href=\"/login\">Log in?</a></h3>\n            //         </div>              \n            //     </div>\n            // </div>        \n    }\n  }\n\n  EmailVerificationComplete.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\n    export default withStyles(styles)(EmailVerificationComplete);","import React, { Component } from \"react\";\nimport '../css/Preferences.css';\nimport axios from 'axios';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { DateTimePicker, KeyboardDateTimePicker, MuiPickersUtilsProvider, KeyboardTimePicker } from \"@material-ui/pickers\";\n// import { IconButton, InputAdornment } from \"@material-ui/core\";\n// import DateFnsUtils from '@date-io/date-fns';\n\nimport { green, red } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport PropTypes from 'prop-types';\n\nimport ReactLoading from 'react-loading';\n\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Row, Col } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport _ from 'underscore';\nimport personIMG from '../assets/following_the_idea.png';\n\nconst GreenRadio = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n      // '&label': {\n      //   color: green[600],\n      // }\n    },\n    checked: {},\n    // label: {},\n  })((props) => <Radio color=\"default\" {...props} />)\n\n  const PrettoSlider = withStyles({\n    root: {\n      color: '#52af77',\n      height: 8,\n    },\n    thumb: {\n      height: 12,\n      width: 12,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 4,\n    },\n  })(Slider);\n\nconst styles = theme => ({\n    homeButton:{\n        color: \"green\", \n        marginLeft: \"10px\",\n        '&:hover': {\n            color: \"#79c879\"\n          },\n    },\n\n    iconStyle:{ \n        margin: \"10px\", \n          '&:hover': {\n            color: green[500],\n        },\n    },\n    buttonStyle:{\n        marginBottom: \"50px\",\n        textTransform: \"none\",\n        width: \"160px\",\n        borderRadius: \"25px\",\n        padding: \"10px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        backgroundColor: \"#16775D\",\n        border: \"none\",\n        color: \"white\",\n        boxShadow: \"6px 5px #e8f4ea\",\n        borderStyle: \"solid\",\n        borderColor: \"#16775D\",\n        marginTop: \"20px\",\n        justifyContent: 'center',\n        '&:hover': {\n            backgroundColor: \"white\",\n            color: \"#16775D\"\n        },\n    \n        formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n        },\n        selectEmpty: {\n        marginTop: theme.spacing(2),\n        },\n    }\n});\n\nconst GreenCheckbox = withStyles({\n    root: {\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nclass Survey extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            dataReceived: true\n        }\n    }\n\n    render(){\n      return (\n        <div>\n            {this.props.menu('preferences')}\n\n                {this.state.dataReceived ? \n                <div className=\"survey-category\">\n                    <br></br>\n                    <br></br>\n                    <center><h1 style={{marginTop: \"20px\"}}>Thank you for participating!</h1></center>\n                    <center><h3>Thank you so much for you time. You and your friends are officially part of the raffle!</h3></center>\n                    <br></br>\n                    <center><img style={{width:\"30%\"}} src={personIMG}/></center>\n                </div>\n                : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"90vh\"}}>\n                    <ReactLoading type={'spin'} color={'#9BCFB8'} height={'5%'} width={'5%'}/>\n                </div> }\n            {/* </div> */}\n\n        </div>        \n      );\n    }\n  }\n\n  Survey.propTypes={\n    classes: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles)(Survey);","// frontend/src/App.js\n\nimport React, { Component } from \"react\";\nimport './App.css';\n\nimport { HashRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\n\n// PAGES\nimport MainPage from \"./pages/Index.jsx\";\nimport LoginPage from \"./pages/Login.jsx\";\nimport RegisterPage from \"./pages/Register.jsx\";\nimport ResetPasswordPage from \"./pages/ResetPassword.jsx\";\nimport ResetPasswordDonePage from \"./pages/ResetPasswordDone.jsx\";\nimport ResetPasswordConfirmPage from \"./pages/ResetPasswordConfirm.jsx\";\nimport ResetPasswordCompletePage from \"./pages/ResetPasswordComplete.jsx\";\nimport ProfilePage from \"./pages/Profile.jsx\";\nimport FlowchartPage from \"./pages/Flowchart.jsx\";\nimport GenerateSchedulePage from \"./pages/GenerateSchedule.jsx\";\nimport GenerateScheduleFriendsPage from \"./pages/GenerateScheduleFriends.jsx\";\nimport PreferencesPage from \"./pages/Preferences.jsx\";\nimport SearchCoursesPage from \"./pages/SearchCourses.jsx\";\nimport SearchCoursesSimplePage from \"./pages/SearchCoursesSimple.jsx\";\nimport SearchCoursesGuestPage from \"./pages/SearchCoursesGuest.jsx\";\nimport ViewFriendsPage from \"./pages/FriendPage.jsx\";\nimport SurveyPage from \"./pages/Survey.jsx\";\nimport AdminPage from \"./pages/Admin.jsx\";\nimport Menu from \"./components/Menu.jsx\";\nimport CompareSchedulePage from \"./pages/CompareSchedule.jsx\";\nimport EmailVerificationCompletePage from \"./pages/EmailVerificationComplete.jsx\";\nimport SurveyThanksPage from \"./pages/SurveyThanks.jsx\";\n\nimport axios from 'axios';\nimport qs from 'qs';\nimport queryString from 'query-string'\nimport {useCookies} from 'react-cookie'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      logged_in: localStorage.getItem('user_id') ? true : false,\n      first_name: localStorage.getItem('first_name'),\n      last_name: localStorage.getItem('last_name'),\n      user_id: localStorage.getItem('user_id'),\n      colleges:{},\n      degrees:{}\n    };\n  }\n\n  // this.state.logged_in --> indicates if user is logged in or not\n\n  componentDidMount(){\n\n    // var cookie = 'qi0ftcskpd1eiufxhopx8xqsx5dsqlos';\n    // console.log('cookie check')\n    // console.log(cookie)\n\n    //   axios.get('https://animosched-backend-backup.herokuapp.com/api/auth/user/',\n    //   {\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     withCredentials: true\n    //   })\n    //   .then(res => {\n    //     console.log(res)\n    //     this.setState({\n    //       logged_in: true,\n    //       first_name: res.data.first_name,\n    //       last_name: res.data.last_name,\n    //       id_num: ''\n    //     })\n    //   })\n    //   .catch(error => {\n    //     console.log(error.response)\n    //   })\n  }\n\n  componentWillMount(){\n    var checkDate = '10/07/20-1'\n    var integrityCheck = localStorage.getItem('integrity_check')\n    if(integrityCheck != checkDate){\n      this.wipe_logout()\n      localStorage.setItem('integrity_check', checkDate)\n    }\n\n    // if(this.state.logged_in){\n    //   axios.get('https://animosched-backend-backup.herokuapp.com/api/auth/user/',\n    //   {\n    //     headers: {\n    //       Authorization: `JWT ${localStorage.getItem('token')}` \n    //     },\n    //     withCredentials: true\n    //   })\n    //   .then(res => {\n    //     this.setState({\n    //       logged_in: true,\n    //       first_name: res.data.first_name,\n    //       last_name: res.data.last_name,\n    //       id_num: ''\n    //     })\n    //   })\n    //   .catch(error => {\n    //     console.log(error)\n    //   })\n    // }\n  }\n\n  handle_login = (data, _callback) => {\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/auth/login/', data,\n    {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(res => {\n        localStorage.setItem('token', res.data.token);\n        localStorage.setItem('first_name', res.data.user.first_name);\n        localStorage.setItem('last_name', res.data.user.last_name);\n        localStorage.setItem('user_id', res.data.user.id);\n        this.setState({\n          logged_in: true,\n          first_name: res.data.user.first_name,\n          last_name: res.data.user.last_name,\n          user_id: res.data.user.id,\n        })\n        _callback(null);\n    })\n    .catch(error => {\n        console.log(error.response)\n        _callback(error.response);\n    });\n  }\n\n  responseGoogle = (data, _callback) => {\n    const email = data.email\n    const lastName = data.lastName\n    const firstName = data.firstName\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/googlelogin/',{\n      email, firstName, lastName \n    }).then(res => {\n        // localStorage.setItem('token', res.data.token);\n        if(res.data.loggedIn){\n          localStorage.setItem('first_name', firstName);\n          localStorage.setItem('last_name', lastName);\n          localStorage.setItem('user_id', res.data.user);\n          this.setState({\n            logged_in: true,\n            first_name: firstName,\n            last_name: lastName,\n            user_id: res.data.user,\n          })\n        }\n      _callback(res.data.loggedIn)\n    }).catch(err => {\n      console.log(err)\n      console.log(err.response)\n    })\n    // this.setState({redirect: true})\n  }\n\n\n  handle_register = (data, _callback) => {\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/auth/registration/', data,\n    {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(res => {\n        console.log(res.data);\n        localStorage.setItem('token', res.data.token);\n        localStorage.setItem('first_name', res.data.user.first_name);\n        localStorage.setItem('last_name', res.data.user.last_name);\n        localStorage.setItem('user_id', res.data.user.id);\n        this.setState({\n          logged_in: true,\n          first_name: res.data.user.first_name,\n          last_name: res.data.user.last_name,\n          user_id: res.data.user.id,\n        })\n        _callback(null);\n    })\n    .catch(error => {\n        console.log(error)\n        _callback(error);\n    });\n  }\n\n  handle_resetPassword = (data, _callback) => {\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/auth/password/reset/', data,\n    {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(res => {\n        console.log(res.data);\n        console.log(res.data.email);\n        _callback(true);\n    })\n    .catch(error => {\n        console.log(error.response)\n        _callback(false);\n    });\n  }\n\n  handle_resetPasswordConfirm = (data, _callback) => {\n    axios.post('https://animosched-backend-backup.herokuapp.com/api/auth/password/reset/confirm/', data,\n    {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(res => {\n        console.log(res.data);\n        _callback(true);\n    })\n    .catch(error => {\n        console.log(error.response)\n        _callback(false);\n    });\n  }\n\n  wipe_logout = () => {\n    localStorage.clear();\n    this.setState({\n      logged_in: false,\n      first_name: '',\n      last_name: '',\n      id_num: '',\n    });\n    return (\n      <Redirect to=\"/login\" />\n    );\n  }\n\n  handle_logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('first_name');\n    localStorage.removeItem('last_name');\n    localStorage.removeItem('id_num');\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('hints');\n    this.setState({\n      logged_in: false,\n      first_name: '',\n      last_name: '',\n      id_num: '',\n    });\n    return (\n      <Redirect to=\"/login\" />\n    );\n  }\n\n  loginPage = (props) => {\n    return (\n      <LoginPage\n        handle_login={this.handle_login}\n        responseGoogle={this.responseGoogle}\n        props={props}\n      />\n    );\n  }\n\n  registerPage = (props) => {\n    return (\n      <RegisterPage\n        handle_register={this.handle_register}\n        props={props}\n      />\n    );\n  }\n\n  resetPasswordPage = () => {\n    return (\n      <ResetPasswordPage\n        handle_resetPassword={this.handle_resetPassword}\n      />\n    );\n  }\n\n  resetPasswordDonePage = () => {\n    return (\n      <ResetPasswordDonePage/>\n    );\n  }\n\n  resetPasswordConfirmPage = () => {\n    return (\n      <ResetPasswordConfirmPage\n        handle_resetPasswordConfirm={this.handle_resetPasswordConfirm}\n      />\n    );\n  }\n\n  resetPasswordCompletePage = () => {\n    return (\n      <ResetPasswordCompletePage/>\n    );\n  }\n\n  menu = () => {\n    return (\n      <Menu\n        handle_logout={this.handle_logout}\n        logged_in={this.state.logged_in}\n        first_name={this.state.first_name}\n        last_name={this.state.last_name}\n      />\n    )\n  }\n\n  menu = (currentPage) => {\n    return (\n      <Menu\n        handle_logout={this.handle_logout}\n        logged_in={this.state.logged_in}\n        first_name={this.state.first_name}\n        last_name={this.state.last_name}\n        currentPage={currentPage}\n      />\n    )\n  }\n\n  mainPage = (props) => {\n    console.log(props.location.search)\n    var data = qs.parse(props.location.search)\n    console.log(data)\n    return (\n      <MainPage\n        menu={this.menu}\n        logged_in={this.state.logged_in}\n      />\n    )\n  }\n\n  redirected = (props) => {\n    const [cookies, setCookie] = useCookies(['sessionid', 'XCSRF-TOKEN'])\n    var data = queryString.parse(props.location.search)\n    localStorage.setItem('sessionid',data['sessionid'])\n    localStorage.setItem('XCSRF-TOKEN',data['XCSRF-TOKEN'])\n    setCookie('sessionid', data['sessionid'], {path:'/'})\n    setCookie('XCSRF-TOKEN', data['XCSRF-TOKEN'], {path:'/'})\n    return (\n      <Redirect to=\"/\" />\n    )\n  }\n\n  profilePage = () => {\n    return (\n      <ProfilePage\n        menu={this.menu}\n      />\n    )\n  }\n\n  generateSchedulePage = () => {\n    return (\n      <GenerateSchedulePage\n        menu={this.menu}\n      />\n    )\n  }\n\n  preferencesPage = () => {\n    return (\n      <PreferencesPage\n        menu={this.menu}\n      />\n    )\n  }\n\n  searchCoursesPage = () => {\n    return (\n      <SearchCoursesPage\n        menu={this.menu}\n      />\n    )\n  }\n\n  searchCoursesGuestPage = () => {\n    return (\n      <SearchCoursesGuestPage\n        menu={this.menu}\n      />\n    )\n  }\n\n  searchCoursesSimplePage= () => {\n    return (\n      <SearchCoursesSimplePage\n        menu={this.menu}\n      />\n    )\n  }\n\n  viewFriendsPage = () => {\n    return (\n      <ViewFriendsPage\n        menu={this.menu}\n      />\n    )\n  }\n\n  flowchartPage = () => {\n    return (\n      <FlowchartPage\n        menu={this.menu}\n      />\n    )\n  }\n\n  compareSchedulePage = (props) => {\n    return (\n      <CompareSchedulePage\n        menu={this.menu}\n        params={props.match.params}\n      />\n    )\n  }\n\n  generateScheduleFriendsPage = (props) => {\n    console.log(props)\n    return (\n      <GenerateScheduleFriendsPage\n        menu={this.menu}\n        props={props}\n        params={props.match.params}\n      />\n    )\n  }\n\n  surveyPage = (props) => {\n    return (\n      <SurveyPage\n        menu={this.menu}\n        params={props.match.params}\n      />\n    )\n  }\n\n  surveyThanksPage = (props) => {\n    return (\n      <SurveyThanksPage\n        menu={this.menu}\n        params={props.match.params}\n      />\n    )\n  }\n\n  adminPage = (props) => {\n    return (\n      <AdminPage\n        params={props.match.params}\n      />\n    )\n  }\n\n  emailVerificationCompletePage = () => {\n    return (\n      <EmailVerificationCompletePage/>\n    );\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={this.mainPage} />\n          <Route exact path=\"/redirect\" render={this.redirected} />\n          {/* <Route exact path=\"/survey\" render={this.surveyPage} /> */}\n          {/* <Route exact path=\"/surveythanks\" render={this.surveyThanksPage} /> */}\n          {/* <Route exact path=\"/admin\" render={this.adminPage} /> */}\n          {!this.state.logged_in &&\n          <Route exact path=\"/login\" component={this.loginPage}/>\n          }\n          {!this.state.logged_in &&\n          <Route exact path=\"/search_courses\" component={this.searchCoursesGuestPage}/>\n          }\n          {!this.state.logged_in &&\n          <Route exact path=\"/search_courses_simple\" component={this.searchCoursesSimplePage}/>\n          }\n          <Route exact path=\"/search_courses\" component={this.searchCoursesPage} />\n          {/* <Route exact path=\"/register\" component={this.registerPage} /> */}\n          <Route exact path=\"/email_verified\" component={this.emailVerificationCompletePage} />\n          <Route exact path=\"/password_reset\" component={this.resetPasswordPage} />\n          <Route exact path=\"/password_reset_done\" component={this.resetPasswordDonePage} />\n          <Route path=\"/reset/:uidb64/:token\" component={this.resetPasswordConfirmPage} />\n          <Route exact path=\"/password_reset_complete\" component={this.resetPasswordCompletePage} />\n          {this.state.logged_in && \n          <Route exact path=\"/profile\" component={this.profilePage} />\n          }\n          {/* {this.state.logged_in && \n          <Route exact path=\"/flowchart\" component={this.flowchartPage} />\n          } */}\n          {this.state.logged_in && \n          <Route exact path=\"/generateSchedule\" component={this.generateSchedulePage} />\n          }\n          {this.state.logged_in && \n          <Route exact path=\"/preferences\" component={this.preferencesPage} />\n          }\n          {this.state.logged_in && \n          <Route exact path=\"/view_friends\" component={this.viewFriendsPage} />\n          }\n          {this.state.logged_in && \n          <Route exact path=\"/compare_schedule/:id/\" component={this.compareSchedulePage} />\n          }\n          {this.state.logged_in && \n          <Route exact path=\"/coordinate_schedule/\" component={this.generateScheduleFriendsPage} />\n          }\n          {this.state.logged_in && \n          <Route exact path=\"/coordinate_schedule/:id/\" component={this.generateScheduleFriendsPage} />\n          }\n          <Route exact path=\"/logout\" component={this.handle_logout} />\n          {/* <Route exact path=\"/404\" component={MainPage} /> change to 404 page */}\n          {this.state.logged_in\n          ? <Redirect to=\"/\" />\n          : <Redirect to=\"/login\" />\n          }\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n  // frontend/src/index.js\n  \n  import React from 'react';\n  import ReactDOM from 'react-dom';\n  import 'bootstrap/dist/css/bootstrap.min.css';       // add this\n  import './index.css';\n  import App from './App';\n  import * as serviceWorker from './serviceWorker';\n  import {CookiesProvider} from 'react-cookie';\n  \n  ReactDOM.render(<CookiesProvider><App/></CookiesProvider>, document.getElementById('root'));\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/Login.457b59bb.svg\";"],"sourceRoot":""}